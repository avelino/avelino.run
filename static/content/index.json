{
  "total-posts" : 160,
  "blog-posts" : 108,
  "quote-posts" : 52,
  "posts" : [ {
    "title" : "Depois de trabalhar anos de casa, voltei para dentro do escritório",
    "date" : "2025-09-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "A cada dia tem mais áreas e empresas abraçando a cultura do trabalho remoto.",
    "type" : "blog",
    "file-path" : "content/blog/depois-de-trabalhar-anos-de-casa-voltei-para-dentro-do-escritório.md"
  }, {
    "title" : "When Danger Knocks on the Door: Learning to Handle CVEs in Open Source",
    "date" : "2025-09-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/when-danger-knocks-learning-to-handle-cves-in-open-source",
    "content" : "TL;DR: _Vulnerabilities test trust. Fast fixes, clear communication, and disciplined process turn crises into credibility._\n\n> This weekend, my open-source project prestd was hit with its second CVE-like advisory (GHSA-p46v-f2x8-qp98). We rallied the community and shipped a fix within hours. Intense—and gratifying: proof that crises can teach trust.\n\n\n\nThat rollercoaster is a reminder: some projects sprint, others stall. To see why, let’s connect a fresh incident to infamous CVEs, grounded practice, and a few enduring ideas.\n\nWhat a CVE Really Signals\n\nA CVE (Common Vulnerabilities and Exposures) entry isn’t just a line in MITRE’s database. It’s a public test of how a project earns and maintains trust. As Bruce Schneier wrote in _Secrets and Lies_, “security is a process, not a product.” A CVE spotlights where the process broke—and where it can be strengthened.\n\nEric Raymond’s _The Cathedral and the Bazaar_ argues that “given enough eyes, all bugs are shallow.” The reality: those eyes need discipline, incentives, and time. Without them, the shallow becomes deep.\n\nTrust here is multi-dimensional. It is technical, social, and temporal: it rests on code quality, test coverage, reproducible builds, and safe defaults; on norms of disclosure, maintainer responsiveness, and independent review; and on how quickly an issue travels from report to triage, fix, release, and finally adoption.\n\nMost postmortems reveal that it’s rarely a single failure. It’s a chain: a sharp edge in API design, a missing test, an inattentive review, an overburdened maintainer, a release delayed by packaging friction, and then slow adoption downstream. CVEs make that chain visible.\n\nWhen Time Was the Differentiator\n\nHeartbleed (OpenSSL, 2014 – CVE-2014-0160) — the patch landed quickly, but ecosystem patching took months. Fixing code is the easy part; getting updates deployed is the real work. (NVD link)\n\nLog4Shell (Log4j, 2021 – CVE-2021-44228) — fixes were prepared under embargo, but the package’s ubiquity demanded weeks of stabilization. A classic tragedy-of-the-commons case. (NVD link)\n\nJASBUG (Microsoft, 2015 – CVE-2015-0008) — a design flaw that persisted for more than a year; sometimes architecture, not effort, is the bottleneck. (NVD link)\n\nXZ Utils Backdoor (2024 – CVE-2024-3094) — malicious code slipped into the supply chain; rollback was the fix, and collective vigilance made the difference. (NVD link)\n\nprestd (this case) — advisory published, fix shipped quickly, transparency preserved. No CVE (yet), but already a sign of maturity. (GHSA advisory)\n\nThe Race Against Delay\n\nWell-run projects often ship fixes in days, but public databases and ecosystem updates can lag by weeks. That gap—between “fixed” and “deployed”—is where attackers thrive. Time is typically lost in report quality (incomplete details drive back-and-forth), reproduction (flaky environments and missing fixtures), patch and review (risky fixes need independent eyes and backports), release engineering (packaging, signing, changelogs, and pipelines), and finally adoption (downstreams must notice, prioritize, test, and deploy). The lesson isn’t “no bugs,” it’s “minimize delay.”\n\nA useful lens is queueing theory: when triage and release run “hot” (utilization near 100%), wait times explode. Security benefits from deliberate slack—reserved capacity for surprises.\n\nWhy Some Projects Respond Faster\n\nTeams respond faster when ownership is clear (named security team, on-call, escalation paths), playbooks are pre-approved (conduct under embargo, scoping, who to involve), releases are boring and automated (tags, signatures, reproducibility), observability is real (time-to-triage, time-to-fix, time-to-adopt), and the culture privileges blameless learning. If you can’t measure cycle times by stage, the next incident will measure them for you—publicly.\n\nCoordinated Vulnerability Disclosure, Practically\n\nCoordinated Vulnerability Disclosure (CVD) balances user safety and transparency when there’s a trusted intake channel (SECURITY.md, security@, portal) with responder rotation. A healthy flow acknowledges the report within 24–72 hours, requests a POC, and agrees on an embargo; reproduces the issue in a controlled environment, assigns severity, and maps affected versions; develops the fix on a private branch with least-privilege review; prepares the advisory (CVE or GHSA), release notes, and upgrade guidance; coordinates publication timing, signs and distributes artifacts, notifies registries and distros; and, after release, publishes the postmortem, credits the reporter, and outlines hardening steps.\n\nA typical timeline might be: Day 0, receipt and acknowledgment with a triage owner; Days 1–2, reproduction confirmed, severity and scope defined, embargo agreed; Days 2–4, fix implemented with tests, backports prepared, advisory drafted; Day 5, coordinated publication, release cut, downstreams notified; Days 5–10, monitoring, hotfixes if needed, and postmortem published.\n\nSeverity Is Not the Whole Story\n\nCVSS helps, but it isn’t sufficient. Environmental and temporal factors dominate real risk: exploitability depends on configuration, exposure, and available mitigations; impact varies with data sensitivity, privilege boundaries, and blast radius; and patch risk matters—a theoretically “low” severity can be urgent if the fix is trivial and consumption massive. Use CVSS as input, not the decision function.\n\nSupply Chain Security, Pragmatically\n\nIn the supply chain, defense in depth means using SLSA as a maturity guide to guarantee provenance and verifiable builds; signing artifacts with Sigstore (cosign) and enforcing verification in CI/CD; publishing useful SBOMs accompanied by VEX to explain unaffected cases and cut noise; betting on reproducible builds by pinning compilers and base images; and “vendor less, review more”—remove gratuitous dependencies and prefer well-maintained libraries.\n\nA Maintainer’s Playbook (Practical and Repeatable)\n\nThe maintainer’s playbook is simple and repeatable: acknowledge and triage (confirm receipt, assess severity, identify affected versions and configurations), secure the channel (move to a private, trusted medium, respect reasonable embargoes), reproduce and test (MRE and a failing test before the fix), patch with independent review prioritizing least-risk, prepare releases (backports when needed, changelog, notes, and upgrade guide), coordinate disclosure (request a CVE or publish a GHSA with CWE, severity, and credits), notify downstreams (signed releases, registries, distros, and integrators), and close with postmortem and hardening (document root cause, remove footguns, automate guardrails). Two tactical additions change outcomes: keep a private “security staging” branch with CI ready for hotfixes, and maintain a pre-approved backport matrix to eliminate debate during incidents.\n\nHabits That Pay Off Before the Next CVE\n\nThere are habits that compound before the next incident: reduce fragile dependencies by preferring simple, audited components; automate scanning (SAST/DAST, secrets, dependency and container scans in CI); invest in tests and fuzzing where risk is concentrated; publish SECURITY.md and security.txt to create clear reporting paths; ship SBOMs and sign releases to raise traceability and upgrade confidence; and practice least privilege by default with narrow scopes, time-bound tokens, and safe defaults.\n\nGovernance and Funding Realities in OSS Security\n\nOpen source security often fails on incentives, not technique. Maintainers are volunteers or underfunded, and incident response competes with life; corporate consumers frequently externalize risk and internalize benefit, delaying updates for “business reasons”; and funding models rarely tie revenue to security outcomes—reputation does not scale alone. What works in practice includes maintenance-focused sponsorships, paid LTS, funded security audits, and vendor policies that reward prompt updates.\n\nBooks That Ground the Mindset\n\nAlguns livros ajudam a calibrar a mentalidade: _Secrets and Lies_ (Bruce Schneier) lembra que confiança é processo; _The Cathedral & the Bazaar_ (Eric S. Raymond) mostra o poder da transparência com disciplina; _Security Engineering_ (Ross Anderson) expõe o caráter técnico, social, político e econômico da segurança; _The Phoenix Project_ (Gene Kim) ilustra como falhas viram aprendizado; e _Antifragile_ (Nassim Nicholas Taleb) argumenta que sistemas podem ganhar com o estresse quando bem desenhados.\n\nWhat This Episode Teaches\n\nYour prestd incident isn’t a global meltdown like Heartbleed. It’s a clear, useful signal: fast fixes, transparent communication, and timely updates build trust. That’s the work. The deeper lesson: cultivate structures—governance, automation, and incentives—that make the “fast, transparent, adoptable” path the default.\n\nEvery CVE (or GHSA) is both a scar and a badge. Open source isn’t just code; it’s shared infrastructure that deserves guardrails more than heroics.\n\nIn Closing\n\nHandling a CVE isn’t about erasing risk. It’s about turning risk into credibility. Ship the fix fast, communicate honestly, and help the ecosystem update. That’s how vulnerabilities become learning curves—not landmines.\n\n---\n\nAppendix: Practical Templates\n\nAdvisory (GHSA/CVE) Skeleton\n\n- Affected package and versions\n- Summary and impact (what an attacker can do)\n- Vulnerable configurations and preconditions\n- Severity (CVSS base, temporal/environmental notes)\n- Proof of concept (optional or delayed)\n- Mitigations and workarounds (if any)\n- Fixed versions and upgrade guidance\n- Credits and acknowledgments\n- Timeline (received, confirmed, fixed, released)\n\nRelease Notes Skeleton (Security Release)\n\n- Summary of fixes with issue/advisory links\n- Upgrade notes (breaking changes, deprecations)\n- Backport coverage by branch\n- Verification steps (hashes, signatures)\n\nCoordinated Disclosure Email (Reporter → Maintainer)\n\n- Clear subject: Security issue in [project-name] [version]\n- Steps to reproduce and minimal POC\n- Impact description and likely severity\n- Affected versions and configurations\n- Suggested embargo window and availability for coordination\n\nPostmortem Outline\n\n- What happened (narrative timeline)\n- Technical root cause and contributing factors\n- Detection and response timeline metrics\n- What went well / what didn’t\n- Concrete preventive actions with owners and dates",
    "type" : "blog",
    "file-path" : "content/blog/2025-09-when-danger-knocks-learning-to-handle-cves-in-open-source.md"
  }, {
    "title" : "Cultivating a Healthy Codebase: Beyond Code That Just Works",
    "date" : "2025-08-05T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/cultivating-a-healthy-evolvable-codebase",
    "content" : "In software engineering, there's an inconvenient truth every experienced developer knows: the difference between a project that accelerates over time and one that grinds to a halt lies not in the brilliance of its initial code, but in its ability to evolve.\n\nLet's be honest. We've all felt that chill down our spine when tasked with modifying a critical module. That fear that a small change could trigger a cascade of unpredictable side effects. This feeling is a symptom. The diagnosis? A hostile codebase.\n\nA hostile codebase is expensive. It drains productivity, frustrates developers, and turns innovation into a risk management exercise. The goal of this article is to dive deep into the principles and practices that transform a software liability into a strategic asset: a healthy, friendly, and evolvable codebase.\n\nThe Why: Architecture as an Enabler of Agility\n\nThe agility to implement, test, and change behaviors doesn't happen by chance. It is a direct consequence of deliberate architectural decisions. The ultimate goal of a good architecture is to minimize the cost of change over the software's lifecycle.\n\nThe Dependency Rule and Clean Architecture\n\nRobert C. Martin, in his seminal book Clean Architecture, provides us with the most powerful guideline: The Dependency Rule.\n\n> High-level modules should not depend on low-level modules. Both should depend on abstractions. Source code dependencies should always point inwards, towards higher-level policies.\n\nIn practical terms, this means that your business logic (the rules that generate value for the company) should know nothing about the database you use, the web framework you've chosen, or the user interface you render.\n\n\n(Source: The Clean Coder Blog)\n\nWhy is this so transformative?\n1. Inherent Testability: If your business logic doesn't depend on a real database or web server, you can test it in milliseconds, using test doubles (mocks/stubs) in place of dependencies. Testing fast is the foundation for changing fast.\n2. Interchangeability: Imagine this scenario: the marketing team requests a new feature to log customer anniversary events, which can have varied data structures. To implement this efficiently, the engineering team concludes that the best approach is to migrate the profile storage to PostgreSQL to leverage the powerful jsonb data type.\n     In a coupled architecture, this would be a nightmare. The business logic would be entangled with calls to the old database, requiring a dangerous, high-risk rewrite across multiple parts of the system.\n     In a clean architecture, the business logic (the heart of the system) doesn't know which database is used. It only communicates with an abstraction, an interface like IProfileRepository. Implementing this new feature becomes a surgical task: we create a new PostgresProfileRepository class that implements the existing interface and plug it into the system. The core of the software remains untouched, stable, and oblivious to this major infrastructure change. The technical decision serves the business, without the business becoming a hostage to the technology.\n3. Focus: Developers working on business logic can focus on the business problem (what are the rules for an anniversary event?) without being distracted by the complexities of the infrastructure.\n\nThe SOLID Principles at the Micro Level\n\nIf Clean Architecture is the urban plan for our software city, the SOLID principles are the building codes for each structure. They help us implement the Dependency Rule at the class and module level.\n\n (S) Single Responsibility Principle: A class should have one, and only one, reason to change. A TaxCalculator class should not be responsible for saving the result to the database. This isolates the impact of changes.\n (O) Open/Closed Principle: Software should be open for extension but closed for modification. Instead of changing an existing class to add a new payment type, you create a new implementation of a PaymentMethod interface. This prevents breaking what already works.\n (L) Liskov Substitution Principle: Subtypes must be substitutable for their base types without altering the correctness of the program. This ensures that the abstraction you've created is reliable and that polymorphism works as expected.\n (I) Interface Segregation Principle: No client should be forced to depend on methods it does not use. Creating small, focused interfaces (Payable, Refundable) is better than a monolithic FinancialManager interface.\n (D) Dependency Inversion Principle: This is the heart of the Dependency Rule at the code level. Instead of a UserService directly instantiating a PostgresRepository, it depends on an IUserRepository interface. The concrete implementation (Postgres, MongoDB, etc.) is injected from the outside.\n\nThe How: Disciplined Practices for Maintaining Health\n\nHaving a good architectural design is not enough. We need daily disciplines to build and maintain quality.\n\nTest-Driven Development (TDD) is Not About Testing\n\nContrary to its name, the primary benefit of TDD is not the resulting test suite (though that's an excellent side effect). TDD is a design discipline.\n\nThe Red-Green-Refactor cycle forces us to:\n1. Red (Write a failing test): Think first about the desired interface and behavior. What do I want this code to do? How will I use it? This forces the creation of clean, focused APIs.\n2. Green (Write the simplest code to pass the test): Focus on making one thing work, avoiding over-engineering.\n3. Refactor (Improve the code's design): With the safety of the test suite, we can now improve the internal structure of the code. This is where we apply SOLID principles, remove duplication, and increase clarity, knowing we haven't broken anything.\n\nTDD is what makes refactoring safe and, therefore, feasible to practice continuously.\n\nRefactoring: The Continuous Hygiene of Code\n\nMichael Feathers, in Working Effectively with Legacy Code, brilliantly defines legacy code: legacy code is simply code without tests. Why? Because without tests, we cannot refactor it safely.\n\nRefactoring should not be a project scheduled for the next quarter. It should be a continuous practice, like washing the dishes after cooking. It is the Boy Scout Rule applied to software:\n\n> Always leave the campground cleaner than you found it.\n\nWhen fixing a bug or adding a small feature, take the opportunity to make a small improvement: rename a variable to be clearer, extract a complex method into smaller ones, break a dependency. This compounding effect of improvements is what prevents the codebase from deteriorating.\n\nThe Culture: The Human Factor and Technical Leadership\n\nNone of the practices above survive in a vacuum. They need to be sustained by an engineering culture that values quality, collaboration, and, crucially, technical leadership.\n\nThe Staff Engineer's Perspective: The Architect and Guardian of Codebase Health\n\nThe existence of a healthy codebase is not an accident but the result of deliberate and persistent technical leadership. In her book The Staff Engineer's Path, Tanya Reilly deconstructs the senior engineer (Staff+) role, showing that their greatest contribution comes not from the volume of code they write, but from their ability to act as a force multiplier for the entire team. In the context of a codebase, this multiplication takes very concrete and profound forms.\n\nLet's abandon the simplistic view that the Staff Engineer just writes the hardest code. Their real job is to ensure that the easy code to write is also the right, sustainable code.\n\n1. Seeing the Forest, Not Just the Trees: Big-Picture Thinking\n\nOne of the fundamental distinctions Reilly points out is the shift from local optimizations to a systemic view.\n\n A Senior Engineer sees a performance problem (an N+1 query, for example), fixes it efficiently, and moves on. The local problem is solved.\n A Staff Engineer sees the same problem and asks, Why did this happen? Why didn't our ORM, our code review tools, or our tests warn us about this? This is the third time this month we've fixed an N+1 issue. Does our data access layer promote this type of error? Do we need a new abstraction or a specific linter to prevent this entire class of bugs in the future?\n\nThis is the application of Big-Picture Thinking. The Staff Engineer isn't just fixing a leak; they are analyzing the entire plumbing system to understand why the pipes keep bursting. For the codebase, this translates to:\n Influencing Architecture: Advocating for architectural changes that eliminate entire classes of problems, rather than applying countless band-aids.\n Defining Technical Strategy: Helping to draw a map of where the codebase needs to evolve in the next 1-2 years to support business goals, identifying the most strategic technical debt to pay down now.\n\n2. The Glue Work: The Invisible Work That Upholds Quality\n\nReilly gives special attention to Glue Work—the often invisible and unglamorous work that connects people, systems, and processes. In a codebase, this glue work is the immune system that keeps it healthy. The Staff Engineer is the primary agent of this work, acting as the guardian of technical quality:\n\n Establishing and Automating Standards: It's not enough to say write tests. The Staff Engineer ensures the CI/CD pipeline is fast, reliable, and blocks code without adequate coverage. They define linting and formatting rules that are applied automatically, making the quality standard the path of least resistance.\n Improving the Developer Experience (DX): A build that takes 15 minutes? A development environment that takes a day to set up? This is friction that encourages shortcuts and frustrates the team. The Staff Engineer invests time in optimizing these tools, knowing that a fast feedback loop is essential for safe refactoring and experimentation.\n Writing the Important Documentation: Not the documentation that repeats what the code already says, but the documentation that explains the why. Documenting an architectural decision, the reasons for choosing one technology over another, or the trade-offs of a complex module. This is the knowledge that prevents future teams from repeating past mistakes.\n\n3. You're a Role Model Now: Leading by Example\n\nThe Staff Engineer leads by example. Their code is not just functional; it is a teaching tool.\n\n Exemplary Pull Requests: Their PRs are clear, well-described, with tests that not only prove functionality but also document behavior. They demonstrate the patterns the team should follow.\n Code Reviews That Raise the Bar: In a code review, they go beyond missing semicolon. They ask strategic questions: Is this new dependency aligned with our long-term vision? Have we considered how this approach will scale? Is there a simpler way to solve this that will be easier for the next developer to maintain? They use the CR as a mentoring opportunity, raising the technical level of the entire team.\n\nIn short, a Staff Engineer's contribution to a friendly and evolvable codebase is less about their individual output and more about creating a socio-technical system where quality is a natural outcome. They don't just build good buildings (features); they design the city (architecture), write the zoning laws (standards), and ensure the transportation routes (pipelines and DX) are efficient for all the other builders. They transform codebase health from a heroic individual effort into a collective, manageable responsibility.\n\nConclusion: An Investment with an Exponential Return\n\nBuilding and maintaining a friendly codebase is not a luxury; it's an economic necessity for any tech company that wants to move quickly and sustainably.\n\nIt is an effort that combines an architecture focused on separation of concerns, daily practices of TDD and refactoring, and a culture of collaboration led by engineers who think systemically. The initial cost of adopting these disciplines is paid back multiple times over by increased development velocity, a decrease in critical bugs, and, perhaps most importantly, a happier and more engaged engineering team.\n\nA healthy codebase is a living organism. It breathes, grows, and adapts. And our job as engineers is to be its best caregivers.\n\n> We talked about staff responsibility, but this extends to all team members (especially leaders). It's important that each team member takes responsibility and works together to maintain healthy code.\n\n---\n\nFurther Reading\n\n Martin, Robert C. Clean Code: A Handbook of Agile Software Craftsmanship. Prentice Hall, 2008.\n Martin, Robert C. Clean Architecture: A Craftsman's Guide to Software Structure and Design. Prentice Hall, 2017.\n Feathers, Michael C. Working Effectively with Legacy Code. Prentice Hall, 2004.\n Reilly, Tanya. The Staff Engineer's Path: A Guide for Individual Contributors Navigating Growth and Change. O'Reilly Media, 2022.\n Fowler, Martin. Refactoring: Improving the Design of Existing Code* (2nd Edition). Addison-Wesley, 2018.",
    "type" : "blog",
    "file-path" : "content/blog/2025-08-cultivating-a-healthy-evolvable-codebase.md"
  }, {
    "title" : "The Code Doesn't Speak for Itself: Why Experienced Tech Professionals Must Master the Art of Negotiation",
    "date" : "2025-07-16T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-code-doesnt-speak-for-itself-negotiation-for-tech-professionals",
    "content" : "In the universe of software engineering and data science, we operate under the empire of logic and merit. An elegant piece of code, an algorithm that saves millions in cloud costs, or a model that boosts user retention by 5% are irrefutable truths. We believe, almost as an article of faith, that our work will speak for itself. We expect technical excellence to be noticed and, naturally, rewarded. However, for experienced professionals, this is one of the most dangerous fallacies for career growth. Value, no matter how obvious it may seem to you, needs to be translated, communicated, and yes, negotiated.\n\n\n\nThe Anatomy of the Difficult Conversation: Aligning Perceptions of Value\n\nThe root of the problem is rarely bad faith. Your manager is not necessarily trying to undervalue you. The challenge is that you and the leadership are operating with different sets of information and priorities. This is where the teachings of Difficult Conversations: How to Discuss What Matters Most become an essential guide. The book argues that the fundamental mistake we make is assuming difficult conversations are about facts, when they are actually about conflicting perceptions and feelings.\n\n> Difficult conversations are almost never about getting the facts right. They are about conflicting perceptions, interpretations, and values. They are not about what a contract says, but about what a contract means.\n\nFor a technical professional, the What Happened? conversation is our strong suit. You don't say, I worked hard. You say, I led the project to refactor our data pipeline, which reduced latency by 40% and allowed the BI team to generate real-time reports, unlocking X new business initiatives. You use facts, metrics, and business impact as your foundation, separating the person (you) from the problem (the misalignment between contribution and compensation). The challenge is to understand that your facts, however solid, do not represent the whole story for the other party.\n\nStrategic Timing and Tactical Empathy: When and How to Negotiate\n\nOnce you are armed with the data that quantifies your value, the question becomes one of timing. This is where the wisdom of Chris Voss, a former FBI hostage negotiator and author of Never Split the Difference, is transformative. Voss teaches that the best moment to negotiate is right after you have created value for the other side. Did you just deliver a critical project ahead of schedule? Did you close a security vulnerability that could have cost millions? That is your moment of maximum leverage. The value you provided is fresh and undeniable.\n\nThe approach, however, is not confrontational. Voss advocates for tactical empathy—understanding your manager's perspective, not to agree with it, but to comprehend it.\n\n> Tactical empathy is understanding the feelings and mindset of another in the moment and also hearing what is behind those feelings so you can increase your influence in all the moments that follow.\n\nYour negotiation should be framed as a solution for them. I know that retaining senior talent is a priority for you. I want to continue delivering this level of impact here, and for that to be sustainable for me in the long term, we need to ensure my total compensation reflects this contribution. You are not asking; you are collaborating toward a mutual goal: keeping a high-performing asset (you) motivated and productive.\n\nStrategic Negotiation: When to Accept Less (Temporarily)\n\nWhat if the opportunity of your dreams requires a lateral move or even a small step back in compensation? For an experienced professional, this can be a masterstroke, if done consciously. Perhaps you are migrating from web development to Machine Learning, or you want the experience of scaling a system from 1 million to 100 million users. In these cases, you are negotiating for something beyond salary: experience and career capital.\n\nThe key is to treat this as an explicit negotiation. In the initial conversation, you might say, I understand this is the budget for the position. My goal is to demonstrate X and Y within the next 6 months. Once that value is clearly delivered, I'd like to schedule a conversation to reassess and align my compensation with the market standard for someone with that contribution. This transforms acceptance into a conditional agreement. And to ensure your achievements don't get lost in the day-to-day, the practice of keeping a Brag Document, as popularized by Julia Evans, becomes your most powerful tool. It's not vanity; it's a factual record for a future, data-driven conversation.\n\nConclusion: You Are the Architect of Your Career\n\nFor tech professionals, senior growth transcends the ability to write code or analyze data. It requires the ability to articulate value, influence decisions, and architect one's own career. Negotiating your compensation, especially after delivering significant results, is not an act of confrontation. It is the logical conclusion of your work: ensuring that the system (your career and your company) properly recognizes and rewards the efficiency and value you have injected into it. Your code is brilliant, but it's your voice that will ensure your impact is fully understood and valued.",
    "type" : "blog",
    "file-path" : "content/blog/2025-07-16-the-code-doesnt-speak-for-itself-negotiation-for-tech-professionals.md"
  }, {
    "title" : "LLMs and the Future of Development: Amplifiers or Threats to Product Thinking?",
    "date" : "2025-06-13T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/llms-future-development-product-thinking",
    "content" : "This is the conclusion of our series about the evolution of product delivery since 2022. If you haven't read the previous parts, I recommend starting with the first part about technical improvements and then the second part about business impact and user experience, to have the complete context of this analysis.\n\n\n\nWe arrive at the most fascinating and controversial aspect of current software development evolution: how Large Language Models fit into the improvement trajectory we've analyzed. This isn't a peripheral issue; it's central to understanding whether the positive evolution we've documented will continue or if we'll face new challenges that could compromise the gains we've achieved.\n\nThe Role of LLMs: Amplifiers or Distractors of Improvement?\n\nThe emergence of Large Language Models as everyday tools for developers adds a fascinating and complex layer to this evolution. It's impossible to discuss the improvement in deliveries from 2022 to now without addressing how LLMs fit into this trajectory, because they represent both an opportunity and a risk for the continuity of this positive evolution.\n\nLLMs are contributing to improvements in genuinely transformative ways. The acceleration of routine tasks is real and measurably significant. Boilerplate code generation, unit test creation, basic documentation elaboration, and even legacy code refactoring are tasks that can be dramatically accelerated with intelligent use of LLMs. More importantly, this acceleration isn't just about speed; it can effectively free up developers' mental capacity to focus on more complex problems and strategic product thinking.\n\nThe facilitation of exploration and prototyping also represents a qualitative advance. LLMs allow developers to test ideas and approaches more quickly and with lower initial investment, creating space for more experimentation and iteration. This is particularly valuable for product-minded developers, because it allows exploring more alternatives before committing to a specific direction.\n\nHowever, LLMs also introduce risks that require constant vigilance and dramatically reinforce the need for product thinking as a safeguard. The risk of superficiality is real and dangerous. The ease of generating code can seduce developers into accepting solutions without deeply understanding the underlying problem or the solution's implications. This is precisely the type of thinking that the product-minded developer needs to actively combat.\n\nThe quality and security of LLM-generated code varies drastically and doesn't always meet the standards necessary for production software. Human curation, guided by deep understanding of the product and business requirements, becomes not just valuable but essential. Product-minded developers are uniquely positioned to exercise this curation effectively, because they understand not just the code, but the business context and long-term implications of different technical choices.\n\nPerhaps the most subtle but potentially most harmful risk is excessive focus on the tool at the expense of the problem. Enthusiasm for new technologies can divert attention from what really matters: solving real user problems and adding measurable business value. This is a pattern we see repeatedly in the tech industry, and LLMs aren't immune to it.\n\nLLMs are, fundamentally, tools. Powerful and transformative tools, yes, but still tools. Their real value for improving deliveries only materializes when they're guided by strong product thinking. They can help developers build faster, but it's exclusively product thinking that ensures we're building the right thing, in the right way, for the right reason.\n\nConclusion: Enhanced Deliveries Through Strategic Human Intelligence\n\nThe journey from 2022 to today offers compelling evidence that product thinking isn't a passing trend or consulting jargon, but a fundamental pillar for sustainable evolution of software engineering. The improvements we observe in software deliveries whether in speed, strategic alignment with business, or user experience quality are direct reflections of teams and individual developers who have deeply internalized the importance of understanding not just the technical how, but the strategic why and the real impact of their work.\n\nThis evolution is particularly notable because it happened organically, emerging from practice and experience, not from corporate mandates or imposed methodologies. Developers discovered for themselves that when they truly understand the problem they're solving and the value they're creating, their work becomes not just more effective, but more satisfying and meaningful.\n\nLLMs add a fascinating new dimension to this scenario, offering genuine potential to dramatically amplify developers' capabilities. They represent one of the most powerful tools we've ever had available for accelerating software development. However, paradoxically, they also reinforce the critical need for sharp human discernment and clear strategic vision qualities that are inherent to the product-minded developer.\n\nThe fundamental challenge remains unchanged, even in a world with LLMs: utilize all available tools and knowledge not to simply produce more code, but to deliver solutions that truly transform and add lasting, measurable value. The evolution of recent years is clear and encouraging, demonstrating that when developers embrace a product mindset, the entire development ecosystem benefits.\n\nProduct thinking continues to be the compass that guides us in the right direction, especially in a rapidly transforming technological environment. It's not just about writing better code; it's about deeply understanding why we're writing code, for whom, and how our work connects to larger and more meaningful objectives. This understanding is what transforms developers into true value architects, capable of navigating any technological change while maintaining focus on what really matters: creating solutions that make a real difference in people's lives and business success.\n\n> This is the conclusion of the series about product delivery evolution. If you've reached here without reading the previous parts, I recommend starting with the first part and second part for the complete experience.",
    "type" : "blog",
    "file-path" : "content/blog/2025-06-13-llms-future-development-product-thinking.md"
  }, {
    "title" : "From Theoretical to Tangible: How Product Thinking Generated Real Business Results and Transformed User Experience",
    "date" : "2025-06-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/product-thinking-real-business-results-user-experience",
    "content" : "If you haven't read the first part of this series about The Silent Revolution, I recommend starting there to understand the complete context of the transformation we're analyzing.\n\n\n\nAfter exploring how technical improvements materialized since 2022, we arrive at the heart of the transformation: the moment when product thinking ceased being an aspirational concept to become an engine of measurable results for both business and user experience.\n\nFocus on Business Impact: From Requirement to Reality\n\nThe most notable transformation since 2022 is perhaps how the focus on business impact migrated from the theoretical realm to everyday practice. In 2022, we talked about the need for this focus; today, we see its concrete materialization in the corridors of tech companies. Product-minded developers are no longer occasional guests in strategic discussions; they've become active and valued participants in product roadmap decisions and business KPI definition.\n\nThis evolution reflects a more mature understanding by leadership that product-minded developers bring a unique and valuable perspective: they understand both technical possibilities and limitations, and can translate business objectives into executable solutions. More importantly, they question assumptions and propose alternatives that purely business stakeholders might not have considered.\n\nThe use of data to guide development has also evolved dramatically. Developers aren't just consuming product usage dashboards; they're actively participating in metrics definition, questioning how new features can be measured in terms of impact on company results, and more critically, using this data to influence technical decisions. They've learned to ask questions like: How will we know if this implementation is working? even before starting to code.\n\nValue-based prioritization has become second nature. The question What's the business impact of this? has evolved from a formal check to a constant mental filter. This change is profound because it fundamentally alters how technical problems are approached. Developers begin evaluating not just the technical elegance of a solution, but its effectiveness in moving business metrics.\n\nThe direct consequence is more consistent and predictable business result delivery. Software ceases to be perceived as a necessary cost center and consolidates as an active growth engine. Whether optimizing existing operations, opening new markets through innovative features, or directly increasing revenue through better conversion and user retention, software developed with product thinking demonstrates tangible and trackable ROI.\n\nUser Experience (Customer) Improvement: The Heart of Value Delivery\n\nUser experience has always been theoretically central to product thinking, but from 2022 onwards, we've witnessed its elevation from concept to practical obsession. Developers have viscerally internalized that every line of code they write has a direct and measurable impact on the customer journey. This awareness has fundamentally transformed collaboration between disciplines.\n\nCollaboration with designers and UX researchers has evolved from functional coordination to true strategic partnership. Product-minded developers have learned that their technical perspective not only complements the design process but often enriches it in unexpected ways. They bring insights about what's technically possible within performance and resource constraints, allowing designers to explore more ambitious and innovative solutions. More importantly, they anticipate technical implications of UX decisions, preventing problems that would only manifest in production.\n\nThis deeper partnership has resulted in a remarkable ability to anticipate user needs and friction points. Developers no longer wait for detailed specifications about edge cases; they identify them proactively, thinking about how real users will interact with the solution under real, not ideal, conditions. They ask questions like: What if the user has slow internet?, What if they try to do this on mobile?, What if they make this common mistake?. This anticipation translates into more robust software and smoother experiences.\n\nThe focus on performance, accessibility, and usability has definitively migrated from the nice-to-have category to an essential component of any delivery. Product-minded developers understand that a slow application is an application that fails in its mission, regardless of how elegant the code might be. They've internalized that accessibility isn't compliance; it's market expansion. They know that usability isn't cosmetic; it's fundamental for adoption and retention.\n\nThe result is software that transcends mere functionality to become genuinely pleasant to use. This isn't a minor achievement; in a saturated market, user experience is often the decisive competitive differentiator. Software developed with this mindset solves users' problems efficiently, contributing directly to customer satisfaction, retention, and advocacy.\n\nBut there's a disruptive element that adds complexity to this entire evolution: the emergence of Large Language Models as everyday tools for developers. In the final part of this series, we'll explore how LLMs fit into this improvement trajectory, representing both an opportunity and a risk for the continuity of this positive evolution, and what this means for the future of software development.\n\n> This is the second part of the series. If you missed the first part, I recommend reading it before continuing. Next week, we'll conclude by exploring the role of LLMs in this evolution.",
    "type" : "blog",
    "file-path" : "content/blog/2025-06-11-product-thinking-real-business-results-user-experience.md"
  }, {
    "title" : "The Silent Revolution: How Product-Minded Developers Transformed Software Delivery Since 2022",
    "date" : "2025-06-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/silent-revolution-product-minded-developers-software-delivery-2022",
    "content" : "In 2022, I dove deep into the crucial importance of Product-Minded Developers. The thesis was simple but powerful: go beyond code for code's sake, focusing on solving real business problems and driving the company toward its objectives. It was about transforming lines of code into tangible value.\n\nFast-forward to today, much has evolved. New technologies, like LLMs, have become ubiquitous, integrating into developers' workflows. But beyond the tools, the fundamental question remains: how has that product mindset translated into concrete improvements in software delivery? What has effectively changed for the better from 2022 to now?\n\nWhat Have We Delivered from 2022 to Today? Continuous and Measurable Improvement\n\nThe transformation we've observed since 2022 in teams that embraced product thinking goes far beyond mere superficial changes in processes. We're witnessing a silent but profound revolution in how software is conceived, developed, and delivered. This evolution manifests first in development cycles, which have become significantly more agile and lean. When developers truly understand the why behind each feature they build, a laser focus naturally emerges on what's essential versus what's merely desirable.\n\nThis deep understanding of purpose results in something business metrics capture immediately: a notable reduction in Time to Market for features that truly move the business needle. It's not just about building faster, but building with strategic intelligence. Teams have organically refined their agile practices, discovering that when each team member understands the impact of their work, deliveries naturally become more frequent and incremental, because there's shared clarity about what constitutes deliverable value.\n\nParallel to this, we observe a fundamental shift in software's adherence to business needs. The constant dialogue between developers and product areas has evolved from a formality to an organic necessity. Product-minded developers don't wait for complete specifications; they ask questions, challenge assumptions, and propose solutions that often surprise business stakeholders with their strategic depth. The result is solutions intrinsically linked to the company's strategic objectives, where every line of code written has a clear and measurable purpose.\n\nQuality, both perceived and technical, has experienced equally impressive evolution. There's an interesting paradox here: when developers care deeply about the problem they're solving, they naturally build more robust and scalable solutions. This isn't coincidence; it's consequence. A deep understanding of the problem leads to more solid architectural decisions, because the developer can anticipate how the solution will need to evolve. The concern shifts from merely it works to encompass it works well, is maintainable, is scalable, and solves the user's problem effectively in the long term.\n\nIndustry data corroborates this evolution. The State of DevOps Report consistently demonstrates that high-performing teams, which generally internalize many product thinking principles like focus on value flow and rapid feedback, continue improving fundamental metrics such as deployment frequency and lead time for changes, while maintaining low failure rates. This isn't a statistical accident; it's empirical evidence that when developers think like product owners, the entire delivery cycle optimizes itself.\n\nBut technical improvements are just one face of this transformation. The real revolution happened when developers began to understand and directly influence business impact and user experience. In the next part of this series, we'll explore how this mindset migrated from the theoretical realm to tangible business results, and how collaboration with other disciplines evolved to create genuinely transformative user experiences.\n\n> This is the first part of a series about the evolution of product delivery. Continue reading to discover the business impact and user experience transformation.",
    "type" : "blog",
    "file-path" : "content/blog/2025-06-09-silent-revolution-product-minded-developers-software-delivery-2022.md"
  }, {
    "title" : "Mental Obesity: When Consuming Knowledge Becomes a Cognitive Burden",
    "date" : "2025-05-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/mental-obesity-consuming-knowledge-cognitive-burden",
    "content" : "We live in the age of information, where access to knowledge is virtually limitless. Books, courses, podcasts, articles, videos — everything is just a click away. For ambitious professionals, this abundance seems like a blessing. But increasingly, many people find themselves consuming content relentlessly without applying what they learn in real life. This phenomenon is known as mental obesity.\n\n\n\nWhat Is Mental Obesity?\n\nMental obesity refers to the excessive accumulation of information without proper digestion, reflection, or practical implementation. Just as physical obesity results from consuming more calories than the body can burn, mental obesity stems from absorbing more knowledge than the mind can process or transform into action.\n\nThis concept is closely linked to cognitive overload, a state where the brain’s processing capacity is exceeded, leading to mental fatigue, difficulty focusing, impaired learning, and reduced productivity. According to John Sweller's Cognitive Load Theory, the human brain has a limited working memory, and overwhelming it with disconnected content compromises both decision-making and long-term retention.\n\nThe Trap of Knowledge Without Execution\n\nIn high-performance environments — particularly startups and tech-driven companies — it's common to see people chasing non-stop learning. But without active application, this accumulation of knowledge often leads to frustration, the illusion of progress, and a paralyzing sense of stagnation.\n\nAs shown in a study published in Ciência & Saúde Coletiva, mere knowledge acquisition is not sufficient to produce behavioral change. Transformation requires embodiment — turning theory into lived experience.\n🔗 Access the article\n\nPsychological Effects of Mental Obesity: The Mind Under Constant Pressure\n\nMental obesity is not just a metaphor — it’s a phenomenon with real psychological consequences. Continuous exposure to high volumes of information without pauses or reflection creates a state of chronic hyperstimulation. The prefrontal cortex, responsible for executive functions like planning, decision-making, and inhibitory control, becomes overloaded. This often leads to declining mental clarity, diminished analytical capacity, and difficulty in setting priorities.\n\nOne of the most common effects is the emergence of persistent diffuse anxiety — often described as the feeling of always being behind or not keeping up with the world. This is exacerbated by constant comparisons, especially in digital environments, and by an internalized fear of falling behind. As the brain saturates with inputs and lacks integration time, it either shuts down (procrastination) or goes into hyperdrive (workaholism), both dysfunctional coping mechanisms.\n\nAnother critical impact is the erosion of cognitive self-esteem. When we consume high-quality knowledge — technical books, advanced courses, dense academic papers — but fail to turn it into action, we start to question our own competence: Maybe I’m not as capable as I thought? This disconnect between intention and behavior can trigger cycles of self-doubt, reinforcing a mismatch between identity and performance. Over time, this contributes to demotivation, powerlessness, and in more severe cases, cognitive burnout — a mental exhaustion not from work volume, but from unprocessed knowledge.\n\nThere's also the issue of psychic fragmentation. The human mind thrives on narrative integration — the ability to weave information into meaningful context. When flooded with disconnected content, the mind struggles to create coherence. The result? Scattered thinking, impaired sustained attention, and ironically, lower creativity, since true creativity requires synthesis and symbolic depth — both undermined by informational excess.\n\nUltimately, the solution isn’t simply to consume less, but to relearn how to consume: to prioritize depth over breadth, action over accumulation, and integration over superficiality. Knowledge must return to being a tool for transformation, not a product for collection.\n\nCognitive Symptoms Checklist\n\nIf you suspect you're experiencing mental obesity, here are a few indicators:\n\n- You consume more content than you apply.\n- You feel guilty for not reading more — even after finishing a book.\n- You constantly start new courses but rarely finish or implement them.\n- You feel stuck or anxious despite learning “a lot.”\n- You struggle to focus or retrieve what you’ve read just days before.\n\nStrategies to Reverse Mental Obesity\n\n1. Act Before You Accumulate More\n   Don’t read a second article before acting on the first. Execution must precede further intake.\n2. Set Transformation Goals\n   Don’t just set goals to learn X; define what you’ll do differently once you learn it.\n3. Reintroduce Cognitive Fasting\n   Take regular breaks from content. Let your mind breathe and synthesize ideas.\n4. Reread and Reflect\n   Repetition deepens integration. Instead of consuming something new, re-engage with material and connect it to real-life challenges.\n5. Practice Contextual Learning\n   Read only what’s directly applicable to your current problem — and test it immediately.\n\n🚀 Final Thoughts: Learning as a Tool, Not an Escape\n\nTrue learning is transformative, not performative. In a culture that often celebrates reading volume or certifications, we must remember that accumulation without transformation is intellectual stagnation. Knowledge should not be a refuge from action, but a catalyst for it.\n\nMental obesity is the result of a system — personal and social — that values appearing informed more than being changed. To fight it, we must reframe our relationship with knowledge and reclaim the discipline of depth.\n\n---\n\n🧠 Scientific References\n\n- Sweller, J. (1988). Cognitive load during problem solving: Effects on learning. Cognitive Science, 12(2), 257–285. doi90023-7)\n- Paas, F. et al. (2003). Cognitive load measurement as a means to advance cognitive load theory. Educational Psychologist, 38(1), 63–71.",
    "type" : "blog",
    "file-path" : "content/blog/2025-05-01-mental-obesity-consuming-knowledge-cognitive-burden.md"
  }, {
    "title" : "The Power of Two Days: Neuroscience Behind the 48-Hour Rule for Effective Feedback",
    "date" : "2025-04-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-power-of-two-days-neuroscience-behind-the-48-hour-rule-for-effective-feedback",
    "content" : "Experienced leaders know that giving feedback is not about pointing out mistakes — it's about fostering development without damaging psychological safety. The practice of waiting up to 48 hours after an incident to give feedback is rooted not just in behavioral wisdom but also in neuroscience.\n\n\n\nThis article deeply explores, through the lens of _Your Brain at Work_ (Amazon), by organizational neuroscientist David Rock, the brain mechanisms that make this time window the most effective for transforming feedback into growth — not trauma.\n\nThe Biology of Threat: Why the Brain Rejects Poorly Timed Feedback\n\nWhen receiving feedback, the brain doesn't just process information — it evaluates social threat in milliseconds. According to Rock, criticism or correction can be perceived as a status threat, activating the limbic system, specifically the amygdala, the brain's fear and threat detection center.\n\n> _The human brain responds to social threats with the same intensity as it does to physical threats._\n> — David Rock\n\nIn this state, the employee becomes defensive, impairing active listening, working memory, and rational processing. Trying to coach someone in this state is like trying to teach during a fire drill — survival trumps learning.\n\nWaiting 48 hours allows the amygdala to calm down and gives the prefrontal cortex — responsible for executive function and empathy — a chance to take control.\n\nThe SCARF Model: Engineering a Safer Feedback Conversation\n\nDavid Rock's SCARF model explains how the brain reacts to five social domains:\n\n1. Status – perception of relative importance.\n2. Certainty – ability to predict the future.\n3. Autonomy – sense of control over events.\n4. Relatedness – sense of social connection.\n5. Fairness – perception of fair exchanges.\n\nPoorly timed feedback can threaten several of these simultaneously. Thoughtful feedback, given with intent, space, and structure, mitigates these threats and engages the brain cognitively, not reactively.\n\nHow the 48-hour delay helps:\n\n- Scheduling the conversation reinforces Certainty.\n- Sharing context and facts strengthens Fairness and Relatedness.\n- Inviting collaboration supports Autonomy.\n\nThis creates a space of learning rather than defensiveness.\n\nNeurophysiology of Emotional Regulation: Why Time Matters\n\nRock introduces the concept of the refractory state — a period after emotional activation when:\n\n- People cannot process new information effectively;\n- Working memory is impaired;\n- Focus is on self-protection, not learning.\n\n> _It's futile to rationalize with someone in a refractory state. They may hear your words, but they're not processing them._\n> — David Rock\n\nWaiting 48 hours ensures that both leader and employee exit the refractory state, enabling a conversation grounded in awareness, cognition, and empathy.\n\nContextual Memory and Feedback Validity\n\nRock also stresses the importance of episodic memory in meaningful feedback. After 2–3 days:\n\n- Leaders may forget important nuances;\n- Employees may reinterpret or mentally close the event;\n- Feedback may feel disconnected or punitive.\n\nThe 48-hour window balances recency (preserving contextual memory) and emotional regulation, maximizing feedback impact.\n\nHow to Apply This in Leadership Practice\n\nDay 0 (incident):\n\n- Document the facts, context, and consequences.\n- Avoid emotional or spontaneous feedback.\n\nDay 1 (reflection):\n\n- Reassess the true impact and intention.\n- Draft your message based on facts, not judgments.\n- Plan a SCARF-aware conversation.\n\nDay 2 (delivery):\n\n- Schedule and create a safe space for the dialogue.\n- Use frameworks like SBI (Situation, Behavior, Impact).\n- Invite reflection and co-create next steps.\n\nConclusion\n\nThe 48-hour rule for giving feedback is more than a best practice — it's applied neuroscience in leadership. Instead of reacting and risking trust, leaders who respect this window elevate themselves as intentional, conscious, and effective communicators.\n\nGreat leaders don't just correct — they shape safer, sharper, and more self-aware brains.",
    "type" : "blog",
    "file-path" : "content/blog/2025-04-21-the-power-of-two-days-neuroscience-behind-the-48-hour-rule-for-effective-feedback.md"
  }, {
    "title" : "Sometimes we try to escape from some technology, but it's no use!",
    "date" : "2025-04-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "It's common at the beginning of a software engineering career to want to escape from certain technology stacks (for example JavaScript, Java, etc).\n\nAfter I understood that adding value is the delivery to the business, it made me not care about the stack I'm using.\n\nI enjoy programming and it's possible to write good software regardless of the stack.",
    "type" : "quote",
    "file-path" : "content/quote/2025-04-03-735-.md"
  }, {
    "title" : "Why We Changed the Site's Color Palette — Making Reading a More Pleasant Experience",
    "date" : "2025-04-02T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/why-we-changed-the-site-color-palette-2025",
    "content" : "If you’ve visited avelino.run recently, you may have noticed: the visual vibe is softer, calmer — and that’s completely intentional.\n\nWe redesigned the site’s color palette with one goal in mind: to make your reading experience more comfortable. And yes, there’s science behind it.\n\n\n\n🧠 The Psychology of Color and Visual Fatigue\n\nStudies in interface design and cognitive neuroscience show that pure white backgrounds and high-contrast elements can cause eye strain during extended reading sessions. A study published in the International Journal of Human-Computer Studies points out that soft, lightly tinted backgrounds can reduce visual stress and help readers stay focused for longer.\n\nSo we replaced the pure white background with #FAF9F6, a soft lavender tone that keeps the clarity of white while being easier on the eyes.\n\n🎨 The New Color Palette\n\nOur focus was to create a harmonious, accessible experience with a modern and welcoming vibe. Here's the palette:\n\n- Background: #FAF9F6 – soft lavender that diffuses light and reduces glare.\n- Main Text: #4A4A4A – dark gray for clean, high-contrast readability without harshness.\n- Links and Highlights: #E6E6FA – a soft lavender accent that complements the background.\n- Buttons/CTAs: #BA55D3 – a vibrant purple for elements that need to stand out.\n- Borders/Dividers: #E0E0E0 – light gray to organize content gently and subtly.\n\n💡 Our Goal Is Simple\n\nWe want reading on this site to feel as effortless as a good conversation. No fatigue. No distraction. Just clarity, flow, and focus.\n\n---\n\nReference:\nBauerly, M., & Liu, Y. (2006). Computational modeling and experimental investigation of effects of compositional elements on interface and design aesthetics. International Journal of Human-Computer Studies, 64(8), 670–682.",
    "type" : "blog",
    "file-path" : "content/blog/2025-04-02-why-we-changed-the-site-color-palette.md"
  }, {
    "title" : "Communication: The Hidden Backbone of Successful Open Source Projects",
    "date" : "2025-04-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/communication-the-hidden-backbone-of-successful-open-source-rojects",
    "content" : "In the open source ecosystem, code is often celebrated as the star. However, behind every thriving open source project lies a less visible yet crucial factor: effective communication. Successful maintainers recognize that writing good code is just a small fraction of their responsibility; their primary role revolves around fostering community engagement, clarifying project goals, and facilitating collaboration.\n\n\n\nWhy Communication Trumps Code in Open Source Maintenance\n\nOpen source maintainers face the dual challenge of advancing technical excellence while simultaneously nurturing a vibrant community. Nadia Eghbal, in her seminal work Working in Public: The Making and Maintenance of Open Source Software, highlights this evolution, stressing that maintainers today spend significantly more time managing communication channels, contributions, and relationships than simply coding.\n\nPractical examples from successful projects like Awesome-Go underscore the value of communication-driven maintenance. Awesome-Go is more than a curated list; it's a hub of engagement that demonstrates how clear guidelines and active interactions amplify community contributions. The project’s effective communication strategies include:\n\n- Clear Contribution Guidelines: Awesome-Go provides explicit instructions on how contributors can propose new additions, update content, and even remove outdated entries. This transparency significantly reduces barriers for newcomers.\n\n- Transparent Roadmaps and Decisions: Each decision on whether a library or tool gets added is transparently discussed in public issues and pull requests. Contributors always understand why certain items are accepted or rejected, which maintains trust and accountability.\n\n- Community-Driven Documentation: By keeping documentation clear and continuously updated through community input, Awesome-Go ensures that its content remains reliable and accessible. This transforms documentation into a powerful asynchronous communication channel.\n\nBuilding a Robust Communication Framework\n\nIn The Art of Community, Jono Bacon emphasizes communication infrastructure as essential to a project's longevity and health. Effective open source projects cultivate clear, responsive communication channels—such as issue trackers, forums, chat platforms (like Slack, Discord, or Matrix), and mailing lists—that make contributors feel acknowledged and valued.\n\nFor instance, Awesome-Go leverages GitHub Issues extensively not only for discussing the quality of libraries but also for engaging contributors through constructive feedback and mentorship. This proactive engagement encourages continuous, high-quality participation.\n\nPractical Tips to Enhance Communication in Your Project\n\nTo elevate communication in your open source project, consider the following practical steps:\n\n1. Establish Clear Contribution Processes: Clearly document how users can get involved, what contributions are needed, and how decisions are made.\n\n2. Actively Facilitate Discussions: Regularly engage with contributors by promptly responding to questions, feedback, and issues. Acknowledging contributions, even small ones, fosters a welcoming environment.\n\n3. Invest in Comprehensive Documentation: View documentation as a living communication channel. Keep it updated, clear, and community-driven to encourage continuous improvement.\n\n4. Regularly Communicate Vision and Goals: Ensure contributors understand the project’s direction by maintaining and sharing transparent, frequently updated roadmaps.\n\nWhen a potential contributor asks, Where can I help? it often signals a need for clearer communication. Successful projects proactively anticipate this question, guiding contributors seamlessly toward impactful involvement.\n\nBy prioritizing communication, open source projects like Awesome-Go transform passive users into dedicated advocates and active community participants, ultimately ensuring the project’s sustainability and growth.",
    "type" : "blog",
    "file-path" : "content/blog/2025-04-01-communication-the-hidden-backbone-of-successful-open-source-rojects.md"
  }, {
    "title" : "The Power of Deliberate Focus: Eliminating Distractions in a World of Informational Abundance",
    "date" : "2025-03-07T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-power-of-deliberate-focus-eliminating-distractions-in-a-world-of-informational-abundance",
    "content" : "Explore advanced strategies to systematically eliminate distractions and cultivate deep focus in a hyperconnected world. Discover how the strategic subtraction of stimuli can amplify results and bring mental clarity to your most significant goals.\n\n\n\nThe Attention Economy: Our Scarcest Resource\n\nIn an era where information is infinite, our attention has become the most valuable and contested resource. As Thomas Davenport observes in The Attention Economy, we live in a paradox: while information multiplies exponentially, our capacity to process it remains limited. This discrepancy creates what psychologists call attention poverty – a condition where our cognitive capacity is constantly fragmented among multiple stimuli.\n\nModern neuroscience confirms: the human brain was not designed for multitasking. When we try to process multiple streams of information simultaneously, we aren't really performing parallel tasks, but rather rapidly switching between them, with a significant cognitive cost. Each switch represents a small death of deep focus, a phenomenon that neuroscientist Adam Gazzaley calls task-switching cost.\n\nThis cost is not trivial. Studies from Stanford University demonstrate that people who frequently switch between multiple tasks show reduced capacity to filter irrelevant information, compromised working memory, and greater difficulty switching between tasks – creating a vicious cycle of chronic distraction.\n\nThe Illusion of Busy Productivity\n\nOur culture celebrates constant busyness as synonymous with productivity, creating what philosopher Byung-Chul Han calls the burnout society. We are perpetually exhausted, not from producing meaningful results, but from the continuous effort to process an overwhelming volume of stimuli.\n\nGreg McKeown, in Essentialism, identifies this phenomenon as the busyness fallacy – confusing movement with progress. True productivity, McKeown argues, is not about doing more, but doing the right thing – that which significantly moves the needle toward our most important objectives. Source\n\nThis distinction is crucial: activity is not accomplishment. As Peter Drucker astutely observed: There is nothing so useless as doing efficiently that which should not be done at all.\n\nThe Neuroscience of Deep Focus\n\nTo understand the value of focus, we must understand how our brain processes information. When we engage in deep work – periods of intense concentration without distractions – we activate what neuroscientists call the executive attention network, a neural system that enables complex thinking, problem-solving, and creativity.\n\nCal Newport, in Deep Work, presents compelling evidence that this capacity for deep concentration is not just a preference in work style, but a neurological requirement for producing work of exceptional value. Myelination – the biological process that strengthens neural connections – occurs most efficiently during periods of sustained attention. Source\n\nParadoxically, as digital tools make shallow work easier, the capacity for deep work becomes simultaneously rarer and more valuable. As Newport observes: The ability to perform deep work is becoming increasingly rare precisely at the time it is becoming increasingly valuable in our economy.\n\nThe Architecture of Distraction: Understanding the Adversary\n\nTo effectively combat distractions, we must first understand their anatomy. Nir Eyal, in Indistractable, offers a useful taxonomy, categorizing distractions as external and internal. Source\n\nExternal Distractions: The Environment Conspires Against Focus\n\nExternal distractions are evident: notifications, interruptions, environmental noise. Less obvious is how these distractions are meticulously designed to capture our attention. As Tristan Harris, former Google ethical designer, reveals: Thousands of engineers work daily to make these technologies more persuasive and difficult to resist.\n\nThe attention economy is not accidental; it's architected. Apps and platforms are deliberately designed to maximize screen time through mechanisms such as:\n\n- Variable rewards: Notifications and updates that arrive at unpredictable intervals, creating the same dopamine pattern that makes slot machines addictive\n- Social reciprocity: Mechanisms that exploit our evolutionary need to respond to social interactions\n- Fear of missing out: Interfaces that exploit our aversion to loss, creating anxiety about what we might be missing\n\nInternal Distractions: The Enemy Within\n\nMore insidious than external distractions are the internal ones – those impulses that arise from within. As Eyal observes, most distractions begin internally, with emotional discomfort that we seek to alleviate through escape behaviors.\n\nResearch by Matthew Killingsworth and Daniel Gilbert of Harvard University revealed that we spend almost 47% of our waking hours with our mind wandering. This default mode of thinking is associated with lower levels of happiness and reduced productivity.\n\nMindfulness meditation offers a window into this phenomenon. Experienced practitioners report not the absence of distractive thoughts, but a greater ability to observe them without identifying with them. As Jon Kabat-Zinn, pioneer of mindfulness-based meditation, explains: You can't stop the waves, but you can learn to surf.\n\nAdvanced Strategies to Eliminate Distractions\n\nWith this deeper understanding, we can develop more sophisticated interventions to cultivate focus:\n\n1. Redesigning the Choice Architecture\n\nBehavioral psychologist Richard Thaler introduced the concept of choice architecture – the idea that the way options are presented profoundly influences our decisions. We can apply this principle to create environments that favor focus:\n\n- Asymmetric friction: Deliberately increase friction for distractive behaviors (e.g., removing social media apps from your phone, requiring login via browser) while reducing friction for deep work (e.g., preparing work materials in advance)\n- Powerful defaults: Configure your environment so that the default behavior is focus, not distraction (e.g., site blockers activated by default during work hours)\n- Contextual cues: Create rituals and signals that indicate to the brain when it's time to focus (e.g., a dedicated workspace, specific music, or even a piece of clothing that symbolizes deep work mode)\n\n2. Energy Management, Not Just Time Management\n\nJim Loehr and Tony Schwartz, in The Power of Full Engagement, argue convincingly that energy, not time, is the fundamental resource of productivity. We may have 24 hours a day, but our cognitive energy is finite and fluctuating.\n\nAdvanced energy management strategies include:\n\n- Circadian alignment: Identify your natural periods of cognitive peak (usually 2-4 hours after waking for most people) and fiercely protect these periods for deep work\n- Strategic oscillation: Deliberately alternate between periods of intense focus (usually 90-120 minutes) and complete recovery, respecting the body's natural ultradian cycles\n- Cognitive nutrition: Recognize that certain activities fuel our attention capacity (e.g., moderate exercise, adequate sleep, meaningful social interaction) while others deplete it (e.g., trivial decisions, unresolved conflicts)\n\n3. Cultivating High-Quality Relationships\n\nSocial network researcher Nicholas Christakis has demonstrated that behaviors, emotions, and even concentration levels are contagious within social networks. His research reveals that we are significantly more likely to adopt the habits of the people we spend the most time with.\n\nStrategies for cultivating a social ecosystem that supports focus include:\n\n- Communities of practice: Join groups of people committed to deep work and deliberate growth\n- Social contracts: Establish explicit agreements with colleagues about availability and response expectations\n- Strategic distancing: Consciously reduce exposure to people whose distraction habits are incompatible with your goals\n\nAs Jim Rohn observed: You are the average of the five people you spend the most time with. Choose wisely.\n\n4. Transcending the Focus/Distraction Dichotomy\n\nThe most advanced practitioners of focus recognize that true mastery is not about completely eliminating distraction, but about developing a more sophisticated relationship with attention.\n\nMihaly Csikszentmihalyi, in his research on the state of flow, discovered that optimal engagement occurs when we alternate between intense focus and periods of mental diffusion – what neuroscientists call the default network mode. This mode, far from being unproductive, is essential for creativity, knowledge integration, and complex problem-solving.\n\nBarbara Oakley, in A Mind for Numbers, calls this alternating between focused and diffuse modes of thinking. True cognitive mastery comes not from the relentless suppression of distraction, but from the ability to navigate fluidly between these complementary modes.\n\nThe Practice of Discernment: The Essential Meta-Skill\n\nAt the center of all these strategies is a fundamental meta-skill: discernment. As Gary Keller argues in The ONE Thing, the question is not simply to eliminate distractions, but to identify what deserves our attention in the first place. Source\n\nDiscernment requires deep self-knowledge – clarity about your values, purpose, and objectives. As Peter Drucker observed: There is nothing so useless as doing efficiently what should not be done at all.\n\nQuestions to cultivate discernment include:\n\n1. What is my unique contribution? What can I do that combines my talents, passions, and what the world needs?\n\n2. What can I eliminate without consequences? Which activities, if abandoned completely, would not have a significant negative impact?\n\n3. Where is the leverage? Which few activities produce the majority of valuable results?\n\nJames Clear, in Atomic Habits, reminds us that small consistent improvements lead to extraordinary results over time. Applying this principle to focus, we can see that a radical immediate transformation is not necessary, but rather a commitment to the incremental improvement of our attention capacity. Source\n\nConclusion: Attention as Spiritual Practice\n\nAt a deeper level, the practice of focus transcends productivity and touches the spiritual domain. As Simone Weil wrote: Attention is the rarest and purest form of generosity.\n\nWhen we deliberately choose where to direct our attention, we are essentially deciding what we will allow to shape our consciousness. In this sense, attention management is not just a productivity technique, but an existential practice – an affirmation of what we value and who we choose to be.\n\nIn a world that incessantly competes for our attention, the ability to consciously direct our focus may be the most radical act of self-determination available to us. As William James, the father of American psychology, observed: My experience is what I agree to attend to.\n\nBy eliminating distractions and cultivating deep focus, we are not just optimizing our productivity – we are reclaiming our cognitive autonomy and creating space for what is truly meaningful to flourish in our lives.\n\n---\n\nKeywords: deep focus, elimination of distractions, cognitive productivity, selective attention, essentialism\n\n---\n\nBibliographic References:\n\n1. McKeown, G. (2014). Essentialism: The Disciplined Pursuit of Less. Crown Business. Amazon\n\n2. Newport, C. (2016). Deep Work: Rules for Focused Success in a Distracted World. Grand Central Publishing. Amazon\n\n3. Clear, J. (2018). Atomic Habits: An Easy & Proven Way to Build Good Habits & Break Bad Ones. Avery. Amazon\n\n4. Keller, G., & Papasan, J. (2013). The ONE Thing: The Surprisingly Simple Truth Behind Extraordinary Results. Bard Press. Amazon\n\n5. Eyal, N. (2019). Indistractable: How to Control Your Attention and Choose Your Life. BenBella Books. Amazon",
    "type" : "blog",
    "file-path" : "content/blog/2025-03-07-o-poder-do-foco-deliberado-eliminando-distracoes-em-um-mundo-de-abundancia-informacional.md"
  }, {
    "title" : "The Importance of Selecting Your Company: Free Yourself from Those Who Harm You",
    "date" : "2025-02-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-importance-of-selecting-your-company-free-yourself-from-those-who-harm-you",
    "content" : "Have you ever stopped to think about how the people around you influence your life?\nOften, we get used to certain companions without realizing that they might be harming us. In this post, we'll explore the importance of carefully selecting the people we surround ourselves with and how this can positively impact our well-being.\n\nWhy select your company?\n\nLiving with toxic, negative people or those who don't share our values can generate stress, anxiety and even low self-esteem. These relationships can drain our energy, prevent us from achieving our goals and compromise our happiness.\n\nOn the other hand, surrounding ourselves with positive people, who support and inspire us, can boost our personal and professional growth, increase our self-confidence and provide us with a lighter and happier life.\n\nHow to identify people who don't do you good?\n\n Pay attention to how you feel: After interacting with certain people, do you feel more energized or more exhausted? More motivated or more demotivated? If the answer is negative, maybe it's time to rethink that relationship.\n Observe patterns of behavior: Toxic people often exhibit behaviors such as constant negativity, excessive criticism, lack of empathy and disrespect for boundaries.\n Trust your intuition: Sometimes, we feel that something is wrong in a relationship, even without knowing how to explain why. Trust your instincts and don't ignore these signs.\n\nHow to distance yourself from toxic people?\n\n Set clear boundaries: Communicate your needs and boundaries assertively and don't allow them to be disrespected.\n Learn to say no: Don't feel obligated to accept invitations or requests that make you feel uncomfortable.\n Seek support: Talk to friends, family or a professional about your difficulties and ask for help to deal with these situations.\n Prioritize your well-being: Remember that you have the right to distance yourself from people who harm you.\n\nIt's also important to recognize that some relationships may never be more than circles of laughter.\n\nWhile deep, meaningful connections are essential, it's also healthy to have friends with whom you can simply relax, have fun, and share lighthearted moments. These relationships can be a source of joy and stress relief, even if they don't necessarily involve deep emotional intimacy.\n\nImportant references\n\nTo deepen your view of healthy interpersonal relationships, I recommend reading the books:\n\n How to Win Friends & Influence People by Dale Carnegie: A classic guide to building positive and meaningful relationships.\n Emotional Intelligence by Daniel Goleman*: Will help you better understand your emotions and those of other people, making it easier to recognize harmful relationships.\n\nConclusion:\n\nSelecting the people around us is an act of self-love and care for our mental and emotional health. By prioritizing our well-being and distancing ourselves from toxic people, we open space for healthier, happier and more meaningful relationships.\n\n> remember: you deserve to be surrounded by people who do you good!",
    "type" : "blog",
    "file-path" : "content/blog/2025-02-23-the-importance-of-selecting-your-company-free-yourself-from-those-who-harm-you.md"
  }, {
    "title" : "From Experiment to Classroom: The Unexpected Journey of RumLang and the Power of Open Source",
    "date" : "2025-02-19T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/from-experiment-to-classroom-rumlang-journey-and-open-source",
    "content" : "During a Go conference, an experiment was born that no one could have predicted its educational reach. RumLang emerged not from an elaborate plan, but from the confluence between a love for Common Lisp and the opportune moment of a Go conference. This functional language, which harmonizes Lisp's elegance with the practicality of the Go ecosystem, demonstrates how moments of creativity can transcend their modest origins.\n\nThe Theoretical Foundation\n\nProgramming language development has a rich academic tradition, documented in seminal works such as Concepts of Programming Languages by Robert W. Sebesta Source and Programming Language Pragmatics by Michael L. Scott Source. RumLang, although born as a playful experiment, incorporates fundamental principles from these works in its implementation.\n\nThe Power of Open Source in Academia\n\nWhat makes RumLang's story particularly fascinating is its journey from experimentation to the classroom. This path reflects a larger trend in computer science education, where open source projects serve as bridges between theory and practice. As detailed in The Architecture of Open Source Applications Source, the transparency of open source provides unique learning opportunities.\n\nUnexpected Educational Impact\n\nRumLang's adoption as study material in universities both within and outside Brazil demonstrates an interesting phenomenon: educational value can emerge from unexpected sources. This transition from experiment to teaching tool exemplifies what Peter Seibel explores in Practical Common Lisp Source - Lisp's ability to serve as a vehicle for deep understanding of programming concepts.\n\nThe Future and Lessons Learned\n\nRumLang, available at <https://github.com/rumlang/rum>, stands as a testament to the transformative potential of open source. Its story teaches us that a project's value isn't measured solely by conventional metrics of success, but also by its educational impact and ability to inspire.\n\nThe project demonstrates how the combination of:\n\n Free experimentation\n Open source\n Foundation in classical principles\n Integration with modern technologies\n\ncan create valuable educational tools, even when that wasn't the initial goal.\n\nConclusion\n\nRumLang's journey is a powerful reminder that innovation and educational impact can emerge from the most unexpected places. What began as a playful experiment during a conference transformed into a case study that inspires students and educators, proving that the true value of open source transcends its original intentions.\n\nThis story teaches us that, in the software development world, today's experiments can become tomorrow's educational tools, as long as they're openly shared with the community. RumLang continues as a living example of how unpretentious experimentation, when combined with the power of open source, can create waves of impact that extend far beyond its modest origins.",
    "type" : "blog",
    "file-path" : "content/blog/2025-02-19-from-experiment-to-classroom-rumlang-journey-and-open-source.md"
  }, {
    "title" : "Strategic Non-Action in Leadership: A Guide to Better People Management",
    "date" : "2025-01-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/strategic-non-action-in-leadership-guide",
    "content" : "Strategic non-action during critical management moments isn't merely a decision absence but a sophisticated leadership approach. According to Amy Edmondson, Harvard Business School professor, this approach is intrinsically linked to building psychological safety in teams, allowing natural patterns of leadership and collaboration to emerge organically.\n\nThe Immediate Replacement Myth\n\nThe pressure to quickly fill vacant leadership positions often leads to hasty decisions. McKinsey research shows that resilient organizations are built on foundations of psychological safety, adaptable leadership, and cohesive culture - elements that cannot be instantly imported through external hires.\n\nThe Value of Strategic Observation\n\nThe strategic pause following a key leadership departure offers substantial benefits:\n\n1. Team Maturity Assessment\n\n- Reveals real team dynamics under pressure\n- Exposes natural problem-solving mechanisms\n- Shows communication patterns without formal hierarchy\n\n2. Leadership Emergence\n\n- Identifies natural leaders and their spheres of influence\n- Reveals knowledge-sharing patterns\n- Demonstrates initiative-taking capabilities\n\n3. Cultural Alignment\n\n- Exposes true organizational values alignment\n- Shows commitment to company mission\n- Reveals authentic team dynamics\n\n4. Risk Mitigation\n\n- Prevents rushed promotion decisions\n- Avoids cultural mismatches\n- Reduces the risk of failed leadership transitions\n\nBuilding a Continuous Learning Environment\n\nThe temporary absence of formal leadership can create a unique environment for developing collective competencies:\n\nSelf-Organization Patterns\n\n- Natural workflow optimization\n- Spontaneous knowledge sharing\n- Organic problem-solving mechanisms\n\nSkill Development\n\n- Cross-functional collaboration\n- Emergency response capabilities\n- Leadership skill emergence\n\nTransforming Non-Action into Strategy\n\nTo effectively implement a strategic pause:\n\n1. Establish Clear Observation Metrics\n\n- Team productivity indicators\n- Collaboration patterns\n- Knowledge sharing effectiveness\n- Decision-making quality\n\n2. Maintain Transparent Communication\n\n- Regular status updates\n- Clear expectations setting\n- Open feedback channels\n- Progress documentation\n\n3. Document Emerging Patterns\n\n- Leadership behaviors\n- Problem-solving approaches\n- Team dynamics shifts\n- Knowledge transfer methods\n\n4. Evaluate Impact\n\n- Productivity metrics\n- Team engagement levels\n- Project delivery quality\n- Client satisfaction rates\n\nCommon Pitfalls to Avoid\n\n1. Prolonged Inaction\n\n- Set clear timeframes\n- Define decision points\n- Maintain momentum\n\n2. Unclear Communication\n\n- Establish regular updates\n- Provide clear context\n- Address concerns promptly\n\n3. Lack of Structure\n\n- Maintain basic frameworks\n- Set clear boundaries\n- Define escalation paths\n\nCase Study: Strategic Non-Action Success\n\nWhen a key technical leader departed from a high-performing team:\n\nInitial Phase:\n\n- Initial reaction: Resist immediate replacement\n- Observation period: 3 months\n\nKey Findings:\n\n- Two natural leaders emerged\n- Knowledge sharing increased by 40%\n- Team productivity maintained at 95%\n- Improved cross-functional collaboration\n\nRecommended Reading\n\nFor deeper insights into strategic leadership and organizational behavior:\n\n1. The Fearless Organization by Amy Edmondson\n\n- Focus on psychological safety\n- Building high-performing teams\n- Creating innovation cultures\n\n2. Good to Great by Jim Collins\n\n- Leadership development\n- Organizational transformation\n- Sustainable excellence\n\n3. Leading Change by John P. Kotter\n\n- Change management\n- Leadership transitions\n- Organizational development\n\nConclusion\n\nStrategic non-action, when properly executed, becomes a powerful tool for organizational development and internal talent identification. It requires courage to resist immediate action, but the insights gained often lead to more sustainable and effective leadership solutions.\n\nThe key is recognizing that conscious non-action is itself a deliberate strategy, requiring careful planning, clear communication, and systematic observation. When implemented thoughtfully, it can lead to stronger teams, better leadership decisions, and more resilient organizations.\n\n---\n\nReferences\n\n1. Edmondson, A. (2018). The Fearless Organization\n2. Collins, J. (2001). Good to Great\n3. Kotter, J. P. (2012). Leading Change\n4. McKinsey & Company. (2023). Building Organizational Resilience\n5. Harvard Business Review. (2024). The Strategic Power of Hope\n\nAdditional Reading\n\n- Drive: The Surprising Truth About What Motivates Us by Daniel H. Pink\n- Dare to Lead by Brené Brown\n- Radical Candor by Kim Scott",
    "type" : "blog",
    "file-path" : "content/blog/2025-01-27-strategic-non-action-in-leadership-guide.md"
  }, {
    "title" : "Reflections of a CTO: Learnings, Mistakes, and the Strength of the Team",
    "date" : "2024-12-04T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/reflections-of-a-cto-learnings-mistakes-and-the-strength-of-the-team",
    "content" : "Yesterday was awesome! A day to bring together the technology team of Buser Brasil.\n\nAn important day to reinforce what really matters: the unity of the team. We paused to look back, revisit what went right and, most importantly, what didn’t. Not to point fingers, but to ensure that these same mistakes won’t be repeated in 2025. Reflection without witch hunts, filled with a lot of learning.\n\nIf there’s one thing that became clear this year, it’s that no one here is in the same place they started. Every mistake, every challenge, every victory… everything served for us to evolve as a team and as professionals. I am sure that in 2025 we will enter more experienced, more aligned, and with much more confidence in what we are capable of doing together - playing as a team.\n\nI’ll be direct:** a leader without a team is nothing. Having exceptional people by your side to turn ideas into reality is what makes the difference. Leading is about example, not about speeches.\n\nLet’s go all in for 2025!",
    "type" : "blog",
    "file-path" : "content/blog/2024-12-04-reflections-of-a-cto-learnings-mistakes-and-the-strength-of-the-team.md"
  }, {
    "title" : "Learnings from startups: don't get attached to projects or products to maximize value",
    "date" : "2024-12-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/learnings-from-startups-dont-get-attached-to-projects-or-products-to-maximize-value",
    "content" : "In the fast-paced world of startups and agile companies, one of the most valuable learnings is: don't get attached to a project or product. This advice is crucial to ensure that teams remain focused on delivering value to the business, rather than clinging to solutions that no longer add value.\n\nWhy not get attached?\n\nIn a startup, the ability to adapt is essential. If a product is not generating the expected user engagement, persisting in its development can result in maintenance costs without return. As Eric Ries discusses in The Lean Startup, it is vital that companies are able to pivot quickly, redirecting efforts to initiatives that truly meet market needs and contribute to the company's strategic goals.\n\nThe agile perspective\n\nThe agile philosophy, as described by Jeff Sutherland in Scrum: The Art of Doing Twice the Work in Half the Time, encourages teams to iterate quickly and learn from each development cycle. This means that even if a project was started with enthusiasm, it must be constantly reassessed to ensure it still makes sense in the current context and is aligned with delivering business value.\n\nPersonal and professional growth\n\nLetting go of a project not only benefits the organization but also offers significant opportunities for personal and professional growth. Each project is a chance to learn, evolve technically, and enhance interpersonal skills. Martin Fowler, in Refactoring: Improving the Design of Existing Code, emphasizes the importance of reflecting on the work done to identify areas for improvement and create more efficient and reusable solutions.\n\nReflection and continuous learning\n\nUpon completing a project, it is crucial to reflect on what has been done. Questions like Why did we prioritize this? and Why is this task a priority? should be asked regularly. This practice not only improves the quality of work but also ensures that daily activities are aligned with the company's strategic objectives. This is fundamental to ensuring that the focus remains on delivering value.\n\nConclusion\n\nThe role of a developer in a startup goes beyond just writing code. It's about deeply understanding business objectives and adapting actions to better meet them. Letting go of projects is not about discarding hard work, but rather about prioritizing what truly matters and being open to new opportunities for learning and growth.\n\nBy applying these principles, we can significantly contribute to organizational success while evolving as complete professionals, capable of facing the challenges of an agile and constantly changing work environment.\n\nReferences\n\n Sutherland, J. (2014). Scrum: The Art of Doing Twice the Work in Half the Time. Crown Business\n Fowler, M. (2018). Refactoring: Improving the Design of Existing Code. Addison-Wesley Professional\n* Ries, E. (2011). The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses. Crown Business\n\nThese books are valuable resources for any professional who wants to deepen their understanding of agile management and software engineering, offering practical and theoretical insights to successfully navigate the agile environment (such as startups).",
    "type" : "blog",
    "file-path" : "content/blog/2024-12-03-learnings-from-startups-dont-get-attached-to-projects-or-products-to-maximize-value.md"
  }, {
    "title" : "Leadership by example, managing people shouldn't be a full-time job",
    "date" : "2024-09-02T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/leadership-by-example-managing-people-shouldnt-be-a-full-time-job",
    "content" : "I can't believe that it's the best choice for companies to have people 100% in management positions, this isn't new, it's been true since I started leading teams.\n\nThe manager's job is to help people evolve professionally and to help them deliver for the company. In software engineering, there's nothing better than leadership by example.\n\nBlogpost relacionado:\n\n- We once more have no full-time managers at 37signals",
    "type" : "quote",
    "file-path" : "content/quote/2024-09-02-leadership-by-example-managing-people-shouldnt-be-a-full-time-job.md"
  }, {
    "title" : "Interactions: IRL vs. Social Media - What Really Matters?",
    "date" : "2024-06-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/interactions-irl-vs-social-media-what-really-matters",
    "content" : "These days, the line between our offline and online interactions is super blurry. But have you ever thought about what we actually remember from these interactions? Let’s dive into why a lot of our conversations and posts lose their importance over time.\n\nMemory in Real-Life Interactions\n\nDo you remember everything from your last hangout with friends? Probably not. An old study by Ebbinghaus (1885) showed that we forget info quickly if we don't reinforce it. Plus, Daniel Kahneman's book, Thinking, Fast and Slow, explains that our memory only keeps the stuff with the most emotional impact.\n\nSo, it's normal to remember the chats that had a special meaning at that time in your life. The rest, even if it was fun, just fades away.\n\nThe Past on Social Media\n\nOn social media, especially Twitter, this happens way faster. A tweet's life is basically a few minutes. A study by Wiselytics in 2014 found that most tweets lose their visibility in less than 20 minutes.\n\nBut still, we don’t delete our old posts. Why not? Maybe because these posts are like a public diary of our thoughts and experiences. Even when they’re irrelevant, they show how we’ve grown and changed.\n\nWhat Really Matters\n\nIf we forget most stuff in both real-life and online interactions, then what truly matters? Is it really necessary to keep a digital history? Or do these records have some symbolic value that still makes them part of who we are?\n\nThink about it: Do you remember every detail from your last friends' hangout? Or just what really mattered at that point in your life? And on social media, how many old tweets still mean something to you today?\n\nConclusion\n\nIn both real-life and social media interactions, we forget a lot of what we experience. What truly matters are the moments that leave a lasting impact. Understanding this helps us focus on what’s important and let the rest go.\n\n> This is the reason I don't keep a history of tweets on x.com, it doesn't make sense. What really matters is what is happening now, what is being discussed now. What was discussed yesterday no longer matters.",
    "type" : "blog",
    "file-path" : "content/blog/2024-06-09-interactions-irl-vs-social-media-what-really-matters.md"
  }, {
    "title" : "The Challenge of Maintaining Open Source Projects: Why Your Project Might Not Be Used in the Future",
    "date" : "2024-05-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-challenge-of-maintaining-open-source-projects-why-your-project-might-not-be-used-in-the-future",
    "content" : "We usually kick off (or get involved in) open source projects because we have a need and believe our problem, in an abstract form, could also solve issues for others. We’re driven by endorphins (or whatever kind of motivation) and start cranking out code like there’s no tomorrow.\nHowever, it doesn’t take long to realize that just focusing on the code isn’t sustainable. We need proper documentation to help people use and chip in on the project. After months of working solo, a few folks might show interest – that’s when the repository transitions into a true open source project.\n\nThe Difference between Open Source and Open Repository\n\n Open Repository: It’s like a luxury project where you and a handful of people (maybe friends or folks who can’t say no to you) contribute sporadically;\n Open Source: This is when there’s an active community involved, not just you.\n\nIn practice, an open repository can be seen as a personal collection shared with others, whereas an open source project is a vibrant ecosystem where diverse people collaborate, bringing ideas and continuous improvements. For instance, Linux is a stellar example of an open source project shaped by a global community.\n\nWhy Projects Die?\n\nIt’s super common in software engineering to lose the original need for a project after a few months or years. Problems evolve, and we need to think about new solutions and ways to tackle current challenges. Without a community to help maintain and evolve the project, it can die out due to neglect.\n\nOne project I’m proud of building a strong community around is awesome-go. It’s not an easy task to motivate engineers to contribute and help maintain it. Reviewing PRs (pull requests) and manually validating if new additions meet the established criteria is tedious. However, focusing on the positive impact we have on the Go language community keeps maintainers motivated.\n\nWhen to Open Source a Project?\n\nWhen I face the decision of whether or not to invest my time in a new open source project, it is important for me to have a strong overview of already existing alternatives. If there are none, then it is probably a good idea. Otherwise, I think about how changes to my project, by means of approach, architecture, design, etc., could withstand the challenges of competition. However, in most cases, it is a better idea to restructure the existing project instead of writing a new package or library from scratch, whether it is private or open source.\n\nChecklist for Deciding to Open Source a Project:\n\n1. Community Demand: Is there a clear, recurring need for the problem your project solves?\n1. Sustainability: Do you have the time and resources (or partners) to maintain the project in the medium and long term?\n1. Documentation: Does your project have clear and comprehensible documentation?\n1. Contribution Interest: Is there potential interest from other developers to contribute to the project?\n1. Complementarity: Are there similar projects out there? If so, does your project add enough value to justify a new development?\n1. Licensing: Is the open source license you plan to use suitable for what you expect from your project?\n\nLastly, it’s worth reflecting on Eric S. Raymond’s thoughts from his book, The Cathedral and the Bazaar (1999), where he outlines the principles of open source development and how an active community can transform a personal project into something influential.\n\nOpening and maintaining an open source project is a constant challenge that demands more than just coding. You need to build an engaged community, have a solid documentation strategy, and, above all, have the resilience to keep improving and adapting the project to new needs.\n\n> By keeping these guidelines and strategies in mind, you can overcome challenges and ensure the sustainability of your open source project, making sure it stays relevant and useful for a long time.",
    "type" : "blog",
    "file-path" : "content/blog/2024-05-28-the-challenge-of-maintaining-open-source-projects-why-your-project-might-not-be-used-in-the-future.md"
  }, {
    "title" : "Founders are special; founders need to be in charge",
    "date" : "2024-05-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/founders-are-special-founders-need-to-be-in-charge",
    "content" : "> Founders are special; founders need to be in charge. The founders are difficult to work with. Push people hard to achieve success. As much as we can dislike Elon's personal behavior, look at what he gets out of people.\n\nby Eric Schmidt ex CEO at Google",
    "type" : "quote",
    "file-path" : "content/quote/founders-are-special-founders-need-to-be-in-charge.md"
  }, {
    "title" : "The Importance of Business Metrics for Senior Software Engineers",
    "date" : "2024-04-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-importance-of-business-metrics-for-senior-software-engineers",
    "content" : "In the career evolution of a software engineer, an increase in technical skill and the ability to solve complex problems is observed, as well as a significant expansion in the scope of their responsibilities. As engineers advance to more senior roles – including positions like Staff Engineer – it becomes imperative to align even more closely with the business metrics and objectives of the organization. But why is this alignment so crucial, and how does it manifest in practice?\n\nUnderstanding the Impact Beyond the Code\n\nFor engineers at the beginning of their career, the focus tends to be primarily technical: writing clean code, adhering to best practices, and solving the problem at hand. However, as one advances, the ability to understand the why behind the code becomes equally important. Senior engineers, and especially Staff Engineers, must be able to comprehend how their technical decisions directly impact business metrics, whether they are aimed at increasing revenue, optimizing costs, or improving user experience.\n\nProximity to the Business\n\nBeing close to business metrics implies active participation in strategy definition processes and decision-making. Engineers at more advanced levels are expected to:\n\n Understand Business Goals: Have clarity about what the organization aims to achieve and how technology can be a vector for these objectives;\n Influence Technical Directions: Use their technical expertise to guide decisions that optimize business outcomes, without neglecting the quality and sustainability of the software;\n Monitor and Interpret Metrics: Be capable of interpreting performance data and using it to propose improvements and innovations that leverage business objectives.\n\nStrategic Protagonism\n\nThe position of Staff Engineer confers a strategic protagonism within organizations. This is a figure that transcends the barriers of specific teams and possesses a holistic view of engineering and its intersection with other areas of the company. This professional should not only be involved in the modeling of technical solutions but is also fundamental for:\n\n Promoting a Metrics Culture: Encourage the team to adopt a business-oriented mindset, where success is measured not only in lines of code but in the impact generated;\n* Ensure Cross-Functional Alignment: Facilitate communication between engineering and other areas of the company, ensuring that everyone is moving in the same direction.\n\nConclusion\n\nAs software engineers progress in their careers, there is an increasing need for a deep understanding and direct action on business metrics and objectives. For Staff Engineers, this is not just an expectation but an intrinsic necessity of the role they play. Their success is not measured only by the code they write but by the tangible impact they generate on the company's growth and innovation. After all, at the intersection of technology and business lie both the greatest challenges and the most significant opportunities for creating value.\n\nReferences\n\n1. Staff Engineer: Leadership beyond the management track by Will Larson. This book is an essential guide for engineers looking to advance their careers without necessarily following a management path. Larson discusses the challenges and strategies for becoming an influential staff engineer who works closely with business metrics and significantly contributes to strategic directions;\n1. Accelerate: The Science of Lean Software and DevOps: Building and Scaling High Performing Technology Organizations by Nicole Forsgren, Jez Humble, and Gene Kim. Essential for understanding how technical, cultural, and business practices impact organizational performance. The book provides research-based insights on how technology can be strategically aligned with business objectives to accelerate growth.\n1. The Phoenix Project: A Novel About IT, DevOps, and Helping Your Business Win by Gene Kim, Kevin Behr, and George Spafford. Although presented in a narrative format, this book addresses crucial concepts about how the integration between IT operations and business can solve longstanding problems and boost business success. It's an engaging read that illustrates the importance of interdepartmental collaboration and the impact of technology on business outcomes.\n1. Measure What Matters: Online Tools for Understanding Customers, Social Media, Engagement, and Key Relationships by Katie Delahaye Paine. Although not strictly focused on software engineering, this book provides valuable insights into measuring and interpreting business metrics. The ability to measure success and understand the impact of actions is crucial for senior engineers looking to positively influence the direction of their projects and the organization as a whole.",
    "type" : "blog",
    "file-path" : "content/blog/2024-04-01-the-importance-of-business-metrics-for-senior-software-engineers.md"
  }, {
    "title" : "Why We Avoid Leaving the Comfort Zone: Perspectives from Psychology and Neuroscience",
    "date" : "2024-03-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/why-we-avoid-leaving-the-comfort-zone-perspectives-from-psychology-and-neuroscience",
    "content" : "> A large part of the people who read my texts are software engineers, so I decided to write speaking to them (software engineers), most likely you! 😊\n\nSoftware engineers are no exception when it comes to avoiding the unknown and uncertainty. Biological, psychological, and sociocultural inclinations interact to keep software engineers in a psychological comfort zone.\n\nEvolutionary Adaptation\n\nWe humans naturally favor the safety of familiarity. Our evolutionary past has shaped our brain to favor the known at the expense of the unknown. For a software engineer, this may manifest as a hesitation to learn a new programming language or adopt new methodologies.\n\nMotivation for Permanence: Evolution and Survival (in Spanish), the article explores the evolution of the comfort zone, by testing pedestrians walking on a busy street. It suggests that the comfort zone is an evolutionary adaptation that has assisted our survival.\n\nWhenever pedestrians walk through a busy street, they are continuously avoiding collisions with incoming pedestrians. Before an encounter ends in a collision, the pedestrian decides - unconsciously - to change their route to prevent colliding with another pedestrian.\n\nPhysicists from the Eindhoven University of Technology, in collaboration with researchers from the United States and Italy, analyzed 5 million pedestrian movements at the Eindhoven train station in the Netherlands. Thanks to the research, the experts discovered that people prefer to maintain - on average - a distance of at least 75 centimeters.\n\nThe Energetic Cost of Change\n\nNeuroscience shows that the brain prefers to conserve energy. When a software engineer needs to learn a new technology or change their programming style, it forces the brain to create new neural connections and discard the old ones. This is more difficult and requires more energy than simply following what is already known.\n\nHomeostasis and Balance: Biology of the Comfort Zone (in Spanish), the article explores why it is essential to be in an uncomfortable zone seeking learning and professional evolution, emphasizing that the comfort zone is a state of biological balance that the body tries to maintain.\n\nAnxiety and Professional Burnout\n\nSoftware engineers are often under pressure to solve complex problems and meet rigorous deadlines (this is a controversial point that I need to write another blog post about, in many moments we have the possibility of saying no, but we can't or are afraid to say it), which can already lead them to high levels of stress. When the idea of leaving the comfort zone and embracing novelty is added to this load, it can result in overwhelming anxiety or even professional burnout.\n\nAnxiety and Professional Burnout as Key Factors in the Comfort Zone (in Spanish), the article explores how ~~anxiety~~ (crossed out because we need to learn to deal with our anxieties) and professional burnout can be key factors that keep people in their comfort zone.\n\nSocial and Structural Expectations\n\nTechnology work environments are often highly structured with clear expectations. This can make software engineers stuck in certain norms and routines, making it more challenging to step out of the comfort zone. In addition, the need to keep up-to-date with rapidly changing technological innovations can sometimes cause them to opt for technologies with which they are already familiar to meet time and productivity demands.\n\nComfort Zone as a Social Construct (in Spanish), the article explores how the comfort zone is a social construct that can be shaped by societal expectations and norms.\n\n---\n\nSeveral factors collaborate to keep software engineers within their comfort zones. Recognizing and understanding these elements may be the first step to overcoming the barriers to personal and professional growth.\n\nIt is necessary to know oneself and ask difficult questions, such as:\n\n What am I avoiding?\n If it goes wrong, what can I do to recover?\n What can I do to feel safer when stepping out of the comfort zone?\n\n> note: if it goes wrong*, you can go back to where you came from, but with a wealth of knowledge and experience that you would never have had if you had not faced your fears.",
    "type" : "blog",
    "file-path" : "content/blog/2024-03-03-why-we-avoid-leaving-the-comfort-zone-perspectives-from-psychology-and-neuroscience.md"
  }, {
    "title" : "Atypical Journey: From Anonymous Silence to CTO Stage (on Buser)",
    "date" : "2024-01-07T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/from-anonymous-silence-to-cto-stage",
    "content" : "While the path to the position of Chief Technology Officer (CTO) may seem similar to many, each story is uniquely extraordinary, colored by the unique combination of experiences, struggles and intensive learning. In Invisible Learning, John Seely Brown and David Thomas discuss how learning is often an invisible path, rooted not only in formalities, but also deeply woven into the fabric of our life experiences. This is my story within Buser.\n\nFrom Anonymity to Center Stage\n\nI joined Buser, not as CTO, but as a member of the software engineering team. Previously, I had been CTO at several companies and was enjoying the relative obscurity of this more reserved role, shying away from the limelight that usually accompanies the CTO function.\n\nIn one of my first one-to-one conversations with Tony Lampada - Buser's CTO at the time - he expressed his desire to return to the engineering team, sharing his dissatisfaction with the CTO position. This is a relatively common move in technology, as described by Michael Lopp in Managing Humans. In response, I referred him to three other potential candidates, emphasizing that I wasn't interested.\n\n> was enjoying my moment of anonymity and didn't want to return to center stage (the CTO is constantly in the spotlight), it's worth reading this blogpost (sorry for being in pt-BR).\n\nWhen the Unthinkable Starts to Rumble - reflection is the way\n\nDaniel Kahneman points out in Fast and Slow: Two Ways of Thinking, sometimes System 2 (our slow and thoughtful thinking), can be born out of unexpected encounters. The conversation with Tony remained etched in my mind for two months.\n\nI decided to find an answer for myself as to why the idea of becoming CTO seemed to have taken root in my consciousness. One Monday, I acknowledged my insecurity to Tony: I'm sure I'm not the best person to lead a technology team of 180 people, but if you think I can handle it and learn in a timely manner, let's talk!.\n\nContinuous Learning as CTO\n\nDespite my initial doubts, I accepted the role, aware that I had a lot to learn. Inspired by Carol Dweck in Mindset: The New Psychology of Success, adopting a growth mindset is crucial. I recognize that I'm not the best, I'm still on a journey of constant learning and improvement.\n\nI admire the talents we have at Buser, some of the best engineers I've ever met (new professionals, but with the will to make it happen, with a great thirst for learning) and I remain convinced that each new company represents a new flight. Bruce Mau emphasizes in Massive Limit, to use previous knowledge as a basis, but never assume it as absolute truth. A previous history as a CTO does not equate to a perfect transition to the next one - it requires careful adaptation to the new environment*.\n\nIn short, my history in the technology hierarchies is a mosaic of reflections, uncertainties, learnings and adaptations. To all aspiring tech leaders, the advice is: be open to unforeseen challenges, welcome constant learning and the humility to adapt and mold to the ever-changing landscape. A brilliant, perplexed and eager-to-learn spirit is the true engine of growth.\n\nOf course I was ~~afraid~~ (created by my mental monsters), the difference was that I transformed the fear into energy to move me forward, not to block me/freeze me.\n\n> if it doesn't scare you, it's not big enough",
    "type" : "blog",
    "file-path" : "content/blog/2024-01-07-from-anonymous-silence-to-cto-stage.md"
  }, {
    "title" : "Challenge, Comfort and Growth: The Art of Being Addicted to Change",
    "date" : "2023-12-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/challenge-comfort-and-growth-the-art-of-being-addicted-to-change",
    "content" : "Change is a constant in my life, and I accept each one with a resilient countenance and an open heart. The discomfort generated by each transformation is not an enemy, but a stimulus that I use to improve my environment and who I am on the inside.\n\nIf a change doesn't produce the expected results, instead of giving in to discouragement, I return to where I started. I treat each failure as a learning opportunity, a challenge to improve my understanding and adapt my next agenda for change.\n\nIn general, there are three types of person when we talk about change:\n\n1. Those who are afraid of change: These individuals feel paralyzed when faced with a new situation. The fear of the unknown freezes their steps, preventing them from leaving their current position;\n2. Those who avoid change: These people can manage change, but prefer to avoid it as much as possible. Change is only seen as a last resort;\n3. Change addicts: This third type - my type - is the one who takes change naturally. We feel a certain enthusiasm in the face of the unknown, and we love the chill in the belly caused by the expectation of the new.\n\nI certainly fall into the category of change addicts.\n\nIn the book The Courage to Be Imperfect by Brené Brown, there's a quote that I love: Vulnerability is not knowing how to control or predict. It's the ability to breathe through our insecurity and make it happen anyway. This reflects what it's like to be a person addicted to change: we face the unknown, accept our vulnerability and make the magic happen.\n\nIt's amazing how much we can grow when we embrace change. So challenge yourself, get out of your comfort zone and see how surprising life can be.\n\nVulnerability can be a real catalyst for personal growth and authenticity. When we allow ourselves to be vulnerable, we create space to embrace our uncertainties and face our deepest fears. By exposing ourselves in this way, we demonstrate courage and authenticity, strengthening our human connections and encouraging mutual respect and empathy. In addition, vulnerability puts us in a state of openness that is conducive to learning, evolution and innovation. Therefore, being vulnerable is not a weakness, but a strength that can be harnessed to become better versions of ourselves.",
    "type" : "blog",
    "file-path" : "content/blog/2023-12-28-challenge-comfort-and-growth-the-art-of-being-addicted-to-change.md"
  }, {
    "title" : "Zero acceleration",
    "date" : "2023-12-20T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/zero-acceleration",
    "content" : "I have been pondering about the ideas of two articles:\n\n Enthusiasm is Common. Endurance is Rare\n What is Your “Average Speed” in Your Life, Your Health, and Your Work?\n\nBoth gravitates to the same idea, zero acceleration. The key is to keep a sustainable rhythm.\n\nBUT never zero acceleration at zero speed.\n\nDrip by drip. Keep showing up, every day. One is better than zero.",
    "type" : "blog",
    "file-path" : "content/blog/2023-12-20-zero-acceleration.md"
  }, {
    "title" : "Tech-Enabled Companies Shaping the Future",
    "date" : "2023-12-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/tech-enabled-companies-shaping-the-future",
    "content" : "In the digital age we live in today, technology plays an essential role in all industries. Companies that use technology as a key part of their business strategy are at a competitive advantage, driving innovation and achieving success at a rapid pace. These companies are called tech-enabled companies.\n\nWhat is a tech-enabled company?\n\nA tech-enabled company is one that incorporates technology into its _DNA_. It recognizes the importance of adapting and leveraging technological solutions to optimize its internal operations, boost efficiency and improve the customer experience. Technology is not just a support for these companies, but a central element of their business strategy.\n\nThe difference between a tech-enabled company and a technology company lies in its focus and core business nature. A tech-enabled company incorporates technology into its operations and strategies to improve efficiency, process automation and the customer experience. Technology is a support or enabler for achieving its business objectives. On the other hand, a technology company _(or tech company)_ has technology as its main product or service. It develops and offers innovative technological solutions, such as software, hardware, applications or platforms, which are the essential elements of its business model. In short, while a tech-enabled company uses technology to enhance its business, a technology company has its essence and value proposition based on the creation and supply of technological products or services.\n\nAdvantages of tech-enabled companies\n\nTech-enabled companies enjoy several competitive advantages. By adopting advanced technological solutions, they can:\n\n1. Automate tasks and processes: Technology enables the automation of repetitive tasks, which increases productivity and frees up resources for more strategic activities;\n2. Scalability: With the right technology, companies can easily scale their business to meet growing demand, without compromising quality or efficiency;\n3. Agility and adaptation: Tech-enabled companies are able to quickly adapt to changes in market demands and emerging trends, seizing growth opportunities and overcoming challenges;\n4. Innovation: Technology is a catalyst for innovation. Tech-enabled companies are constantly exploring new solutions and ideas to improve their products, services and processes.\n\nExamples of successful tech-enabled companies\n\nSeveral companies stand out as examples of success in the tech-enabled world. Here are four of them:\n\n Buser: revolutionized the travel sector by employing a digital platform to connect travelers to road transport companies. Just like _Airbnb and Uber_, using technology to offer a more affordable, convenient and personalized experience to its users;\n Airbnb: revolutionized the hospitality industry by using a digital platform to connect people who want to rent spaces with those who have accommodations available. Technology enabled Airbnb to scale globally and create a more convenient and personalized experience for travelers;\n Uber: combining mobile technology, geolocation and electronic payments, Uber transformed the transportation industry. Its platform connects passengers to drivers, providing a more affordable, convenient and flexible service than traditional taxis;\n Amazon: started as an online bookstore and became an e-commerce giant. The company invested heavily in technology to automate and optimize its supply chain, improve the customer experience and offer a variety of products at competitive prices.\n\nNot only tech lives the success of startups\n\nAlthough tech-enabled companies have expanded their possibilities for growth and innovation, it is important to highlight that not all startups need to be _technology companies to succeed_. Sectors such as food, health and services also offer significant opportunities for startups that offer innovative and differentiated solutions.\n\nStartups in the food sector can focus on sustainable ingredients or the delivery of healthy, ready-to-eat meals. In the health area, startups can develop technologies focused on well-being and remote monitoring. In the services sector, they can create digital platforms that facilitate on-demand services.\n\nThe success of a startup does not depend only on its classification as a technology company, but on its ability to identify problems in the market and provide effective and innovative solutions.\n\n> Although tech-enabled companies have their advantages, other startups _(and/or companies)_ also have room to shine, the important thing is to find the right combination of innovation and value proposition for the target market\n\n==Do you work for a tech-enabled company or a tech company?==",
    "type" : "blog",
    "file-path" : "content/blog/2023-12-01-tech-Enabled-companies-shaping-the-future.md"
  }, {
    "title" : "Why talent density is crucial to long-term business success",
    "date" : "2023-11-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/why-talent-density-is-crucial-to-long-term-business-success",
    "content" : "The concept of talent density is a pivotal factor in the sustainable growth and long-term success of any business. It’s a strategy that has been championed by leading companies like Netflix and has become a cornerstone of their corporate culture. Talent density refers to the concentration of high-performing individuals within an organization. It’s not just about having a few star players, but rather ensuring that every team member is a key contributor to the company’s success.\n\nThere are several stages of a company, each stage requires people/teams with different characteristics.\nI have no doubt that talent density is the best way to grow sustainably.\n\n> I understand companies that are in the moment of accelerated growth and have large teams to “deliver faster”, but one day this law arrives and leads managers to make difficult decisions thinking about what is best for the company.\n\nImplementing Talent Density in Your Company\n\n1. Selective Hiring: Avoid rushing the hiring process. Take the time to find individuals who not only have the necessary skills, but also align with the company’s values and culture;\n2. Performance Recognition: Acknowledge and reward employees who add value. This not only motivates high performers but also sets a benchmark for success within the team;\n3. Cultural Fit and Swift Action: Act quickly to address employees who do not fit the company culture or meet performance standards. This maintains the integrity of the team and ensures that the company’s values are upheld.\n\nI think 3 is essential, it makes item 2 clear to all employees.\n\nthis text came about after reading the text below.\n\n---\n\noriginal publication by Yinon Ravid\n\nPay more, hire less. A counterintuitive hiring principle: you save money when you pay people more. In early 2022, we changed how we hire at Albert. Here’s how we did it: <https://fnd.news/40iJYow>\n\nBecause the productivity of an A player is exponentially higher than a B player, hiring B players means that you need ten times as many people to do each task. This leads to a bloated, slow moving, bureaucratic organization.\n\nAs you hire more B players, costs grow quickly because you need a lot of them, leading to long-term unprofitability. Worse, mediocre talent builds brittle systems that create ongoing fire drills, inevitably on nights and weekends. This ruins morale. In contrast, when you hire exceptional people, things get built quickly, systems run smoothly, and morale is high.\n\nTotal costs go down when you hire the best people and pay them very well.\n\nIn early 2022, we changed our approach at Albert. We decided to hire fewer people, focus on exceptional hires, and pay in the top 5th percentile of our competitors for leadership positions.\n\nThis transformed our organization. We increased productivity and lowered overall costs.\n\nTo find great people at a startup, I follow the 5 principles below, which took me a decade to understand.\n\n1. Clear thinkers only. Find people who can explain what they do to a novice.\n2. No big company people. Big company folks are uncomfortable with how much you have to do on your own at a startup. I’ve never seen this work.\n3. Take your time. Only hire people who you are near-certain will be exceptional. This is very hard to stick to. Missing on a B+ candidate is a good thing.\n4. Find people who prefer ambiguity. Project specs change multiple times for all projects at startups.\n5. Challenge + discomfort = growth. Find people who embrace this principle and are willing to challenge themselves beyond comfort. Employees must grow for a company to grow.\n\nImportantly, anyone can become exceptional. Click the link above to read how.",
    "type" : "blog",
    "file-path" : "content/blog/2023-11-03-why-talent-density-is-crucial-to-long-term-business-success.md"
  }, {
    "title" : "The Power of Writing in English for the Global Open Source Community",
    "date" : "2023-10-24T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/the-power-of-writing-in-english-for-the-global-open-source-community",
    "content" : "In today’s interconnected world, writing in English for the open source community has become a pivotal step for many professionals. It’s not just about language proficiency; it’s about bridging gaps, fostering collaboration, and amplifying the impact of open source projects on a global scale.\n\nThe Journey to Global Connection\n\nIt’s often said that taking the first step is the hardest. For many, including myself, the decision to write in English was a calculated one, influenced by the desire to connect with a broader audience and the recognition of English as a common language in the tech world. This step, although seemingly daunting, is crucial for one’s professional trajectory.\n\n> Embracing a world-class mindset means sometimes being _“selfish”_ with our careers, prioritizing growth and global reach.\n\nThe Essence of Writing in English\n\nWhy the emphasis on English? The answer lies in the heart of the open source community. Writing in English allows for a deeper connection with those who maintain, contribute, and benefit from free open source software (FOSS). Since my early days in 2008, I’ve been an active contributor to various open source projects. By 2015, I found myself maintaining projects that thousands rely on.\n\n> A quick glance at my GitHub account (@avelino) reveals a story of dedication and passion for open source contributions.\n\nWhat Lies Ahead?\n\nChange is the only constant. While the medium of communication might shift to English, the essence remains unchanged. As a technology executive and CTO at a prominent startup in Brazil, my commitment to sharing knowledge, insights, and experiences remains unwavering. The goal is simple: to add value to your professional journey.\n\n---\n\nFor any clarifications, suggestions, or feedback, please feel free to reach out.",
    "type" : "blog",
    "file-path" : "content/blog/2023-10-24-the-power-of-writing-in-english-for-the-global-open-source-community.md"
  }, {
    "title" : "",
    "date" : "2023-09-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/como-criar-e-manter-uma-cultura-organizacional-forte-com-base-em-valores-e-visao",
    "content" : "Não precisar ser uma startup de tecnologia para desenvolver produto - entenda o que é startup tech enabled\n\nQuando pensamos em startups, muitas vezes associamos a esse tipo de empresa o desenvolvimento de produtos tecnológicos. Afinal, são as startups de tecnologia que estão revolucionando a forma como vivemos e trabalhamos, com produtos e serviços inovadores que usam a tecnologia como diferencial competitivo.\n\nNo entanto, nem toda startup de tecnologia desenvolve produtos tecnológicos. Existem também as startups tech enabled, que usam a tecnologia como um meio para melhorar ou facilitar um processo ou serviço já existente.\n\nO que é startup tech enabled?\n\nUma startup tech enabled é uma empresa que usa a tecnologia como um diferencial competitivo, mas não necessariamente desenvolve produtos tecnológicos. Essas empresas podem usar a tecnologia para melhorar a eficiência de seus processos, oferecer novos serviços ou produtos, ou mesmo resolver problemas que não poderiam ser resolvidos de outra forma.\n\nExemplo de startup tech enabled\n\nUm exemplo de startup tech enabled é a Uber. A Uber usa a tecnologia para conectar pessoas que precisam de transporte com motoristas que estão dispostos a fornecer esse serviço. A tecnologia permite que a Uber ofereça um serviço mais eficiente e acessível do que os táxis tradicionais.\n\nA Airbnb usa a tecnologia para conectar pessoas que buscam um lugar para ficar com pessoas que têm um espaço para alugar. A tecnologia permite que a Airbnb ofereça uma variedade maior de opções de hospedagem do que os hotéis tradicionais.\n\nBuser não é diferente, usamos tecnologia como meio de inovação de um setor que estava largado as traças! \n\nDiferença de startup tech e tech enabled\n\nA principal diferença entre uma startup tech e uma startup tech enabled é que a startup tech desenvolve produtos tecnológicos, enquanto a startup tech enabled usa a tecnologia como um meio para melhorar ou facilitar um processo ou serviço já existente.\n\nTecnologia não é o fim e sim o meio para inovação\n\nA tecnologia é uma ferramenta poderosa que pode ser usada para resolver problemas e inovar. No entanto, é importante lembrar que a tecnologia não é o fim em si mesma.\n\nUma startup tech enabled pode ser tão inovadora quanto uma startup tech. O que realmente importa é que a startup use a tecnologia para resolver um problema ou atender uma necessidade de forma eficiente e inovadora.\n\nConclusão\n\nNão é preciso ser uma startup de tecnologia para desenvolver produtos inovadores. As startups tech enabled mostram que a tecnologia pode ser usada para melhorar ou facilitar processos e serviços já existentes, de forma inovadora e eficiente.",
    "type" : "blog",
    "file-path" : "content/blog/2023-09-03.md"
  }, {
    "title" : "Como criar e manter uma cultura organizacional forte com base em valores e visão",
    "date" : "2023-08-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/como-criar-e-manter-uma-cultura-organizacional-forte-com-base-em-valores-e-visao",
    "content" : "A cultura organizacional é o conjunto de valores, crenças e comportamentos compartilhados pelos membros de uma organização. Ela é criada ao longo do tempo (mesmo muitas pessoas dizendo que a cultura é encontrada não criada) e é moldada por uma variedade de fatores, incluindo a história da organização, sua missão, seus valores e suas lideranças.\n\nUma cultura forte pode ser um ativo valioso para a organização. Ela pode ajudar a atrair e reter os melhores talentos, principalmente ~~expurgar~~ as pessoas que não tem aderencia com a cultura, possívelmente aumentar a produtividade e melhorar a satisfação dos clientes. \n\n> Se você deseja construir uma empresa de sucesso, é importante ter uma cultura forte.\n\nComo criar uma cultura organizacional _forte_:\n\n Defina seus valores: o que é importante para sua empresa? Quais são seus valores fundamentais? Uma vez que você tenha uma boa compreensão de seus valores, você pode começar a criar uma cultura que os reflita.\n Comunique sua cultura: certifique-se de que todos colaboradores tenha em mente os valores da empresa e como você espera que eles se comportem. Você pode fazer isso através de treinamentos, campanhas de comunicação interna e outros canais.\n Recompense comportamentos consistentes com a cultura: quando os colaboradores se comportam de maneiras consistentes com a cultura, certifique-se de recompensá-los. Isso os ajudará a entender que você valoriza esses comportamentos e que você espera que eles continuem fazendo.\n Cumpra suas promessas: se você promete algo aos colaboradores, simplismente cumpra. Isso ajudará a construir confiança e credibilidade, o que é essencial para uma cultura forte.\n Seja consistente: a cultura leva tempo para ser construída. Não espere resultados da noite para o dia. Seja paciente e consistente, e você eventualmente verá uma cultura forte se desenvolvendo em sua empresa.\n\nComo alinhar a cultura criada com a liderança\n\nOs lideres tem como responsabilidade de alinhar à cultura organizacional com a estratégia. Eles devem garantir que a estratégia não vá contra os valores, a missão e a visão da empresa, principalmente garantir que a cultura esteja conhectado com os objetivos e metas da empresa.\n\nAlinhar a cultura com a estratégia:\n\n Compreender os valores, a missão e a visão da empresa.\n Compreender os objetivos e metas da empresa.\n Identificar os comportamentos que estão alinhados com a cultura.\n Recompensar os comportamentos que estão alinhados com a cultura.\n Disciplinar os comportamentos que não estão alinhados com a cultura.\n\nComo sustentar a cultura da empresa (evitar a cultura se perder)\n\nA cultura de uma empresa pode se perder ao longo do tempo, se não forem tomadas medidas para sustentá-la. Os diretores são os responsáveis por sustentar a cultura da empresa. Eles devem garantir que a cultura seja continuamente reforçada e atualizada.\n\nPara sustentar a cultura, os diretores devem:\n\n Comunicar os valores, a missão e a visão da empresa de forma contínua.\n Treinar os colaboradores sobre os valores, a missão e a visão da empresa de forma contínua.\n Criar um ambiente de trabalho que seja consistente com os valores da empresa de forma contínua.\n Reconhecer e recompensar os colaboradores que estão alinhados com a cultura de forma contínua.\n Fazer uma avaliação regular da cultura da empresa e tomar medidas para melhorá-la.\n\nSe os diretores seguirem essas dicas, eles podem criar uma cultura de empresa forte que ajudará a empresa a alcançar seus objetivos e metas.\n\nNunca será fácil manter cultura, tenha como base os pilares contratar, promover e demitir:\n\n Contrate pessoas que se encaixem com a cultura: quando você está contratando novos colaboradores, não se esqueça de avaliar sua cultura. As pessoas que se encaixam na cultura são mais propensas a ser felizes e produtivas no trabalho.\n Promova pessoas que estão alinhadas com a cultura: quando você está promovendo colaboradores, certifique-se de escolher pessoas que estão alinhadas com a cultura da empresa. Essas pessoas são mais propensas a contribuir para o sucesso da empresa.\n Demita pessoas que não estão alinhadas com a cultura: se um colaboradores não estiver alinhado com a cultura da empresa, é melhor demiti-lo. Isso ajudará a proteger a cultura da empresa e a garantir que ela seja mantida forte.\n\nFalar sobre desligar pessoas não é muito amigavel - já muitos líderes ter dificuldade de desligar pessoas que não estão aderente com o momento da empresa.",
    "type" : "blog",
    "file-path" : "content/blog/2023-08-11-como-criar-uma-cultura-de-empresa-forte-com-base-em-valores-e-visao.md"
  }, {
    "title" : "Como os resultados podem tornar seu storytelling mais envolvente",
    "date" : "2023-07-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/como-os-resultados-podem-tornar-seu-storytelling-mais-envolvente",
    "content" : "> Contra fatos (resultado) não há argumentos, essa é muito utilizada, mas não é simples aplicar no dia-a-dia.\n\nO storytelling é uma forma poderosa de comunicar idéias e gerar conexão com seu público. Ao contar uma história com dados reais, você compartilhar seus conhecimentos, experiências e perspectivas de uma forma que seja memorável.\n\nOs resultados são fatos e estatísticas que apoiam sua história e ajudam a torná-la mais credível e convincente.\n\nPor exemplo, se você estiver contando uma história sobre os benefícios de um novo produto, inclua resultados de pesquisas que demonstram como o produto melhorou a vida dos clientes.\n\nOs resultados devem ser usados em qualquer tipo de história, seja ela uma história pessoal ou uma história de negócios. Ao usar resultados, você pode tornar seu storytelling mais envolvente e convincente, e você pode ajudar seu público a entender melhor sua mensagem.\n\nSeguem algumas dicas que utilizo para conectar resultado com storytelling:\n\n Entenda qual seu público, conecte o resultado de forma fácil para o público entender.\n Use resultados relevantes para sua história. Certifique-se de que os resultados que você usa sejam diretamente relacionados à mensagem que você está tentando transmitir.\n Use resultados claros e concisos. Evite usar jargões ou termos técnicos que seu público possa não entender.\n Use resultados para apoiar sua história, não para substituí-la. Os resultados devem ser usados para complementar sua história e ajudá-la a ter um impacto maior no seu público.\n\nO storytelling com base em resultados faz muito mais sentido do que história por história. Isso ocorre porque os resultados fornecem provas concretas que apoiam suas afirmações. Quando você pode fornecer resultados para apoiar suas histórias, você está construindo confiança com seu público. Eles veem que você é um profissional que sabe o que está falando, e eles estão mais propensos a acreditar em você e confiar em você.\n\nPortanto, se você deseja contar histórias que sejam envolventes e convincentes, certifique-se de usar resultados para apoiar suas histórias. Os resultados ajudarão você a construir confiança com seu público e a tornar sua mensagem mais poderosa.\n\nBusque resultado, não história\n\nSe focar no resultado, a história será memorável. Infelizmente, se só pensar na história, o resultado tende a ser medíocre.\n\nIsso ocorre porque ao se concentrar no resultado, está pensando onde quer chegar, não em distração que levará para longe dele. Ao pensar em como quer contar a história, tende deixar o ego lhe afastar do objetivo (resultado).\n\nAo se concentrar apenas na história, está propenso contar uma que seja chata, previsível e sem impacto. Isso ocorre porque está focado em contar uma história que seja ~~boa~~ do que compartilhar o resultado em forma de história (relevante para seu público).\n\nEntão, se quer contar histórias que sejam memoráveis, concentre-se no resultado. Pense no que deseja que seu público aprenda. E compartilhe um bom resultado em forma de história relevante para eles.\n\nTechGuide: Storytelling com dados\n\nNesta conversa, o @Paulo Silveira (host que é um contador de histórias), @Valquíria Alencar (Instrutora de Dados na Alura) e @Guilherme Silveira (CINO da Alura) falou sobre Ciência de Dados e storytelling, a capacidade de contar uma história ou passar adiante uma informação clara e interessante quando estamos criando exibições de análises de dados.\n\n<iframe title=TechGuide: Storytelling com dados – Hipsters Ponto Tech #368 src=https://pca.st/embed/znhga6y3 style=border: 0; border-radius: 8px; width: 100% frameborder=0></iframe>",
    "type" : "blog",
    "file-path" : "content/blog/2023-07-15-como-os-resultados-podem-tornar-seu-storytelling-mais-envolvente.md"
  }, {
    "title" : "Fale com confiança como se você estivesse certo, mas escute com atenção como se estivesse errado",
    "date" : "2023-05-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/fale-com-confianca-como-se-voce-estivesse-certo-mas-escute-com-atencao-como-se-estivesse-errado",
    "content" : "Um aspecto crucial do autoaperfeiçoamento é atingir o equilíbrio certo entre confiança e humildade, especialmente em nossa comunicação com as outras pessoas.\n\nDevemos sempre ouvir atentamente os outros porque eles podem nos dar o conhecimento que nos falta às vezes e nos ajudar a corrigir alguns erros que estamos cometendo inconscientemente\n\nConfiança: chave de ouro para uma comunicação clara\n\nA confiança tem um papel fundamental no compartilhamento de ideias, opiniões e conhecimentos. Quando falamos com convicção, é provável que consigamos atrair a atenção das pessoas e gerar impacto duradouro. Porem, a confiança nunca deve ser confundida com arrogância ou mente fechada. É extremamente importante reconhecer que nosso conhecimento, embora valioso, não é infalível.\n\nHumildade: porta de entrada para o aprendizado e o crescimento\n\nEmbora a confiança seja necessária para ter comunicação clara, a humildade é a chave para o aprendizado e o crescimento contínuos. Adotar atitude de humildade significa reconhecer que sempre há mais a aprender e que outras pessoas podem ter percepções que podem ampliar nosso entendimento. Ouvir ativamente (ter escuta ativa) e estar aberto a novas ideias, criamos oportunidades de crescimento pessoal e autoaperfeiçoamento.\n\n> Fale como se estivesse certo, ouça como se estivesse errado\n\nA frase cima resume o delicado equilíbrio entre confiança e humildade na comunicação.\nFalar com convicção permite expressar nossas ideias de forma eficaz, por outro lado, estar em uma conversa com a escuta ativa facilita o aprendizado. Mantendo esse equilíbrio, participamos de um diálogo significativo, desafiar nossas suposições e promover o crescimento pessoal e profissional.\n\nEscuta ativa: arte de obter conhecimento das outras pessoas\n\nEscuta ativa é um componente essencial para uma comunicação eficaz e principalmente do crescimento pessoal. Ao prestar atenção genuinamente nas pessoas, descobriremos novos ponto de vista, identificar brechas (falhas, pontos a melhorar) em nosso conhecimento e evoluir nossa forma de pensar. Promovendo cultura de escuta ativa, podemos criar um ambiente que as ideias e opiniões de todos são valorizadas, que provavelmente nos levará a melhor tomada de decisão, trazendo as pessoas junto (senso mais forte de comunidade).\n\nA estratégia deve ser equilibrar confiança e humildade.\n\nAlgumas estratégias práticas para dominar a arte de confiança e humildade (de forma equilibrada):\n\n Pratique a escuta ativa: busque entender a perspectiva da pessoa que esta falando e faça perguntas esclarecedoras para entender o ponto de vista dele, isso demonstrará seu envolvimento;\n Tenha mentalidade de crescimento: reconheça que seu conhecimento e suas habilidades não são fixos e podem ser desenvolvidos por meio de esforço e aprendizado;\n Busque feedback: solicite regularmente feedback de outras pessoas para descobrir pontos cegos em sua compreensão e identificar áreas para aprimoramento;\n Reflita sobre seus próprios pré-conceitos e preconceitos: esteja ciente de seus próprios preconceitos e suposições, esteja disposto a quebrá-los com novas informações.",
    "type" : "blog",
    "file-path" : "content/blog/2023-05-03-fale-com-confianca-como-se-voce-estivesse-certo-mas-escute-com-atencao-como-se-estivesse-errado.md"
  }, {
    "title" : "How to reuse workflow in GitHub Action pipeline",
    "date" : "2023-04-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/how-to-reuse-workflow-in-github-action-pipeline",
    "content" : "Before I tell you how to do it, I will describe the problem I needed to solve and why I believed that reuse would be the best option to reduce duplicate code.\n\nI maintain an Open Source project called moclojer written in Clojure and we use GraalVM Native Imagem to distribute the software in binary format (with everything self-contained).\nThe configuration of native-image receives several parameters, some refer to libraries used in the project code and it depends on a .jar file, so there are some steps before running the command that generates the binary.\n\nSteps to generate the moclojer binary:\n\n1. generate the .jar file\n2. generate the configuration file reflect.config.json from the .jar.\n3. generate the binary using .jar and reflect.config.json\n4. test if the binary is working correctly - run the software\n5. upload artifact (file) to generate software release on GitHub\n\nIn moclojer I needed to run the pipeline that creates the .jar in every push and pull request, we had the same duplicate code in this pipeline and in the pipeline to generate the binary (Graalvm Native Image).\n\nWhen opening pull request  I don't need to generate the binary every time just once when everything is right with the contribution, but every push  I want to generate the .jar to validate that everything is working.\n\nHow to reuse the workflow in GitHub Action pipeline?\n\nNow that we are clear on the need, let's get to the point of how to do it.\n\nIn a job you have the parameter jobs.<job-name>.uses which accepts .yml file (another workflow), when it reaches this step it will call the external workflow and wait for the output, example:\n\n``yaml\njobs:\n  call-build:\n    uses: moclojer/moclojer/.github/workflows/build-native-image.yml@main\n`\n\nIn the example above I pass the path of the workflow build-native-image.yml which is in the GitHub organization moclojer (first parameter), in the repository moclojer (second parameter) and in the branch main (comes after the name of the file .yml starting with @).\n\n<github-org-OR-profile>/<repo-name>/.github/workflows/<workflow-file-name>@<branch-or-tag>`\n\nIf the workflow being invoked depends on any permissions, the main workflow needs to have the same permissions.\n\nSee the workflow we used for release from moclojer.\n\n> Learn more about workflow reuse in the official GitHub documentation.",
    "type" : "blog",
    "file-path" : "content/blog/2023-04-23-how-to-reuse-workflow-in-github-action-pipeline.md"
  }, {
    "title" : "Reporting a problem in an Open Source project is as important as contributing code",
    "date" : "2023-04-22T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/reporting-problem-in-open-source-project-is-important-contributing-code",
    "content" : "I constantly hear people saying that to contribute to an Open Source project you need to be able to program very well, have a lot of knowledge, be able to handle code criticism, etc.\n\n> I see the above statements as excuses and focus in the wrong place.\n\nIn the last few months, I haven't had as much time to contribute to open source projects as I like (writing code), but that didn't stop me from contributing. Actually, the lack of priority (not lack of time) has made me contribute by reporting problems that I run into in the projects/software I use in my day-to-day life and this has been more work than writing code with a defined specification (issue that someone invested time detailing).\n\nGenerally, reporting a problem is not just opening an issue exposing the back trace, we need to understand what generated the problem, so the person who helps to maintain the project can reproduce it locally (in the development environment) to think of the best solution without breaking other existing features in the software.\n\nHow do I write a very detailed issue?\n\nWhenever I am communicating with someone, I assume that everything that is obvious to me is not so obvious to the person and I put as much context as possible in the conversation, helping the person to make the best decision.\n\nWhen I am opening an issue it is no different, I will describe the problem to the person who will read (solve) it, not to me, i.e. everything that is obvious to me is probably not obvious to other people.\n\nCode is important, but not only code\n\nOpen Source projects exist to solve problems and are made by people for people, investing time in opening a detailed issue demonstrates that you care about the project and empathize with the people who are helping to maintain the project.\n\nAvoid leaving to report the issue later, you will probably forget important details.\n\n> this blogpost came up after I reported an issue in a project and the first comment was from a person saying he had run into the same problem yesterday.\n> what came to my mind was: why didn't the person report this issue yesterday?\n\nQuery that I am constantly following on GitHub to keep track of the issues I opened, looking today there are 1.1k issues in public repositories.",
    "type" : "blog",
    "file-path" : "content/blog/2023-04-22-reporting-problem-in-open-source-project-is-important-contributing-code.md"
  }, {
    "title" : "O trabalho é subconjunto da vida, não superconjunto",
    "date" : "2023-03-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/o-trabalho-eh-subconjunto-da-vida-nao-superconjunto",
    "content" : "Como ex-viciado no trabalho, eu amo orientações que reforça para mim como continuo mantendo equilíbrio entre vida profissional e pessoal :)\n\nNossa vida é uma coleção de vários componentes que a tornam completa e estabelecer um equilíbrio entre eles é a chave para alcançar a felicidade (possivelmente o sucesso a longo prazo, independente do que seja sucesso para você). Passamos boa parte do nosso tempo no trabalho ou pensando no trabalho, é crucial reconhecê-lo como trabalho e ele não deve ser o único fator em nossa vida.\n\n> O trabalho é apenas uma peça do quebra-cabeça\n\n_Embora o sucesso profissional e a segurança financeira sejam super importantes_, é extremamente importante não deixar que o trabalho se torne o superconjunto que domina e ofusca as outras partes da nossa vida. Colocando o foco apenas no trabalho, podemos negligenciar outras áreas críticas que contribuem para uma vida plena, como saúde, familia, relacionamentos, e crescimento pessoal (não necessariamente profissional).\n\nLembre-se que o trabalho é um meio para atingir um fim, ~~não o fim em si~~. Ele deve nos proporcionar os recursos e oportunidades para desfrutar e melhorar outras áreas de nossas vidas.\n\n> Mas e se eu realmente amo o que faço?\n\nMuitas vezes surge em discussões sobre o equilíbrio trabalho e vida. É 100% certo encontrar alegria em seu trabalho. Dito isto, devemos ser intencional onde queremos passar nosso tempo para se divertir e reconhecer que nem todos podem estar na mesma posição são fatores importantes.\n\nCriando uma vida bem fundamentada\n\nAlgumas medidas práticas que podemos tomar para construir uma vida equilibrada:\n\n- Priorizar as relações: cultivar e manter relações fortes com a família, amigos e entes queridos. Reserve um tempo dedicado a conectar e nutrir esses laços, pois eles proporcionam um sistema vital de apoio e equilíbrio emocional.\n- Invista em sua saúde: faça esforço consciente para priorizar seu bem-estar físico, mental e emocional. Exercite-se regularmente, coma saudavelmente, pratique técnicas de redução do estresse e procure ajuda profissional quando necessário.\n- Busque interesses pessoais: reserve tempo para passatempos e interesses fora do trabalho. Envolver-se em atividades pelas quais você é apaixonado pode levar ao aumento da felicidade, à redução do estresse e a uma maior sensação de realização.\n- Estabeleça Fronteiras: estabeleça limites claros entre o trabalho e a vida pessoal. Evite trabalhar horas excessivamente longas ou trazer trabalho para casa. Ao estabelecer limites, você pode proteger seu tempo e energia para outros aspectos essenciais da vida.\n- Abrace a aprendizagem ao longo da vida: continue aprendendo e crescendo, tanto pessoal quanto profissionalmente. Busque novas experiências, adquira novas habilidades e desafie-se a ser a melhor versão de si mesmo.\n- Reflita e Reavalie: reflita e reavalie regularmente sobre sua vida e avalie se você está mantendo um equilíbrio saudável. Ajuste suas prioridades e compromissos de acordo para garantir que você esteja vivendo em alinhamento com seus valores e aspirações.\n\nSe for adequado para você, não deixe que o trabalho domine todo o quadro; ao invés disso, procure criar uma vida bem balanceada e equilibrada que englobe todos os diferentes aspectos que trazem sentido e realização à sua existência.",
    "type" : "blog",
    "file-path" : "content/blog/2023-03-22-o-trabalho-eh-subconjunto-da-vida-nao-superconjunto.md"
  }, {
    "title" : "Construindo uma cultura de engenharia de produto",
    "date" : "2023-02-05T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/construindo-cultura-de-engenharia-de-produto",
    "content" : "Antes de falar sobre como criar cultura de engenharia de produto precisamos alinhar o que é Engenharia de Produto (para pessoa engenheira de software) e principalmente o que é cultura (ou pelo menos o que estou chamando de cultura).\nEngenharia de Produto é um processo que colocamos nosso usuário como protagonista do produto que estamos desenvolvendo e buscamos entender os pontos com maior fricção para priorizar o que precisa ser feito (não só o que queremos). Geralmente pessoas engenheiras de produto são apaixonadas em usar tecnologia para resolver problemas e sabe como aplica-la para solucionar problema a curto, médio e longo prazo, começando de forma simples (também podemos chamar de MVP) e conectada com a estratégia de longo prazo. Leia mais aqui.\nCultura é o conjunto de saberes, costumes, tradições e expressões transmitidas de geração em geração por um grupo de pessoas, à forma como essas pessoas encaram o mundo e interagem entre si.\n\nO que é Cultura de Engenharia de Produto\n\nÉ uma abordagem para desenvolver produtos de alta qualidade e rentáveis, envolvendo as melhores práticas da engenharia, a criatividade e a colaboração. Esta cultura se concentra em obter maior lucratividade e sucesso dos produtos na vida útil. Isso inclui o uso de análise de desempenho, análises de risco, pesquisa de mercado e processos de design para criar produtos que atendam às necessidades dos clientes. Também incentiva a inovação, a busca de excelência e uma mentalidade de longo prazo.\nVisando garantir o sucesso do produto, a cultura incentiva a colaboração entre as pessoas envolvidas no processo. Por exemplo, pessoas engenheiras trabalhar próximo de pessoas de marketing, comercial e etc, com o propósito de desenvolver um produto para atender melhor às necessidades dos clientes. Essa colaboração é essencial para o sucesso do produto e para assegurar que o produto está evoluindo com a necessidade dos clientes e não por ~~achismo~~ dos gestores.\nA cultura de engenharia de produto também trabalha com um escopo mais amplo de perspectivas de negócios. Por exemplo, levamos em conta a manutenção e o processo de atualização do produto, além do custo em que o produto foi produzido e o retorno sobre o investimento. Ao usar esses recursos para obter informações sobre como melhorar o desempenho dos produtos, os profissionais de engenharia de produto podem criar soluções eficientes e lucrativas para qualquer problema.\nO aspecto chave de uma cultura de engenharia de produto é o foco na colaboração e comunicação. Isto envolve reuniões regulares e check-ins para assegurar que todos os membros da equipe estejam na mesma página, bem como a utilização de ferramentas e tecnologias para facilitar a colaboração e comunicação (independente da localização de cada membro do time) - sem sombra de dúvida as metodologias ágeis ajudarão muito e garantirá a recorrência da comunicação.\nEm resumo, uma cultura de engenharia de produto é caracterizada por um foco na entrega de produtos de alta qualidade que satisfaçam as necessidades dos clientes, bem como um compromisso de colaboração, comunicação, e melhoria contínua. Ao promover este tipo de cultura, as organizações podem criar um ambiente de trabalho positivo e produtivo que permita a máxima inovação e sucesso.\n\nComo criar uma Cultura de Engenharia de Produto?\n\nIndependente da cultura que você quer ou precisa criar é um processo árduo, contínuo e leva tempo - cultura não será criada do dia para noite - quando você cansar de falar sobre a cultura será o momento que as pessoas estão começando entender o primeiro item da cultura, isso significa que a liderança deve constantemente investir muito tempo para falar sobre cultura e formar novos guardiões da cultura.\nA chave para o sucesso da criação de cultura é o diálogo contínuo, o envolvimento das pessoas no processo e consistência na prática. Descrevo abaixo como tenho feito para construir essa cultura na Buser:\n\n Desenvolva software coletando métricas dos seus usuários. É comum ter ansiedade (pressa) para colocar um novo recurso do produto no ar, mas não caia na armadilha de colocar o recurso em produção sem antes coletar métricas úteis de uso do novo recurso. Tendo métricas conseguimos priorizar a evolução do recurso ou até mesmo descontinuar o recurso.\n Busque sempre conhecer seu usuário. Quanto mais você conhecer seu cliente melhor é (tenha empatia), entrevistas, discoveries e etc são primordiais para se conectar com ele - é comum pessoas que não conhece produto não gostar de discovery por ter tido experiencia com discovery que levam dias e dias, não crie pré-conceito com suas experiências ruim antes de estudar sobre discovery.\n Conheça os dados que esta capturando. Você deve ser a pessoa que mais conhece os dados que esta capturando do seu cliente (mesmo que seja um simples click no botão XYZ).\n Busque usar dados como seu guia. Ser data drive não é nada fácil (principalmente para quem está começando), então comece usando os dados como validador do seufeeling, mas busque ter dados confiáveis, assim conseguira deixar o feeling de lado e usar verdadeiramente os dados.\n Invista muito tempo em melhorar a comunicação. Ter uma comunicação clara e concisa não é fácil - o maior problema das empresas são GAPs de comunicação. Se o time todo não estiver indo pro mesmo lado faremos um cabo de guerra, gastando energia com assuntos desnecessários.\n Conecte as pessoas engenheiras com o negócio. Seremos melhores pessoas engenheiras quando conseguirmos entender o negócio da empresa. Estimule e dê tempo para seu time de engenharia entender sobre o negócio, se possível incentive eles a se tornar usuário do produto que desenvolve.\n Entenda todos os custos envolvidos. Tenha controle do custo que seu produto gera, assim você conseguirá estimar quanto o novo recurso custará e entender se vale o investimento. Exemplo: o custo do time éde R$ 100 mil/mês, o novo recurso vai agregar R$ 10 mil/mês, você precisa de 10 meses de faturamento (depois que o novo recurso entrou no ar) para recuperar o investimento. Não estou falando para não arriscar no desenvolvimento desse recurso e sim entender se não tem outro recurso que pode ter mais ROI (retorno sobre investimento).\n Esteja aberto para feedback. A melhor maneira de melhorar a cultura é ouvindo as pessoas que vão viver ela no dia a dia. Peça o feedback deles sobre tudo, incentivando a colaboração e o diálogo aberto - isso fará as pessoas se sentir parte da definição da cultura, assim formando fiéis guardiões.\n Desenvolva e incentive a liderança. Identifique bons líderes entre os seus colaboradores, estimule-os e treine-os para replicar uma cultura saudável.\n Crie oportunidades para a colaboração. Crie oportunidades para que as pessoas trabalhem juntas em projetos* interessantes - estimular a colaboração cria um ambiente de trabalho produtivo e de sucesso.",
    "type" : "blog",
    "file-path" : "content/blog/2023-02-05-construindo--cultura-de-engenharia-de-produto.md"
  }, {
    "title" : "O Caminho do Engenheiro Experiente (staff): agora você é um modelo (desculpe)",
    "date" : "2022-12-14T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/o-caminho-do-engenheiro-experiente-agora-voce-e-um-modelo-desculpe",
    "content" : "O livro que eu esperava há muito tempo está finalmente lançado: The Staff Engineer's Path, escrito por Tanya Reilly, Engenheira Principal Sênior da Squarespace.\n\n\n\nNo artigo Engineering Career Paths at Big Tech and High-Growth Startups, Gergely Orosz cobriu os caminhos de carreira típicos em empresas de tecnologia, incluindo a de Engenheiro Experiente (staff). A função de Engenheiro de Experiente (staff) é a menos explorada e menos documentada. Sem contar o excelente livro de Tanya, a única literatura profunda eu poderia recomendaria era o livro Staff Engineer de Will Larson. Porem, o livro de Tanya é o primeiro que fornece um manual de como se tornar uma pessoa engenheira experiente (a nível de Staff).\n\nComprei a versão (ebook) no dia do lançamento. Fica aqui minha resenha, que também está dentro da edição impressa:\n\n> Se você é um engenheiro sênior querendo saber qual é o próximo nível, um engenheiro de nível de pessoal ou um gerente de engenheiros de pessoal, este livro é para você. Ele cobre muitas das coisas que ninguém lhe diz sobre este papel - coisas que levam longos anos, mesmo com grandes mentores, para serem descobertas por você mesmo.",
    "type" : "blog",
    "file-path" : "content/blog/2022-12-14-o-caminho-do-engenheiro-experiente-agora-voce-e-um-modelo-desculpe.md"
  }, {
    "title" : "Pessoas desenvolvedoras com pensamento de produto - Engenharia de Produto",
    "date" : "2022-08-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/pessoas-desenvolvedoras-com-pensamento-de-produto-engenharia-de-produto",
    "content" : "A cada dia que passa é mais comum as empresas querer puxar as pessoas desenvolvedoras para área de negócio, por outro lado, as pessoas desenvolvedoras não querem ir para área de negócio.\n\nAcho meio logico o porquê as pessoas desenvolvedoras não querem ir para área de negócio, ela estudou (esta estudando) alguma área relacionada com computação, se ela de fato quisesse ir para área de “negocio” provavelmente ela não teria feito computação.\n\nSerá que nós pessoas desenvolvedoras não devemos pensar um pouco mais como engenheiro de produto ao invés de só dizer que não quer ir para área de negócio?\n\nO que é engenharia de produto?\n\nComparado a um engenheiro de software, a pessoa Engenheira de Produto é alguém que acredita que seu tempo é melhor utilizado para entender as necessidades dos clientes e trabalhar para construir as melhores soluções para atender os clientes.\n\nEm vez de colocar seus esforços apenas nos aspectos técnicos essa pessoa olha para a experiência do usuário (UX), sem deixar de lado a infra-estrutura de tecnologia. É envolvida em todo o ciclo de descoberta de produto para trazer seu olhar de tecnologia para a solução que melhor atende o usuário.\n\nA pessoa engenheira de produto busca inovação, estratégia e entusiasmo em entregar o que o usuário do produto precisa, não só o código que faz o produto se tornar realidade — código é o meio para resolver algum problema, não a entrega final para o produto.\n\nSabemos o impacto que o código gera para o negócio e usuários, mas ele não é o protagonista para o produto. Aproximando pessoas de engenharia, produto e design possivelmente chegaremos na melhor solução para o problema, sempre colocando o usuário como centro da tomada de decisão.\n\nNão basta entregar software” sem pensar como os dados gerado por ele será usado. A maioria dos produtos depende de software para gerar dados e com os dados as pessoas de negócio conseguir tomar a melhor decisão para qual caminha o produto ou empresa deve seguir.\n\n> Geralmente o engenheiro de software coloca seus esforços em entregar o software que esta desenvolvendo, pensando pouco como o software e dados serão usados.\n\nEm resumo: a pessoa engenheira de produto é alguém que busca entender o usuário e pontos com maior fricção. São apaixonados em usar tecnologia para resolver problemas e sabe como aplica-la para solucionar o problema a curto, médio e longo prazo, começando simples e conectada com a estratégia de longo prazo.\n\nTodas pessoas desenvolvedoras devem ser engenheiras de produto?\n\nNão sei responder essa pergunta, mas acredito que todas as pessoas desenvolvedoras deveriam entender porque está recebendo seu salário, geralmente não é só para escrever qualquer código e sim transformar problema em solução que agregue mais valor para o negócio da empresa em formato de código.\n\n> Seremos melhores pessoas engenheiras quando conseguirmos entender o negócio da empresa.\n\nPara responder essa pergunta para mim, fui à teoria como um time de alta performance é formado.\n\nEquipe de alta performance pode ser definida como um grupo de pessoas que possuem talentos e competência que se complementam, que estão alinhados e comprometidos com um objetivo em comum, demonstra um alto nível de colaboração e inovação, assim resultando em ações com qualidade. Sempre unida e focada em seu objetivo, pronta para suportar algum membro que esteja enfrentando alguma dificuldade ou barreira e para assim garantir que irá atingir o objetivo.\n\nÉ uma equipe em que as pessoas têm um altíssimo grau comprometimento com o resultado de alto nível. Por isso, que os membros do time possuem a colaboração como uma característica para resolução de problemas.\n\nEquilíbrio entre Qualidade e Entrega\n\nO CEO (Chief Executive Officer) quer mais clientes, CTO (Chief Technology Officer) quer um excelente software, CPO (Chief Product Officer) busca resolver ambos assuntos usando esse conhecimento e experiência aplicada no produto, com dados, metodologia e métodos.\n\nO engenheiro de produto usa sua experiência técnica para trabalhar com a equipe de desenvolvimento, priorizando o que precisa ser feito contra o que pode ser feito, metrificando tempo investido e retorno para o produto.\n\nO centro da priorização deve ser os dados de uso do produto, buscando entregar o que o cliente precisa e menos o que “achamos” que ele precisa. Para determinar esse valor, devemos conseguir usar a tecnologia para criar protótipos dos novos recursos, descobrir como eles se encaixam na experiência do usuário e entender como eles impactam o produto atual.\n\nUsando a tecnologia para criar laços de feedback, priorizando o que deve ser construído no próximo ciclo, interpretando o resultado dos dados coletados contra o que seu conhecimento previu de mercado, levando isso de volta ao time de desenvolvimento e recomeçando o ciclo novamente.",
    "type" : "blog",
    "file-path" : "content/blog/2022-08-11-pessoas-desenvolvedoras-com-pensamento-de-produto-engenharia-de-produto.md"
  }, {
    "title" : "Gerentes: não ocupem cada minuto de suas agendas, deixem um espaço para reais imprevistos",
    "date" : "2022-06-29T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/gerentes-nao-ocupem-cada-minuto-de-suas-agendas-deixem-um-espaco-para-reais-imprevistos",
    "content" : "A demanda por tempo de um gerente são infinitas e às vezes parece que você é demandado por todas as direções ao mesmo tempo. Provavelmente isso dificulta o foco e habilidade de ter visibilidade dos problemas futuros. Nesse blogpost conversaremos como limitar as pessoas exigirem mais do seu tempo e provavelmente fazer mais com menos.\n\nContextualizando\n\nUma das primeiras coisas que aprendi como gerente foi que se eu não reservar um horário na minha agenda para almoço, provavelmente não almoçaria naquele dia. Quando era engenheiro eu pensava que sabia o que significava ter muitas reuniões, mas minha promoção trouxe muitas pessoas querendo falar comigo e elas raramente pensavam se eu já teria almoçado ou não — as pessoas querem resolver os seus problemas e reunião é uma forma delas resolver, cuidar da nossa saúde deve ser nossa responsabilidade não de outras pessoas.\n\nAlguns meses depois, aprendi um pouco mais sobre minha agenda. Estava viajando a trabalho em outro fuso horário diferente (2 horas à frente da minha equipe). Para o trabalho não ocupar meu horário de jantar (as refeições são muito importante para mim), reservei no calendário qualquer reunião depois das 3pm (5pm no fuso horário da minha equipe). Como não tinha pessoa trabalhando as 7am, trabalhava média de 6 horas por dia, percebi que no final da semana tinha sido mais produtivo, mesmo estando disponível por menos horas.\n\nAssim que voltei de viagem configurei o meu calendário para mostrar meu horário de trabalho das 10am às 4pm.\n\nDemorei um pouco para entender realmente o que aconteceu e por que estava funcionando. O que começou a me ajudar a montá-la foi essa thread no twitter:\n\n\nCalendário como quadro Kanban\n\nKanban é um framework de manufatura enxuta desenvolvido na Toyota e adotado entusiasticamente pela indústria de desenvolvimento de software. O framework me agrada bastante, e descobri ter funcionado bem para mim no passado. Ele divide os fluxos de trabalho em etapas e limita o número de itens que podem se acumular em uma única etapa.\n\nO fluxos de trabalho geralmente se assemelham a algo assim:\n\n\n\nEsse board parece com o quadro quem gerencio na minha vida:\n\n\n\nTrabalho paralelo é assombroso. Ao invés de etapas de fluxo de trabalho, uso dias da semana e limite arbitrário de itens, tenho a restrição física de número de horas em um dia. Usando blocos de foco e horas de trabalho para limitar os intervalos disponíveis de 30 minutos no meu calendário, dessa forma consigo limitar o potencial trabalho em andamento (WIP), geralmente conhecido como tempo de reunião.\n\nPor que faria isso?\n\nOs benefícios são óbvios (pelo menos para mim) — menos exigências no meu tempo, menos trabalho para fazer, tudo em torno de um trabalho menos estressante, além disso, me senti mais produtivo. De onde isso vem? Minha resposta a essa pergunta veio deste fantástico tweet:\n\n\nEstou citando isso — porque é uma verdade, mas a tl;dr (longo prazo) provavelmente surgirá um imprevisto, pequenas interrupções se transformam em grandes atrasos porque não tem como recuperar o atraso.\n\n> Pense em um engarrafamento no horário de pico — a maioria dos motoristas quer dirigir a toda velocidade, mas como não há espaço entre os carros, se uma pessoa reduz a velocidade todas as outras pessoas também devem reduzir.\n\nComo faço?\n\nMeu horário de trabalho e meu horário de almoço não são absolutos — eles são flexíveis. Quando tenho que participar de uma reunião de vendas (uma necessidade consistente, mas imprevisível), é mais fácil movimentar minha agenda para participar. Quando preciso me envolver em um projeto, relatório ou qualquer evento que não consiga esperar, eu tenho espaço na minha agenda para dar atenção.\n\nIsso não seria possível se tivesse ocupado cada minuto da minha agenda. Nesse caso eu teria que repriorizar na hora, tendo que derrubar alguma reunião previamente agendada, gerando frustração nas pessoas que estava esperando a reunião ou entrega que tinha me comprometido.\n\nNesse caso o única frustração que tenho é com meu estômago, quando espero um pouco mais pelo almoço daquele dia.\n\n> Texto original publicado por Erik Wiffin",
    "type" : "blog",
    "file-path" : "content/blog/2022-06-29-gerentes-nao-ocupem-cada-minuto-de-suas-agendas-deixem-um-espaco-para-reais-imprevistos.md"
  }, {
    "title" : "Palestra: Uma carreira profissional baseada em Open Source - Engenharia de Software",
    "date" : "2022-06-17T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/palestra-uma-carreira-profissional-baseada-em-open-source-engenharia-de-software",
    "content" : "Nessa palestra falo como faço para guiar minha carreira profissional contribuindo com projetos Open Source — já contribuiu com o core da linguagem Go, MongoDB, Riak, Django, ReactiveX e muitos outros projetos.\n\nA quem acredite que viver financeiramente de Open Source não é possível, mostro como fiz até hoje que doação não é a única opção, mas infelizmente é a primeira opção que vem a mente na maioria das pessoas.\n\nEm todas as empresas que liderei usei open source como estrategia de tecnologia para atração e retenção de profissionais, comunicação distribuída (poderia falar assíncrona, mas ainda não consegui fazer isso funcionar de forma performática), forma de compartilhar conhecimento como o time, developer experience (_DevX_) e etc.\n\nVídeo\n\n{{< youtube PTuvCobVIwY >}}\n\nSlide\n\n{{< speakerdeck 9e40e0a2c7664449a50c15b7ea3a2386 >}}",
    "type" : "blog",
    "file-path" : "content/blog/2022-06-17-palestra-uma-carreira-profissional-baseada-em-open-source-engenharia-de-software.md"
  }, {
    "title" : "Do querer fazer parte a CTO",
    "date" : "2022-06-02T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/do-querer-fazer-parte-a-cto",
    "content" : "Após ver a iniciativa que a Buser teve de formar pessoas em casa com o programa Buser Tech, eu quis me aproximar deles de alguma forma — não sabia como nem o que fazer, mas queria fazer parte da festa.\n\nAjudei muitas pessoas engenheiras evoluírem profissionalmente (mesmo que seja 0,001%), mas nunca formei ninguém do zero e senti estar no momento de aprender com quem está fazendo isso há alguns anos.\n\nConheço o @Tony há muitos anos e no final de 2021 tomei a liberdade de mandar mensagem para ele e expressar meu interesse.\n\nNão me sentia confortável de entrar na Buser para sugar conhecimento, então propus entrar no time de engenharia como desenvolvedor e acompanhar o que está rolando no Buser Tech.\n\nNo 1:1 com Tony ele compartilhou comigo que estava buscando alguém para assumir o papel de CTO na Buser. Confesso que não entendi porque ele estava compartilhando aquilo comigo, a única resposta que me veio no momento foi:\n\n> Sé você está falando isso para eu ser CTO você está falando para a pessoa errada.\n\nAo chegar e esbarrar com os softwares que desenvolvemos na Buser comecei a pensar como o pessoal que está no programa Buser Tech (com praticamente zero experiência em desenvolvimento de software) iria conseguir subir o ambiente de desenvolvimento que eu com alguns anos de experiência em engenharia estava com algumas fricções. Encarei isso como meu primeiro desafio de reduzir a fricção do onboarding do time de engenharia trazendo um olhar de developer experience.\n\nDepois de alguns dias/semanas senti que poderíamos melhorar nossa gestão de pessoas e projetos, corri para o papai Tony e me coloquei à disposição para ajudar como Tech Manager.\n\nO assunto de possivelmente ser CTO ficou na minha mente por dias e dias, cheguei a indicar um CTO para posição que infelizmente não deu match, mas vida que segue e meus monstros internos continuaram me assombrando sobre a posição de CTO.\n\nGeralmente quando tenho frio na barriga me soa que estou olhando para um grande desafio e existe um grande desconhecido — principalmente o que preciso evoluir como pessoa e gestor, nesse caso uma empresa com mais de 500 pessoas.\n\nApós empreender por alguns anos, não quero fazer uma empresa do zero até chegar em 500 pessoas (momento atual da Buser), mas tenho certeza que o desafio de ScaleUP de uma startup me leva mais próximo do meu objetivo profissional.\n\nMesmo com frio na barriga e julgar ser uma pessoa que precisa evoluir muito estou assumindo a posição de CTO da Buser.\n\nO Tony está saindo da buser? Não, ele está voltando para próximo do time de engenharia e educação — onde ele sente que entrega muito mais resultado para a empresa. Veja aqui a publicação que ele fez publicamente sobre esse movimento.",
    "type" : "blog",
    "file-path" : "content/blog/2022-06-02-do-querer-fazer-parte-a-cto.md"
  }, {
    "title" : "Texto é a forma mais eficiente de escalar sua comunicação",
    "date" : "2022-05-12T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/text-e-a-forma-mais-eficiente-de-escalar-sua-comunicacao",
    "content" : "> É comum trocar essa falta de texto por call, nos enganando achando que é mais rápido, o grande  problema é que dessa forma fazemos N call para tentar deixar todas as pessoas por dentro do assunto.\n> Deixando a solução mais rápida menos eficaz drenando mais tempo do que escrever um bom texto passando contexto para as pessoas envolvidas\n\nCom a aceleração do trabalho remoto muitas empresas acaba criando uma rotina insana de calls (provavelmente causada pela pandemia), se você olha a agenda dessas pessoas tem um call apos o outro sem ter tempo de planejar o que será discutido e processar o que foi discutido no call anterior porque está atrasado para o próximo call - isso pode piorar, em muitas reuniões não praticamos escuta ativa por ter outros assuntos na cabeça e não ter se preparado para reunião.\n\nProvavelmente a empresa não paga nosso salário por horas de reuniões/calls e sim pelo resultado que você agrega para o negócio.\n\nSei que não é fácil escrever texto dando contexto para todas as pessoas (as que conhece o assunto e principalmente as que não conhece o assunto), as empresas sempre terão novos colaboradores entrando no time, texto bem estruturado fará os novos colaboradores entenderem o que fazemos e como fazemos.\n\nO que faço para tentar estruturar uma boa thread no slack (ou qualquer ferramenta de comunicação corporativa por texto)\n\n- Quando estou escrevendo um texto é me colocar no lugar da pessoa que vai ler e tem zero conhecimento sobre o assunto, isso me faz pensar muito mais sobre o que estou escrevendo, dando o máximo de contexto para que as pessoas consigam ter autonomia para agir;\n- Estruturar meu texto com assunto, introdução, desenvolvimento e conclusão;\n- Escrever fora da ferramenta (slack) para não ter ansiedade de enviar o texto antes da hora, reler por diversas vezes faz parte do processo de se colocar no lugar de quem vai ler o texto;\n- Escutar o que você escreveu: uso muito o leitor de tela (em 2x) para escutar o que escrevi, existe uma diferença grande em interpretação quando lemos e escutamos.\n\n_Texto nasceu ao esbarrar na publicação sobre daily meeting feita pelo Eduardo Matos, veja aqui._",
    "type" : "blog",
    "file-path" : "content/blog/2022-05-12-text-e-a-forma-mais-eficiente-de-escalar-sua-comunicacao.md"
  }, {
    "title" : "O método Pink Dot - minimalismo",
    "date" : "2022-04-02T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/metodo-pink-dot-minimalismo",
    "content" : "Em 2016 lê o livro _Essentialism: The Disciplined Pursuit of Less_ e tentei desapegar do máximo de _coisas_ desnecessárias e de lá para cá, reflito muito sobre tudo que vou comprar, mas desapegar do que já compramos não é uma tarefa muito fácil.\n\nEnquanto limpava e me livrava das coisas que não usava mais, comecei a encontrar objetos que me faziam pensar que talvez um dia eu precisasse deles. Provavelmente não iria precisar, mas o sentimento de apego pelo que é _meu_ falava mais alto.\nUm exemplo disso é uma ~cafeteira italiana moka~ que tinha impressão que usava, mas depois de 1 ano percebi que não tinha usado.\n\n\n\n\nEm vez de simplesmente me livrar das _coisas_, comecei usar o método Pink Dot que pode (deve) ser usado para situação como esta.\n\nA ideia é simples e ironicamente começa com a necessidade de comprar algo... ou seja, adesivos de ponto rosa.\nSempre que você encontrar um objeto que você possa usar, ou pensar que vai usar e por qualquer motivo você não possa justificar se livrar dele, coloque um adesivo cor-de-rosa, agora é ~só~ ter calma e deixar o tempo passar.\n\nQuando você usar por objeto por pelo menos 10 vezes que tenha um adesivo cor-de-rosa, você deve remover o adesivo.\n\nDepois de seis meses, abra todos os armários e separe todas as coisas que tem o adesivo cor-de-rosa.\n\nProvavelmente você não vai precisar dele, não precisou até agora.",
    "type" : "blog",
    "file-path" : "content/blog/2022-04-02-metodo-pink-dot-minimalismo.md"
  }, {
    "title" : "Sabbatical time focused on developer experience (DevX)",
    "date" : "2022-03-20T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/sabbatical-time-focused-on-developer-experience",
    "content" : "",
    "type" : "blog",
    "file-path" : "content/blog/2022-03-20-sabbatical-time-focused-on-developer-experience.md"
  }, {
    "title" : "Tempo sabático focado em experiência da pessoa desenvolvedora (DevX)",
    "date" : "2022-03-20T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/tempo-sabatico-focado-em-experiencia-da-pessoa-desenvolvedora-devx",
    "content" : "O último _tempo sabático_ que tirei foi no final de 2018 quando sai do dia-a-dia da empresa que fundei em 2015, foram intensos 4 anos de trabalho e precisava parar para oxigenar meu cérebro.\n\nNo meio de 2019 resolvi voltar ao mercado de trabalho para aprender sobre como as empresas de tecnologia estão estruturando time de engenharia de software — vinha empreendendo desde 2012 até 2018 e estruturando time de engenharia como julgava ser a melhor forma, senti precisar ganhar experiencia com quem estava em momento de _scaleup_, fazendo com excelência o que eu queria aprender.\n\nEstudando sobre UX\n\nDe 2019 para cá não investi tempo para aprender assuntos diferentes que não necessariamente me dê ~dinheiro~. Em _dezembro/2021_ resolvi financiar meu aprendizado (passar alguns meses sem trabalhar e estudando) e resolvi investindo meu tempo em Experiência do Usuário (focando na _pessoa desenvolvedora_).\n\nSendo mais específico estudei sobre os seguintes assuntos:\n\n- Psicologia Cognitiva;\n- Usabilidade e Interação;\n- Interação Humano-Computador;\n- Design System;\n- e muitos outros assuntos relacionado a UX (não especifico para DevX).\n\n> Todos os temas voltado para experiência de pessoas, não necessariamente pessoa desenvolvedora.\n\nTudo que estudo profundamente coloco em prática em um ambiente publico, geralmente uso projeto Open Source para isso, sendo contribuindo com algum projeto existente ou começando um novo projeto (~caso não existe~, é muito difícil não existir um projeto open source que faça uma parte da ideia que você não teve).\n\nColocando o estudo em prática\n\nSou um dos criadores do prestd (simplifica abrir o banco de dados PostgreSQL como uma API RESTful), infelizmente subir o ambiente de produção para o prestd não era uma tarefa simples (ainda não é, mas estamos no caminho) e só de pensar em subir o ambiente para desenvolver e/ou contribuir com o projeto era ainda mais complicado — eu sentia/sinto vergonha que ajudei desenvolver um projeto com uma barreira super alta para contribuição, eu só tive essa visão após estuda sobre UX com foco em DevX. Quando tenho esse tipo de sentimento (vergonha ou algum problema) gosto de trazer os problemas para meu colo, assim tenho a oportunidade de assumir a responsabilidade de melhorar o que esta me incomodando.\n\nAlguns passos importantes que o prestd deu para simplificar a vida da pessoa desenvolvedora (que quer usar ou contribuir com o projeto):\n\n- Reestruturar a documentação com o pensamento de quem vai usar o projeto, não com pensamento de quem já conhece o projeto;\n- Limitar o número de novos recursos que entra no projeto, precisamos colocar esforços nos recursos atuais melhorando a documentação e simplificando o uso;\n- Simplificar a criação do ambiente de desenvolvimento, usando devcontainers (e sua integração com GitHub Codespace), docker-compose e permitir rodar os testes localmente (na real ele rodava localmente, mas tinha que configurar muitas coisas e até eu deixar rodar no _CI_). Escrevi aqui um blogpost falando desse processo;\n- ..., ainda temos muito que fazer/melhorar para deixar o prestd um software amigável para novas pessoas desenvolvedoras, mas sinto que estamos em uma constante evolução.\n\nQuando falamos de DevX (UX focado nas pessoas desenvolvedoras) precisamos ter empatia com as pessoas que vão usar o software que estamos desenvolvendo, e não _só_ com as pessoas que conhece o projeto, devemos nos colocar no lugar das pessoas e buscar sentir o que elas sentiriam se estivesse embarcando hoje no projeto sem ter conhecimento prévio.\n\n> O que você tem feito para deixar o software que você esta desenvolvendo atualmente mais acessível para seus usuários e novos membros do time? Lembre-se que o código é (e acredito que sempre será) um meio para chegar em algum lugar e não a linha de chegada, principalmente quando estamos falando sobre desenvolver software para outras pessoas desenvolvedoras usar - nós desenvolvedores somos pessoas que tem muito _viés cognitivo_.",
    "type" : "blog",
    "file-path" : "content/blog/2022-03-20-tempo-sabatico-focado-em-experiencia-da-pessoa-desenvolvedora-devx.md"
  }, {
    "title" : "We are more than 75,000 people (stars 🌟) — awesome-go",
    "date" : "2022-02-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/we-are-more-than-75000-people-awesome-go",
    "content" : "[](http://github.com/avelino/awesome-go)\n\nI've been meaning to write this blogpost since when we reached 10,000 stars 🌟 (I never imagined it would reach that number of people), but every day I reached more (and more) people and always thought the text would get outdated.\n\n> Today is the day to thank everyone who uses, contributes and follows awesome-go, it's time to celebrate 🎉🙌 — regardless of the number we reach and the people we help in some way.\n\nAwesome-go was born on 2014-07-06 inspired by the _awesome-python_ project, after the first commit containing _3 categories_ I messaged some friends who used Go at work to help list the libraries they used in their day-to-day work.\n\n\n\nI never imagined that a _“no code”_ project would receive so many contributions (we are more than 2000 contributors).\n\nAs the number of pull requests grew, reviewing the contributions became impossible, and we had to invest time to automate our review work as much as possible by bringing in an automated process via CI to optimize the time of all maintainers of the project (now using code), running on each open pull request.\n\nThanks to 🙏\n\nI’m grateful to our community for all the support, I am excited by the number of people we reach and somehow help them find the best library for their project 💜.\n\nHere is my eternal gratitude to all the people who send in their libraries and who help me keep awesome-go running (the maintainers, _you are amazing_).\n\n👉 Help us reach 100k! 🌟 http://github.com/avelino/awesome-go",
    "type" : "blog",
    "file-path" : "content/blog/2022-02-03-we-are-more-than-75000-people-awesome-go.md"
  }, {
    "title" : "Constante trabalho para absorver novas pessoas em time de engenharia",
    "date" : "2022-01-12T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/constante-trabalho-para-absorver-novas-pessoas-em-time-de-engenharia",
    "content" : "Desenvolver o processo de _“bordo” (onboarding)_ para uma nova pessoa em time de engenharia requer muita dedicação e manter esse processo fluido da ainda mais trabalho (gerando o mínimo de fricção).\n\nEsse assunto é desafiador para qualquer empresa e/ou time trabalhando full time, imagina em projeto _Open Source_ que geralmente os contribuidores trabalham em seu tempo livre que ele poderia estar com sua familia ou fazendo qualquer outra coisa. Devemos deixar esse processo o mais fluido possível para que as pessoas não desanime com a complexidade para subir o ambiente e testar, até fazer sua primeira contribuição (pull request).\n\nConfigurar o ambiente de desenvolvimento\n\nCada desenvolvedor de tem uma forma diferente de configurar ambiente de desenvolvimento, mesmo que seja em uma tecnologia (linguagem de programação) popular com muita documentação, extensões do editor de texto (emacs, vim, vscode, ...), etc.\n\nNos desenvolvedores somos acostumados com “nossa forma” de trabalhar (em geral com alguns vícios), infelizmente é comum ter resistência de mudar alguma coisa quando alguém apresentar uma forma diferente.\n\nNa grande maioria das aplicações elas depende de recursos externo como banco de dados, API, tokens e etc, se forcar o desenvolvedor (usuário) ler toda a documentação do projeto antes de ter o primeiro contato com o projeto provavelmente perderemos o engajamento dele com o projeto, gerando algumas frustrações, como:\n\n- eu só queria testar\n- tenho que ler tudo isso para ver funcionando\n- que projeto complicado\n- tenho que instalar X, Y e Z serviço/software na minha maquina\n- não conheço a linguagem de programação usada no projeto, qual plugins tenho que instalar no meu editor?\n- ... e assim por diante.\n\nExistem algumas ferramentas para auxiliar nos mantenedores de projeto (open source ou privado) para gerar um processo de bordo com o mínimo de fricção possível.\n\nDeixando automatizada a configuração do editor (com todos os plugins e parâmetros necessários), todos os serviços que o projeto necessita para funcionar, variáveis de ambiente configurada, banco de dados rodando com carga inicial de dados, visualizador de dados configurados (software para gerenciar dados do banco de dados), etc.\n\nAo ponto do desenvolvedor “clicar em um botão” e _magicamente_ estar com o ambiente de desenvolvimento pronto para testar o software.\n\nNos últimos meses nos do _prestd_ trabalhamos em melhorar nossa documentação (esta longe de ser uma boa documentação) e remover o máximo de fricção no processo de subir um novo ambiente de desenvolvimento, algumas issues que implementamos até chegar no que temos hoje:\n\n- Improve local tests execution — é frustrante alguém querer contribuir e não conseguir rodar os testes locais (usamos testes e2e, fazendo requisições para a própria API do _prestd_), foi implementado uma forma onde os testes funcionam dentro do docker usando docker-compose;\n- Documentation: new content architecture — com pensamento em uma pessoa que nunca teve contato com o _prestd_ e quer testar ou usar em ambiente de produção, ambas pessoas devem entrar na documentação e conseguir fazer o que deseja (subir o ambiente);\n- Onboarding of new contributor: using devcontainer — preparar o ambiente de desenvolvimento com _“1 click”_ usando devcontainers (suporte a GitHub Codespaces).\n\nVeja a pagina de guia de desenvolvimento do _prestd_ aqui.\n\n> Não é legal ter o time de engenharia trabalhando em um ambiente “hostil”, precisamos pensar mais em nosso time e deixar a experiência do time fluida.\n> pessoas > tecnologia\n\nFoco no desenvolvedor (usuário)\n\nO _prestd_ existe open source desde 2016, particularmente gosto muito do projeto e acredito que seja uma ótima solução para acelerar o desenvolvimento de uma API RESTful para banco de dados existente e principalmente desenvolvimento de uma nova API (projeto começando do zero).\n\nPorem durante muitos anos nos voltamos para desenvolver o software e não olhava para documentação a dedicação que deveríamos, fazendo com que a base de contribuidores fosse reduzindo (existente e novos) — pessoas passaram pelo empresa/projeto (quando estamos falando de open source o turnover é ainda maior), dificilmente ficara por muito tempo, fazendo que sempre tenhamos novos colaboradores começando no projeto.\n\nDado esse problema comentada acima, comecei olhar para documentação com mais dedicação e as decisões toda no _prestd_ daqui para frente será pensando na experiência do desenvolvedor (usuário), respondendo as seguintes perguntas:\n\n- Isso melhorará a experiência do desenvolvedor usar o projeto?\n- Isso facilitará o uso do projeto?\n- Isso facilitará manter o desenvolvimento do projeto?\n\nQuando os 3 questionamentos for “sim”, seguiremos com a implementação, independente do que seja: recurso, melhorar, correção, etc.\n\n> Versão em inglês foi publica no blog da prestd aqui.",
    "type" : "blog",
    "file-path" : "content/blog/2022-01-12-constante-trabalho-para-absorver-novas-pessoas-em-time-de-engenharia.md"
  }, {
    "title" : "7 subjects (and GitHub repositories) to become a better Go Developer",
    "date" : "2021-07-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/7-subjects-and-github-repositories-to-become-a-better-go-developer",
    "content" : "With the high adoption of the Go language by developers and large companies, this has led companies to search for engineers with experience in Go.\n\nThis can create a lot of pressure of what to study to become a better engineer, this is very personal, it requires planning of what and when to study other subjects (even outside the engineering area).\n\nIn this blogpost some topics (with repositories and links) that I think are important to know in order to become an engineer person with even better Go knowledge, follow good practices for writing code, concepts of code structure (usually using design pattern), scalable code and clean code.\n\nStyle guide\n\nI can't list only one link (repository) for this topic, I would recommend you to read for these 3 links and bring to your team's day to day life what best fits their reality — remember to use as base the official language documentation and add what makes sense from the other links\n\nEffective Go\n\n{{< github uber-go/guide >}}\n\nGoogle Style Guides\n\nGo standards and style guidelines | GitLab\n\nBest Practices\n\nFrancesc Campoy gave an excellent talk at OSCON 2015 on this subject, where he covered best practices for developing software using the Go language.\n\n{{< youtube 8D3Vmm1BGoY >}}\n\nSlides\n\nTwelve Go Best Practices\n\nAlgorithms Implemented\n\n{{< github TheAlgorithms/Go >}}\n\nThis repository contains Go based examples of many popular algorithms and data structures.\n\nEach algorithm and data structure has its own separate README with related explanations and links for further reading.\n\nClean Code\n\nA reference for the Go community that covers the fundamentals of writing clean code and discusses concrete refactoring examples specific to Go.\n\n{{< github Pungyeon/clean-go-article >}}\n\nClean Architecture\n\nIn his book “Clean Architecture: A Craftsman’s Guide to Software Structure and Design” famous author Robert “Uncle Bob” Martin presents an architecture with some important points like testability and independence of frameworks, databases and interfaces.\n\n{{< github bxcodec/go-clean-arch >}}\n\nElton Minetto has written two excellent blogposts on the subject:\n\n1. Clean Architecture using Golang\n2. Clean Architecture, 2 years later\n\nAwesome Go\n\nI couldn't leave out the awesome-go project (which I started in 2014 and today many contributors help me maintain)\n\n{{< github avelino/awesome-go >}}\n\nA collection of awesome Go libraries and resources. This repository contains a list of variety of frameworks, template engines, articles and post, documentations, reactive and functional programming and much more which will increase your resourcefulness and might also help you to choose the tech stack for your next projects.\n\nProject Guideline\n\nThis is a complicated subject, there is no standard that will work perfectly for what you are developing, I recommend understanding the concept of project architecture (not only Go) and together with your team understand what works for you, even though there are thousands of books to give you knowledge about the subject I recommend putting your hands in the code and allow you to make mistakes, it is the best way to evolve.\n\nRead this content before any other\n\nHow to Write Go Code\n\nNow that you have read the previous link I will recommend a controversial repository by its name, it is not Golang standards project layout, but there is a project structure that can help in the development of a new project - understand what makes sense for you (and your team), what doesn't, just ignore it.\n\n{{< github golang-standards/project-layout >}}\n\n> Read why I said this project is controversial\n\n----\n\nVote Of Thanks\n\nThank you so much for reading this post and I hope you find these repositories as useful as I do and will help you to become better go developer. Feel Free to give any suggestions and if you like my work you can follow me on Twitter",
    "type" : "blog",
    "file-path" : "content/blog/2021-07-11-7-subjects-and-github-repositories-to-become-a-better-go-developer.md"
  }, {
    "title" : "Decisões na carreira de engenharia de software (desenvolvimento)",
    "date" : "2021-06-18T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/decisoes-na-carreira-de-engenharia-de-software-desenvolvimento",
    "content" : "> Ao decidir sobre qual passo seguirá em sua trajetória profissional, acredito que vale pena considerar os seguintes fatores (1). Dependendo do seu momento  de pessoal e/ou profissional, diferentes fatores será mais (ou menos) importantes (2).\n\nImportante:\n\n1. Assumi-se que você achou melhor se juntar, ao invés de criar (começar uma empresa). Não estou falando de fundar ou não uma empresa, e sim desmitificar auxiliar que queira entrar em uma empresa existente e é parcial com pessoas no início da carreira.\n\n2. Algumas coisas se torna mais importantes à medida que temos filhos, ajudar membros da família ou qualquer outro ponto relacionado que seja importante para seu momento pessoal. Para algumas pessoas, o trabalho ideal é aquele que lhe dê flexibilidade de tempo, proximidade da família ou outros fatores, esses fatores podem ser cruciais para a vida e felicidade pessoal, minha intenção não é subestimá-los. Por exemplo: se você quiser estar próximo de um parente doente, alguns pontos abaixo podem se tornar inviáveis.\n\n\n\nNetwork - rede de relacionamento\n\nConsidero esse item o mais importante em nosso relacionamento pessoal e profissional. Quando falamos de network estou falando das pessoas que trabalhamos e nos relacionamos em nosso dia-a-dia.\n\nDepois de um certo nível profissional é comum, pessoas trabalharem juntos em diversas empresas (entrar em uma nova empresa e com o tempo fazer proposta outros membros do ex-time). Se você tiver boas entregas e se juntar as pessoas certas, você terá mais oportunidades ao decorrer da sua vida profissional.\n\nEx: fazer parte da rede de relacionamento dos fundadores do PayPal vai expor você a empresas como LinkedIn, Yelp, Tesla, SpaceX, Facebook e muitas outras que estão por vir.\n\nDa mesma forma, ex-Googlers que se tornaram executivos ou VCs envolvidos com as principais empresas do Vale do Silício (_Facebook, Dropbox, Pinterest_, etc), elas agora conhecem pessoas em muitas grandes empresas de lá.\n\nAs pessoas que investiram, tornaram se sócias ou membro do conselho da empresa que você trabalha lhe conhecerá ao longo do tempo e impactara sua carreira. Fazer parte da rede certa no início da carreira lhe trará oportunidades interessantes. Podemos fazer que é _sorte_, acredito que podemos ter sorte, mas nem todas as pessoas estarão preparadas para abraçar a oportunidade (_sorte_) que passa em sua frente, não sabemos o momento que ela vai passar - você tem se preparado ou vai perder mais uma oportunidade?\n\nMercado e taxa de crescimento\n\nNo início de nossa carreira profissional, o mercado que escolhemos começar será um fator determinante para o seu sucesso profissional. Entrar em uma empresa com grande mercado lhe abrira diversas oportunidades de crescimento na empresa atual e outras empresas querendo lhe contratar - o que fazemos hoje colhemos no futuro.\n\nMuitos profissionais que passaram pela Netscape para o Google, do Google para o Facebook e agora do Facebook para outras empresas líderes da Internet. Traçando um paralelo: os profissionais que fizeram parte das empresas de telecomunicação nos anos 90 provavelmente ainda estão na Cisco (se não estudaram e tiveram _sorte_), tenha calma e escolha sabiamente o mercado que quer trabalhar.\n\nSei que no começo da nossa vida profissional só queremos qualquer emprego, mas tente pensar estrategicamente onde quer chegar, isso lhe ajudará dizer não para o que não faz sentido em sua vida profissional.\n\nTenha opções - seja flexível\n\nVocê tem ocupado sempre a mesma posição profissional? Ou pode estar uma posição que vai preparar você para uma nova posição?\n\nQual é a próximo cargo que você quer chegar? Você consegue trabalhar em um novo mercado (por exemplo, entrar na área farmacêutica) ou ocupar uma nova função (ocupar uma posição no time de produto ao invés de engenharia)?\n\nGeralmente nos limitamos fazendo a mesma coisa por diversas vezes, ao invés de aprender coisas novas (não é fácil sair da zona de conforto). Ser especialista é importante quando temos anos de experiência, não no começo de nossa vida profissional.\n\nMarca de peso - isso pode ser importante\n\nO nome da empresa que você trabalha é importante, principalmente se você nunca teve experiencia trabalhando em grandes times. Se você é formado em uma grande universidade (exemplo MIT) e trabalhou como engenheiro no Google, as pessoas vão assumir que você é um grande engenheiro, à reputação da instituição passará para você. Se você tiver 1 ou 2 marcas esse ponto é menos importante, eu olharia para os outros fatores listado acima.\n\n---\n\nPara o blogpost não ficar grande e com uma leitura massante quebrei ele em 2 partes (ainda não terminei de escrever a segunda, ou seja, pode ser que seja mais 😊).",
    "type" : "blog",
    "file-path" : "content/blog/2021-06-18-decisoes-na-carreira-de-engenharia-de-software-desenvolvimento.md"
  }, {
    "title" : "Reconhecimento pelo trabalho com Open Source - GitHub Star",
    "date" : "2021-06-10T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/reconhecimento-pelo-trabalho-com-open-source-github-star",
    "content" : "Tenho a felicidade de compartilhar que fui premiado com o status de GitHub Stars por GitHub e nomeação por diversas pessoas - obrigado a todos, que tornaram isso possível.\n\n[](https://stars.github.com/profiles/avelino/)\n\nEstou contribuindo e criando software Open Source desde 2008. Entrei no GitHub 31 outubro de 2008 e vê um universo de oportunidade para aprender olhando código de softwares que usava no meu dia a dia. No começo tive dificuldade de receber não em minhas contribuições (issues e pull requests), mas depois que entendi a dinâmica de um projeto open source comecei encarar o não como oportunidade de aprender.\n\nEsse pull request NÃO esta legal, você só esta pensando nesse caso de uso, precisa pensar nesse outro caso\n\nA maior parte da minha direção de carreira foi contribuindo com open source (FOSS). Open Source me trouxe muitas oportunidades e me fez conectar com o público global.\n\nEsse reconhecimento é um trabalho de longo prazo, com muita dedicação e disciplina, fazendo o que precisa ser feito e não só o que gosto (quero) fazer. Estou sempre entusiasmado em compartilhar o que construo com os outros. Obrigado por apoiar meu trabalho.\n\nMe siga no GitHub para acompanhar os projetos que estou contribuindo, se quer com contato direto o Twitter é a melhor opção.\n\n👐 Follow me on GitHub\n🌟 Stars Profile\n\n_Publlication in English_",
    "type" : "blog",
    "file-path" : "content/blog/2021-06-16-github-star-reconhecimento-opensource.md"
  }, {
    "title" : "Minha meta como gestor é: ser mandado embora no final do dia",
    "date" : "2021-05-19T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/minha-meta-como-gestor-eh-ser-mandado-embora-no-final-do-dia",
    "content" : "Compartilho com meu time que minha meta é ser mandado em bora no final do dia, o que quero dizer com isso?\n\nMeu trabalho como gestor é fazer meu time trabalhar sem minha dependência, se eles estão conseguindo andar (entregar o combinado, dar suporte a profissionais menos experientes, se comunicar com pessoas não técnicas e etc) sem minha dependência quer dizer que fiz um ótimo trabalho dando a autonomia necessária para todos tomar decisão sem pedir permissão.\n\n> A liberdade pode ser o segredo para a inovação nas empresas\n\nO estudo _Introducing the Freedom Report: How Successful 21st Century Companies Build Unique Competitive Advantage_ feito pela LRN fala mais sobre esse assunto.\n\nSó não vamos esquecer: liberdade com responsabilidade",
    "type" : "blog",
    "file-path" : "content/blog/minha-meta-como-gestor-eh-ser-mandado-embora-no-final-do-dia.md"
  }, {
    "title" : "Observar nossa vida pela janela também é importante",
    "date" : "2021-05-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/observar-nossa-vida-pela-janela-tambem-e-importante",
    "content" : "Essa semana você parou alguns minutos para analisar onde errou e como pode melhor?\n\nEm desenvolvimento de software (usando metodologias ágies) temos alguns rituais para olhar o que o time fez (tanto de erro e como acerto) para não voltar errar (sempre compartilhando o conhecimento para que todas as pessoas envolvidas possa aprender com o erro) e potencializar os acertos.\n\nVejo algumas pessoas vivendo como não houvesse o amanhã, sem planejamento, sem saber onde quer chegar e geralmente não analisando como chegou até o momento atual.\nQuando falamos em parar para olhar o que estamos fazendo (olhar nossa própria vida pela janela) soa errado, que estamos perdendo tempo de agir (executar) e mais 1001 desculpas para não sentir novamente a dor do erro - _quem nunca deixou de acessar a conta bancaria para não saber quanto negativo esta a conta?_ Em alguns casos a ignorância é uma virtude, desde que usamos ela para potencializar o aprendizado assim que ganharmos conhecimento sobre nossa ignorância, mas não ficar empurrando com a barriga.\n\nSemanalmente tenho momento para analisar meus próprios erros e corrigi-los na próxima semana - ser duro no nosso auto feedback é extremamente importante para nos tornar uma pessoa melhor, sempre ao rumo de ser 1% melhor.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/observar-nossa-vida-pela-janela-tambem-e-importante.md"
  }, {
    "title" : "O combinado não sai caro: 'Mentir pra si mesmo é sempre a pior mentira'",
    "date" : "2021-05-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/o-combinado-nao-sai-caro-mentir-pra-si-mesmo-e-sempre-a-pior-mentira",
    "content" : "Constantemente recebo msg dando parabéns pelo meu foco, disciplina, motivação e/ou alguma coisa na linha de me manter treinando todos os dias. Lógico que fico super feliz ao receber esse tipo de mensagem, mostra que estou gerando algum impacto (espero que positivo) na forma que encaro os meus desafios.\n\nMas algumas vezes essa msg de __parabéns__ vem seguida de __eu gostaria de ter esse foco__.\n\nComo faço para manter esse bendito foco?\nBusco entender porque eu quero e porque estou fazendo as coisas (tanto treino como qualquer coisa que faço), quando entendemos o real objetivo/propósito fica mais fácil de levar a sério o que tem que ser feito, caso contrário vamos priorizar outras coisas mais importantes.\nIsso se torna mais latente quando você está liderando algum time. Eu não culpo ninguém que não está fazendo o que eu acho que deveria fazer primeiro (de maior prioridade), assumo a responsabilidade que não fui capaz de compartilhar os motivos que deveríamos começar pela outra tarefa e não essa.\n\nPor que você acorda todos os dias para ir trabalhar?\nVocê comprou alguma coisa (que esta muito afim) e no final do mês chegará a fatura do cartão (o bendito boleto), sabendo disso você acorda todos os dias para ir trabalhar (querendo ou não) - as contas não é paga automagicamente.\n\nEu encaro os treinos exatamente dessa forma:\nassumi compromisso comigo mesmo e não posso falhar porque no final do mês chega a conta para pagar 🤷‍♂️\n\nLevo tudo com o seguinte dilema:\n> O combinado não sai caro",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/o-combinado-nao-sai-caro-mentir-pra-si-mesmo-e-sempre-a-pior-mentira.md"
  }, {
    "title" : "Configurando limite de recursos em aplicações Java (JVM) no Kubernetes",
    "date" : "2021-05-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/configurando-limite-de-recursos-em-aplicacoes-java-jvm-no-kubernetes",
    "content" : "Fazer deploy de software desenvolvido usando tecnologias que foram criadas para ter escalabilidade vertical para escalar horizontalmente (_micro serviço, nano serviço_ e etc) em produção pode gerar alguns desafios que não estamos preparados. Principalmente quando o software esta rodando em JVM e não foi declarado limites de recursos.\n\n-Xms, -Xmx e seus problemas\n\nAo estudar sobre a JVM você provavelmente passara pelos parâmetros de alocação inicial (Xms) e alocação máxima (Xmx) de memória, os parâmetros funcionam rigorosamente bem. Trazendo um exemplo, ao definir -Xms128M e Xmx256M, e começar monitorar a aplicação com VisualVM, você alguma como essa:\n\n\n\n``shell\njava -Xms128m -Xmx256m hello.java\n`\n\nAo ler a documentação da JVM (a parte de Sizing the Generations) parece que funcionara como magica, no exemplo acima a aplicação querer mínimo de 128Mb de memória (JVM alocará assim que a aplicação iniciar), mas não deixando passar do limite de 256Mb. Vamos dar uma olhada como ficou na prática:\n\n\n\n`java\npublic class Hello {\n    public static void main(String[] args) throws Exception {\n        while (true) {\n            new Hello().hello();\n            Thread.sleep(1000);\n        }\n    }\n\n    public void hello() {\n        System.out.println(Hello, World);\n    }\n}\n`\n\n😱 não saiu como eu imaginava, parece que usou um pouco mais que 256Mb... O motivo desse comportamento é que a JVM usa memória para outros processos como metaspace, cache de código e etc, o Xmx limita só sua aplicação não a JVM como todo.\n\nAlguns cuidados que precisamos ter ao limitar recursos\n\nAo rodar software dentro do Kubernetes, temos que ter atenção no limite físico das máquinas que fazem parte do Cluster Kubernetes, para um pod não consumir todo recurso e outros pods acabar _morrendo_.\n\nVou testar exemplificar...\n\nConfigurando Xms e Xmx na imagem Docker\n\nVocê pode passar estas flags (parâmetros) para JVM subir seu JAR na imagem Docker:\n\n`dockerfile\nDockerfile\n...\nENTRYPOINT [java, -Xms128M , -Xmx256m, -jar, hello-service-1.0.0.jar]\n`\n\nCaso esteja usando Jib, pode declarar dentro do build.gradle:\n\n`gradle\n// build.gradle\njib {\n    to {\n        image = hello-service:tag\n    }\n    container {\n        environment = [JAVA_TOOL_OPTIONS: -Xms128M -Xmx256M]\n    }\n}\n`\n\nLimitando memória dos pods no Kubernetes\n\nAo usar Xmx no pods você pode facilmente chegar em uma configuração que causará restart contante, por motivos de _Exceed a Container's memory limit (OOM)_\n, por motivos a limite de memória, lembre do printscreen acima que mesmo limitando a aplicação a 256Mb a JVM usou mais de 700Mb. Dependendo do seu software deve ser definido o limite de recurso no próprio Kubernetes no YAML do seu deployment:\n\n`yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n...\nspec:\n  ...\n  template:\n    ...\n    spec:\n      containers:\n        - image: hello-service:tag\n          name: hello-service\n          livenessProbe:\n            initialDelaySeconds: 300\n          resources:\n            requests:\n              memory: 128Mi\n            limits:\n              memory: 256Mi\n`\n\nVou assumir que você declarou os limites acima para seus pods, já que você também declarou os mesmos limites na sua imagem Docker via flags -Xms e  -Xmx. Você faz deploy do seu software, ele funciona _perfeitamente_, como não teve problema vai para cama descansar (geralmente colocar software em produção é cansativo). No dia seguinte você da roda kubectl get pods para ter orgulho de ter colocado seu software no ~~Kubernetes~~ e se depara com isso:\n\n`shell\n❯ ~ kubectl get pods\nNAME                              READY   STATUS    RESTARTS   AGE\nhello-service-3x85997760-qapo7     1/1     Running   156        9h\n`\n\n💣 você não esperava ver isso né? Agora que conhece como funciona a JVM (com printscren do htop) você já sabe o que esta acontecendo: o uso de memória da JVM não é só do seu software, então ele é morto diversas vezes (campo RESTARTS do get pods) porquê o pod passou do limite de memória declarado e entra em um fluxo sem fim de _restart_.\n\nAbordagem correta\n\nPrimeiro de tudo: assumiremos que os limites dentro da sua imagem Docker estejam bem definidos - com o que o software realmente precisa. Caso você queira reservar um valor fixo de memória para seu software e não ter concorrência com outro, você deve declarar Xms = Xmx, mas _use com moderação_.\n\nPara evitar _Exceed a Container's memory limit_ no pods do Kubernetes, você deve considerar os seguintes itens:\n\n1. requests (parâmetro do resources) != Xms - o valor do requests deve ser maior que Xms, essa diferença depende do que seu software fará. Caso seja um _micro serviço_ simples, ~30% de acréscimo é o suficiente, mas se seu software tem muitas conexões externas ou qualquer operação que consome memória recomendo estudar a particularidade do seu software;\n2. limits (parâmetro do resources) != Xmx - O limite de memória sugerido para seu pod depende de muitas coisas e a imagem base do Java usada é um fator extremamente importante. Não vou passar um valor nem fórmula ~~magica~~, recomendo fazer diversos benchmarks para conhecer melhor o software que esta desenvolvendo;\n3. Declarar limits com valores mais alto no começo é sempre uma boa prática, mas ir otimizando (diminuindo ou aumentando) conforme for conhecendo o comportamento do seu software em produção, sempre monitorando se o pod não entra em OOM;\n4. livenessProbe.initialDelaySeconds - Tempo que o Kubernetes deve esperar seu software subir (JVM) antes de dar que não funcionou. Esse parâmetro é complicado, JVM tem fama de ser lenta para fazer boot, se seu software tem muitas conexões externas ela levará mais tempo.\n\nOlhando para o caso que foi descrito acima: declarar requests como ~320Mb e limits como ~512Mb seria um ótimo começo dado os valores do Xms e Xmx.\n\n> Não existe bala de prata, a melhor forma de chegar em valores reais para limites de recursos no Kubernetes é conhecer seu software e fazer benchmarks para entender o comportamento dele, acada software é único e se comporta de uma forma diferente.\n\n> Recentemente coloquei um micro serviço usando Spring Boot para rodar e o serviço não subia, depois de horas e horas debugando e brigando com limite recurso do software e Kubernetes percebi que o problema era o initialDelaySeconds`. _#ficaadica_",
    "type" : "blog",
    "file-path" : "content/blog/configurando-limite-de-recursos-em-aplicacoes-java-jvm-no-kubernetes.md"
  }, {
    "title" : "Falar sobre 'Assuntos Difíceis'",
    "date" : "2021-04-29T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Em nossa vida é necessário encarar de frente assuntos considerados difíceis ou tabu com qualquer pessoa, para isso precisamos ter coragem e maturidade para lidar com naturalidade com qualquer tema - mesmo se ele nos tire da zona de conforto.\n\nPara falar sobre esse assunto, vamos começar pelo porquê.\n\nPor que é comum procrastinar uma conversa quando envolve assunto difícil?\n\nQuando não falamos constantemente sobre um tipo de assunto ele se torna difícil por falta de familiaridade e sensação de desconforto. Por exemplo, é comum as pessoas terem dificuldade para falar sobre sexo, dinheiro, relacionamento, homossexualidade, etc.\n\n- Sexo: geralmente é um tabu e tratado com sigilo;\n- Dinheiro: o brasileiro tem um problema estrutural na educação financeira e falar de dinheiro com nossa família geralmente soa errado, principalmente quando estamos em uma mesa de jantar;\n- Relacionamento: quando está tudo bem é fácil, mas quando tem algo nos incomodando entendemos que não é tão fácil assim;\n- Homossexualidade: nossa, falar disso é desnecessário, mas não é;\n- ... posso passar horas e horas listando assuntos que a grande maioria das pessoas fogem\n\n> Conversas difíceis são… difíceis!\nMas podemos deixar elas mais confortáveis\n\nAgora que estamos alinhados sobre o que é um assunto difícil: vamos trazer para nossa vida profissional.\n\n\n\nFalar o que as pessoas não estão preparados para escutar\n\nDepois de anos trabalhando em ambientes de startups, percebo que muitos gestores não querem escutar assuntos que gerem desconforto e sim assuntos que massageiem os seus egos.\n\nMinha realidade é diferente da sua e isso esta diretamente relacionado a como chegamos até aqui, dado as experiências que vivi, amizades, ambientes que frequentei etc. O que é obvio para mim, pode não ser para você.\n\nAo chegar para um amigo (a) de trabalho e falar de um assunto complicado que a pessoa ainda não tem consciência, é gerado um nível alto de estresse e cada pessoa tem uma forma de lidar com informações que os gera desconforto, medo, angústia e ansiedade.\n\nQuando temos a consciência de que cada pessoa vai reagir de uma forma diferente, precisamos ter empatia e estruturar a conversa de uma forma que ela fique menos desconfortável, deixando extremamente claro a mensagem final que queremos passar. E de uma forma compreensível pela outra parte, ou seja, não levar no freestyle (sair falando sem antes ter estruturado a conversa) quando estamos falando de assuntos difíceis.\n\nTenho o habito de escrever tudo o que fiz e que irei fazer, invisto mais tempo em planejamento e estruturando uma conversa do que de fato tendo a conversa difícil. Não estou falando que é rápida a reunião com assunto desconfortável e sim que o planejamento (estruturação) da reunião leva mais tempo que a própria reunião — sei que isso pode soar estranho para as pessoas que entram em reunião sem se prepararem.\n\nSabe quando você olha seu calendário de trabalho e tem uma reunião atrás da outra sem ter pelo menos 15 minutos para respirar? Pode ser que você não esteja preparado para essa reunião e seria melhor não participar da reunião.\n\nAlguns assuntos se tornam difíceis por não sabermos dizer não, mas isso é assunto para um próximo texto, quem sabe em breve escrevo sobre isso.\n\nExpor o problema e propor a solução\n\nQuantas vezes você expôs um problema da empresa e não propôs uma possível solução? Não precisa ser a solução final e sim uma solução que você acredite que dará certo. Se está inseguro da proposta, pode expor isso para todos e envolver as pessoas para contribuírem na construção da solução — um time vai muito mais longe quando joga junto.\n\n~~Infelizmente eu já fiz isso, apontei o dedo para o problema sem se quer pensar em como resolver.~~\n\nTodas as empresas têm diversos problemas a serem solucionados ou pontos que precisam de melhorias, se você acha que existe a empresa perfeita esta enganado (a).\n\nSei que muitas empresas têm a cultura de fazerem as tomadas de decisões topdown (dos diretores para o time), não dando espaço para o time (você faz parte dele) proporem melhorias.\n\n> Será que a empresa que você está é a empresa que você gostaria de estar? Se a resposta for não, você está planejando sua saída dela? Olha aí nós falando sobre um assunto difícil.\n\nEstruturando conversas difíceis com padrão A, B e C\n\n- A: Fale de casos concretos, dando exemplos do que aconteceu: Eu vi que você fez isso, Eu ouvi aquilo, ~~Alguém me disse~~ que tal coisa aconteceu (cuidado com esse, telefone sem fio existe) e ...\n- B: Descreva o impacto que esse fato gerou em você: Você fez A e eu me senti desrespeitado ou Você não entregou o que combinamos e fiquei com a impressão de que você não entendeu a importância do que está fazendo.\nÉ possível mencionar como você se sentiu, mas sem a carga emocional.\n- C: Busque a posição da outra pessoa de forma interrogativa: Podemos conversar sobre esse assunto?, Você pode me explicar o que aconteceu?, Você tem algo a dizer a esse respeito? ou ainda Escutei isso e gostaria de compartilhar minhas impressões com você, ok?.\n\nDessa forma você não mantém o ambiente psicologicamente seguro com espaço aberto para diálogo, não queremos culpar e sim dialogar. Ninguém quer participar de uma conversa quando começa com conclusões.\n\nComo queremos um dialogo, nada mais justo que pedir licença antes de entrar no espaço do outro, é muito mais que sinal de respeito e educação, abrindo espaço para a pessoa expor seu ponto de vista.\n\n> Por último aprenda escutar e só depois que a pessoa terminar você fala.\n\nConseguiu entender meu ponto de vista? Não é fácil e exige muita consciência e pensar antes, durante e depois destas conversas. Mas é questão de prática e ação. Deixe seu comentário sobre o que você pensa sobre esse assunto.",
    "type" : "blog",
    "file-path" : "content/blog/falar-sobre-assuntos-dificeis.md"
  }, {
    "title" : "DevHealthy - Episódio 22: 110kg a menos, rotina de treino, triathlon e pôs COVID19",
    "date" : "2021-04-26T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Uma conversa super maneira com a Keit Oliveira e Raphael Fabeni no DevHealthy, sobre meu processo de perda de peso (-110kg 😲), rotina de treino no triathlon 🏊🏃🚴 e treinos pôs COVID19 🦠.\n\n{{< podcast https://anchor.fm/devhealthy/embed/episodes/DevHealthy-22---Bate-papo-Thiago-Avelino---110kg-a-menos--Triathlon-e-COVID-evn5fv/a-a5cea1p >}}\n\n\n\n> O DevHealthy é um podcast que busca compartilhar experiências e opiniões sobre assuntos que envolvam um estilo de vida saudável e a área de tecnologia, podendo assim quebrar a idéia de que ambos tópicos não podem caminhar juntos.\n\nO convidado da vez foi o Thiago Avelino, engenheiro open-source e triatleta. Com uma incrível transformação de 110kg a menos, falamos sobre o mundo do triathlon e como ele planeja sua rotina entre treinos e trabalho, além de relatar como foi ficar internado por conta do COVID.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/devhealthy-22-podcast-110kg-a-menos-triathlon-pos-covid.md"
  }, {
    "title" : "Living our dream should be our priority",
    "date" : "2021-04-25T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "What is your dream? What is your priority for the day?\n\nGetting out of the rat race is not an easy task, but how do we connect our busy daily lives with our dreams?\n\nResignify our way of living (why we do what we do) and put our dream at the center of our life - as a commitment and not: do it if we have time. But doing what must be done, not only what you like to do.\n\nA good dream is a dream that is lived!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/living-our-dream-should-be-our-priority.md"
  }, {
    "title" : "Caminhada - que fase pós covid",
    "date" : "2021-04-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Que fase é essa meus amigo(a)s! 🤷‍♂️\n\nDepois de me recuperar da fase mais crítica do COVID 🦠 o médico 🥼 pediu para ficar sem praticar atividade física por 2 semanas e voltar com ritmo leve.\n\nAté aí OK 👌, mentalmente imaginei uma corridinha leve e um pedal sem colocar muita intensidade. Bah, sabe de nada inocente 🤦‍♂️\n\nQualquer esforço que faço meus BPMs vão lá em cima, para ter uma referência: em treino de pedal indoor sempre tive dificuldade de chegar na casa de 160bpm mesmo no meu limiar de 250w, no meu primeiro treino estava entre 180 - 200w e minha frequência cardíaca entre 160 - 170bpm 💔\n\nPois é, minha fase atual de treino é treinar a paciência e curtir minhas micros evoluções, com o propósito de melhorar meu limiar 1 (z1 e z2) usando gordura como fonte de energia e glicogênio muscular (z4), minha meta é conquistar meu aeróbio novamente para aí sim voltar colocar intensidade nos treinos.\n\nMeu sistema cardio pulmonar está muito debilitado, em paralelo aos treinos estou fazendo fisioterapia pulmonar para recuperar 100% a capacidade pulmonar 🫁\n\nAntes de pegar essa doença invisível me sentia o a atleta super herói 🦸‍♂️, hoje sou o cagão com receio de pegar novamente.\n\nSe cuida, não queira pegar a tal gripezinha que tem deixado diversas vítimas, graças a Deus fui apenas uma vítima e não uma estatística no relatório de óbito 🙏",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/caminhada-que-fase-pos-covid.md"
  }, {
    "title" : "Kubicast - Episódio 45: Arquitetura de Software, existe algo além dos microsserviços?",
    "date" : "2020-08-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Escute minha participação no Kubicast junto com Felipe Oliveira falando sobre Arquitetura de Micros Serviços em comparação com Monolito:\n\n{{< podcast https://www.buzzsprout.com/184652/5171518-45-batalha-de-microsservicos?iframe=true >}}",
    "type" : "blog",
    "file-path" : "content/blog/2020-08-27-getup-podcast-45-batalha-de-microsservicos.md"
  }, {
    "title" : "3 passos importantes para cumprir nosso objetivo e metas",
    "date" : "2020-07-31T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CDUfuJGh--j/)\n\nDurante essa semana falamos muito sobre objetivo, metas e planejamento, mas como faço para cumprir meus objetivos e metas?\n\n1. Planejamento: Após estabelecer objetivo e metas, é organizá-los. Crie planilhas e documentos com o que precisa ser concluído, quais os prazos e as prioridades. Assim tenho ciência do que é necessário ser desenvolvido e quais pessoas preciso envolver (no meu caso profissionais do esporte) para a concretização do que foi planejado inicialmente;\n1. Disciplina (dedicação): Motivação nos faz começar, disciplina é o que nos levará  para próxima meta. Tenha em mente o que é necessário para alcançar seu objetivo e motive-se para cumprir cada meta. Sem dedicação, persistência e resiliência (ser antifrágil, aprender com os erros e acertos), podemos nos perder no meio do caminho, mas busque não desistir no meio do caminho. O planejamento pode (e irá) falar, mas com disciplina chegamos lá;\n1. Objeto claro (e metas): Quando temos claro o que estamos fazendo e porque estamos fazendo, alcançar a próxima meta rumo ao objetivo fica muito mais fácil por conseguir contar com nossa motivação, mas tenha certeza que não é todos os dias que irá acordar motivado.\n\nO mais importante é ter compromisso connosco, se disse para mim que iria fazer, por que não vou fazer? Principalmente em objetivo pessoal esqueça as pessoas e olhe para você.\n\nComo você faz para se manter focado até alcançar seu objeto e metas?\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/3-passos-importantes-para-cumprir-nosso-objetivo-e-metas.md"
  }, {
    "title" : "Usando 5W2H para planejar objetivo (e metas)",
    "date" : "2020-07-29T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CDOvqNZhBru/)\n\n5W2H? sigla que diz respeito a um apanhado de diretrizes, que vão auxiliar e deixar claro tudo o que precisa ser desenvolvido para que uma meta seja atingida passo a passo.\n\n5W:\n- What (o que será feito?) - definir o que será realizado ao longo do processo para que a meta seja devidamente concluída;\n- Why (por que será feito?) - as razões porque as metas devem ser cumpridas uma a uma;\n- Where (onde será feito?) - empregar ações imediatas para o objetivo (e metas) seja alcançado;\n- When (quando?) - estabelecer um cronograma, com os prazos para a entrega de cada uma das demandas e atividades;\n- Who (por quem será feito?) - nomear as pessoas, ou seja, quem ira colocar a mão na massa e fazer o passo a passo para que tudo saia do papel e tome forma.\n\n2H:\n- How (como será feito?) - determinar como cada passo do processo será colocado em prática por seus responsáveis;\n- How much (quanto vai custar?) - quais serão os custos de cada ação que envolve o objetivo (e as metas).\n\nAssim consigo ter objetivo e metas claras e não irei me perder ao longo do caminho⁉️\n\n> Como você planejar seu objetivo e metas❓\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/usando-5w2h-para-planejar-objetivo-e-metas.md"
  }, {
    "title" : "Você tem consciência alimentar?",
    "date" : "2020-07-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CDMPNvxByWZ/)\n\nComer bem é algo mais simples do que pensamos e não tem relacionamento com custo, frutas e verduras são caras ou o que colocamos ao redor dela é caro? O ato de cozinhar e comer algo feito em casa tem um impacto positivo considerável na sua alimentação, principalmente porque é mais fácil evitar produtos industrializados e que fazem muito mal.\n\nTudo o que você come influência diretamente o funcionamento do seu organismo, estude qual o comportamento do alimento dentro do seu organismo, isso lhe trará consciência alimentar.\nPortanto, inclua bastante (alinhe com sua nutricionista a quantidade) frutas e vegetais em seu cardápio e dê preferência a pratos nutritivos e coloridos.\n\nMas caso queira comer alguma coisa _não saudável_ tudo bem, desde que você esteja consciente na sua escolha e entendendo o que esta ingerindo!\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/voce-tem-consciencia-alimentar.md"
  }, {
    "title" : "Por que devemos ter objetivo e metas?",
    "date" : "2020-07-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CDJlxo9hmPY/)\n\n🎯 Objetivo e metas nos ajuda a sair da cama para alcança-los (realizar os feitos necessários para vê-lo concretizado), motivação nos ajuda começar e compromisso conosco mesmo (disciplina) nos faz continuar.\n\nObjetivo sem metas e ação é apenas sonho, quando temos metas claras (entendemos de fato porque estamos fazendo) encaramos com responsabilidade nosso objetivo (tendo compromisso connosco mesmo), se falei para mim que iria fazer por que não iriei fazer?\n\nAo colocarmos como meta não beber refrigerante e bebermos, quer dizer que fomos fracos, se não somos capazes de ganhar de um simples refrigerante, você acha que irá ganhar de quem?\n\nBusco ter consciência em tudo que faço, por exemplo: quando vou comer alguma coisa busco entender o que aquele alimento irá me trazer de nutrientes e, porque preciso dele.\nQuando a resposta é eu mereço porque fiz tal coisa, porque estou triste ou qualquer coisa nessa direção, minha resposta para mim mesmo é eu não mereço nada, ainda não cheguei no meu objetivo, quando chegar lá penso se realmente mereço, até chegar lá pode ter certeza que já esqueci, esse é um hack mental que uso constantemente.\n\nÉ por meio da concretização de metas e objetivo que conseguimos experimentar, verdadeiramente, o gosto e a sensação da felicidade em nossa jornada evolutiva.\nÉ fundamental que tenhamos clareza do que queremos alcançar ao longo da vida e de que maneira vamos fazer para atingir as metas e objetivo que traçarmos rumo ao nosso próprio sonho, uma vez que esta missão cabe somente a nós mesmos e a mais ninguém.\n\nVocê tem clareza do seu objetivo ou esta seguindo no deixa a vida me levar❓Não faça isso com você mesmo, dite as regras de sua vida ⁉️\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/por-que-devemos-ter-objetivo-e-metas.md"
  }, {
    "title" : "Diferença entre metas e objetivo?",
    "date" : "2020-07-24T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CDB8mwGhzsp/)\n\nPara mim um objetivo é composto por diversas metas\n\nAcredito que todos tem anseios, vontades e propósitos, por isso, cria objetivo e metas  (ou pelo menos tentamos). Porém, algumas pessoas acabam confundindo esses dois termos e, com isso, podem ter problemas em defini-los, principalmente na hora de criar um planejamento para alcançar as metas e objetivos pessoal/profissional.\n\nObjetivo? Dar descrição concreta de onde queremos chegar, ou o que estamos tentando alcançar (direção), ou seja, o propósito. O objetivo é estratégico e abrangente.\n\nMetas? Andando em direção ao objetivo, as metas são tarefas específicas para alcançá-lo, sendo que elas são temporais, ou seja, têm prazo específico para acontecer. Por exemplo, se o seu objetivo é fazer IRONMAN 70.3 de São Paulo em 2021, suas metas serão traçar caminhos que te levarão ao objetivo, ou seja, você deve quebrar o objetivo em diversas metas:\n- Treinar X horas por dia/semana;\n- Dar feedback diariamente sobre percepção do treino para o coach;\n- Seguir a dieta diariamente com um total X calorias por semana;\n- Participar dos treinos presenciais aos sábados junto com a assessoria esportiva;\n- Fazer prova X, Y e Z;\n- e assim sucessivamente...\n\nObjetivo deve ser único e as metas é o que nos levará até o objetivo.\nObjetivo sem meta é sonho 🧠\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/diferenca-entre-metas-e-objetivo.md"
  }, {
    "title" : "Comunicação é a base dos projetos Open Source",
    "date" : "2020-07-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Sou criador e mantenedor (junto com uma incrivel comunidade, composta por pessoas ao redor do mundo) de um projeto chamado awesome-go _Lista curada pela comunidade de frameworks, bibliotecas e software escritos em Go_.\n\nQuando comecei contribuir e criar projeto Open Source achava que o foco principal era código, com o passar dos anos comecei perceber que o projeto era um meio para chegar em algum lugar, ou seja, código tem sua importância, mas não basta tem um projeto com código impecável vendo que ninguém ou poucas pessoas conseguem usar.\nPor isso nós mantenedores devemos criar comunidade ao redor de projeto open source e sempre estimular outras pessoas a contribuir.\n\n> Outro blogpost relacionado com esse assunto: Atrás de projetos Open Source existe pessoas\n\nProposta para mesclar projetos\n\n\n\nOntem (_2020-07-22_) olhando a timeline do Github (pessoas e projetos que companho) e me deparei com a criação de um repositório chamado awesome-go-style feito pelo Damian Gryski (de Vancouver/Canada e uma grande referência na comunidade Golang).\n\nOlhando o conteúdo do repositório fazia total sentido ele ser um tópico do awesome-go e não um repositório isolado como estava nascendo. Tinha duas de lidar falar ou não falar com Damian em trazer o projeto dele para awesome-go.\nParto do princípio que já tenho o não (não quero, não faz sentido, não ...), tomei a iniciativa de escrever um e-mail para Damian explicando meu ponto de vista referente ao repositório awesome-go-style e por que achava que deveria fazer merge dos projetos - sei que muitos engenheiro(a)s não gostam do assunto venda, mas propor uma mudança em um software é um processo de venda porque temos que expor e defender nosso ponto de vista.\n\nVeja a thread de e-mail criada:\n\n\nEle concordou que fazia sentido, simplesmente tinha esquecido da existência do projeto awesome-go (mesmo sendo um grande projeto é comum não lembrarmos de alguns projetos quando não usamos no dia a dia) e aceitou fazer esse merge, permitindo eu fazer o merge.\nLogico que poderia fazer o merge (era pegar o conteúdo e trazer para o awesome-go), mas meu papel como mantenedor de projeto (aka líder) é criar comunidade e incentivar as pessoas contribuírem. Propus dele abrir PR (pull request) e contribuir.\n\n\n\n> Evolua seus skills de comunicação, escrever código é importante, mas comunicação vem antes de código - antes de escrever qualquer código você deve entender o que ser implementado.\n\n---\n\nVeja os projetos que mantenho e já contribuir, precisa de ajuda para contribuir e/ou manter projeto Open Source sinta-se livre em entrar em contato comigo avelinorun AT gmail DOT com. Fique por dentro das novidades do mundo Open Source se inscrevendo nessa newsletter.",
    "type" : "blog",
    "file-path" : "content/blog/2020-07-23-comunicacao-base-de-projeto-opensource.md"
  }, {
    "title" : "Tenha Objetivo Inteligente",
    "date" : "2020-07-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CC_U92XBeMD/)\n\nTenho falado constantemente em ter objetivo claro, mas por minha ignorância nunca perguntei se você tem objetivo❓\n\nTudo bem caso você não tenha objetivo⁉️ Tente extrair conhecimento dessa postagem para organizar suas ideias de onde quer chegar e busque ter um objetivo SMART.\nCada letra da expressão SMART, cuja tradução significa inteligente, corresponde a uma palavra. São elas: specific, measurable, achievable, relevant, and time-bound. O nosso objetivo deve ser específico, mensurável, atingível, relevante e com limite de tempo definido.\n\nQuanto mais inteligente for o seu objetivo maiores são as chances de alcançar o resultado esperado. Entenda mais sobre cada uma dessas características:\n- S: Specific (Específico): Quero fazer meu primeiro IRONMAN 70.3 para vou fazer meu primeiro IRONMAN 70.3 São Paulo em 2021 (2020 já era meu amigo(a)).\n- M: Measurable (Mensurável): Valores e porcentagens são essenciais para saber se você está perto ou longe de atingir um objetivo. Ex: estou com XXX de FITNESS, FORM e FATIGUE. Tenha profissionais para auxiliar você entender e propor métricas.\n- A: Attainable (Atingível): Lembre-se que não temos super poderes, estabeleça um objetivo real, que esteja dentro da sua realidade. Se IRONMAN 70.3 é muito, comece com SPRINT.\n- R: Relevant/Realistic (Relevante/Realista): Você deve se perguntar qual é o benefício desse objetivo para você, se vai lhe ajudar no seu crescimento pessoal. Seja critico com você - jogue duro.\n- T: Time-bound (Tempo limite): Seu objetivo precisa ter um prazo para ser alcançado. Sem prazo, tudo que temos é um sonho.\n\nNão existe nada mais frustrante para alguém do que gastar muito tempo, dedicação, dinheiro e etc para alcançar um objetivo e depois de muito esforço não chegar nem perto do resultado proposto, isso irá gerar frustração.\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/tenha-objetivo-inteligente.md"
  }, {
    "title" : "É mais difícil se manter no topo do que chegar no topo",
    "date" : "2020-07-22T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CC8xurcBh28/)\n\nNão é fácil chegar ao topo (indiferente do que seja o topo), mas ficar nele é ainda mais difícil⁉️\n\nPara mim, chegar no topo é se tornar referência em um assunto.\nQuando nos tornamos referência em um determinado assunto, começamos chamar a atenção em tudo que falamos e existe um misticismo que temos que saber tudo sobre aquilo, mas saber tudo é muita coisa.\nSou convidado para palestrar em diversas conferências de desenvolvimento de software, ao terminar de palestrar gosto de abrir espaço para perguntas e não sei o que as pessoas iram perguntar - eita frio na barriga - tem algumas perguntas que é perceptível que são feitas para nos deixar desconfortável (de saia justa).\nQuando chega a pergunta que não sei responder simplesmente respondo que não sei, mas podemos aprender juntos.\n\nNão pense em estar no topo e sim aprender chegar lá, em nossa vida iremos alcançar diversos topos 🤯\nSe manter no topo requer disciplina, foco e constância 🎯\n\nComo você faz para se manter foco em seu objetivo?\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/e-mais-dificil-se-manter-no-topo-do-que-chegar-no-topo.md"
  }, {
    "title" : "Tem momento que é necessário desacelerar para continuar",
    "date" : "2020-07-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CC6Lh86BNee/)\n\nApós alguns meses seguindo a planilha do novo treinador senti que conseguiria dedicar mais tempo por semana para treino, terminava os treinos bem e com energia para mais, olhando para o volume e carga da semana sentia que conseguiria mais. Não sei dizer o quanto mais, mas tinha energia acumulada.\n\nSentei com o treinador e pedi mais volume de treino, deixando claro o porquê. Ele foi meio relutante a colocar mais volume, mas chegamos no meio termo (nem para mim, nem para ele KKKKKKKK).\n\nFoi um pouco mais de um mês nessa nova vida com quase 20 horas de treino por semana ,  até que comecei sentir o nervo ciático 💥, começou doendo a lombar e em alguns dias os glúteos 🍑 também estava doendo para andar (imagina para treinar).\nAlguns dias antes de sentir essas dores, estava trocando áudio com o treinador e comentei com ele que não sabia onde era meu limite, a resposta dele foi seu limite é a lesão, precisamos identificar se esta chegando no limite antes de chegar nele.\n\nPensei em parar de treinar para me recuperar, mas tinha alguma coisa falando para mim não parar e sim tirar o pé do acelerador 🏎️, fazer o que estava planejado sem me cobrar tanto e junto com fisioterapeuta arrumar o que estava quebrado.\n\nMas qual lição tiro dessa brincadeira❓\nTem momento que é necessário desacelerar, para voltar ainda mais forte 💪⁉️\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/tem-momento-que-e-necessario-desacelerar-para-continuar.md"
  }, {
    "title" : "Shu-Ha-Ri: conceito aprendizagem para atingir a maestria",
    "date" : "2020-07-20T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CC3lAo_BsEK/)\n\nNão sou muito fã de prática de artes marciais 🥋, mas por trás da grande maioria das artes marciais tem muita filosofia e princípios de aprendizado, disciplina e etc, em Aikido, Judo ou Kendo está o Shu-ha-ri, conceito que descreve os três princípios do aprendizado:\n\n- Shu: aprender, seguir ⏭️ - Quando quero aprender alguma coisa e não tenho conhecimento para criar e/ou inovar, então sigo o que o especialista no assunto pede para fazer, mesmo que eu não entenda muito bem porque fazer, ainda não é momento de questionar - ainda não sei fazer as perguntas certa;\n- Ha: refletir, colecionar 🧘‍♂️ - Após aprender o básico, aqui começo ser capaz de questionar (fazer as perguntas certas ou +- certas);\n- Ri: ser, definir 📈 - Agora é momento de criar/inovar, já sei porque estou fazendo aquilo e consigo juntar o meu conhecimento de outra área com o que estou aprendendo.\n\nConceito que levo para tudo que quero aprender, como faço na pratica?\n1. Busco alguém referência no assunto que consiga acelerar meu processo de aprendizado, mudo meu ambiente para viver o que quero aprender - Shu\n1. Questiono tudo que tenho duvida, esse é o momento de validar o que aprendi pensando na próxima fase - Ha\n1. Momento de evoluir sozinho e criar novas experiencias - Ri\n\nSobre buscar alguém referencia no assunto, escrevi uma postagem sobre terceirizando responsabilidade da uma olhadinha no feed \\o/\n\nDeixa no comentário a técnica que usa para aprender ou evoluir em alguma área.\nAgora é com você, bom estudo e/ou treino!\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/shuhari-conceito-aprendizagem-para-atingir-a-maestria.md"
  }, {
    "title" : "Por trás de projetos Open Source existe pessoas",
    "date" : "2020-07-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Muitos engenheiro(a)s esquecem ao contribuir com _projetos Open Source_ que por trás de todos _projetos_ temos pessoas.\n\nNão conhecemos as pessoas que estão do outro lado (mantenedores do projeto) e como eles receberá nossa contribuição, isso nos gera a necessidade da comunicação ser extremamente clara e não assumirmos que os mantenedores (contribuidores) tenha o mesmo conhecimento que nós (não temos como saber o que as outras pessoas tem de conhecimento), mesmo conceitos que achamos óbvios é importante deixar claro na comunicação (issue, pull request e etc).\nNão tenha apego ao código - código é um meio para chegarmos na solução de um problema. Pode ser que sua implementação de código ou comunicação não esteja clara, não leve feedback negativo para o lado pessoal, em geral os contribuidores olha a implementação que esta chegando não quem esta mandando - mas lembre que isso não é uma regra, não posso falar por todos os projetos e/ou pessoas.\n\nQuando estamos do lado de mantenedor do projeto: encare toda e qualquer contribuição como a melhor contribuição possível da pessoa, ela (pessoa que contrinuiu) deixou seus afazeres para contribuir com um projeto que não é dele, busque entender porque ela teve afinidade com projeto - isso lhe ajudará criar uma comunidade (terá ajuda para manter o projeto). Uma das coisas que julgo o sucesso é quando temos uma comunidade envolta do projeto com pessoas com diversas realidades e necessidades, isso ajuda o projeto crescer. Principalmente quando conseguimos dar atenção para novos contribuidores, formar lideres é essencial para qualquer projeto.\n\n> Boa contribuição meus amigo(a)s, espero ter incentivado você contribuir com algum projeto Open Source.\n\nVeja os projetos que mantenho e já contribuir, precisa de ajuda para contribuir e/ou manter projeto Open Source sinta-se livre em entrar em contato comigo avelinorun AT gmail DOT com. Fique por dentro das novidades do mundo Open Source se inscrevendo nessa newsletter.",
    "type" : "blog",
    "file-path" : "content/blog/2020-07-08-por-tras-de-projetos-open-source-existe-pessoas.md"
  }, {
    "title" : "Foco no jogo, não no que está em jogo",
    "date" : "2020-06-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[](https://www.instagram.com/p/CBneElXAs0N/)\n\nÉ fácil falar, mas com prática diária começa se torna natural\n\nQuantas vezes ficamos preocupados com o que podemos perder, a ponto de ter o emocional abalado e acabar influenciando no nosso desempenho em determinada situação?\n\nPode ter sido em uma prova (triathlon, corrida e/ou qualquer esporte), reunião, apresentação em que temos que falar em público, ou até mesmo em uma reunião de família. Começamos pensar o quanto aquilo é importante, quanto tem a perder se nosso desempenho for ruim e o nervosismo toma conta - chegando perder o controle de nós mesmo.\n\nO problema disso é: quanto mais nos preocupamos com o que está em jogo, maiores são as chances de se atrapalhar e colocar tudo a perder.\n\nÉ preciso FOCAR no jogo (no momento), na sua missão a ser cumprida e não no que pode ocorrer se algo der errado e nem nas consequências disso tudo.\n\nQuando começar o jogo, deixe as preocupações do lado de fora e pense apenas no presente.\n\nO AGORA é o que importa para você neste momento.\n\n----\n\nOriginally published at instagram.com/avelinorun",
    "type" : "quote",
    "file-path" : "content/quote/foco-no-jogo-nao-no-que-esta-em-jogo.md"
  }, {
    "title" : "A prática nos leva à perfeição/performance",
    "date" : "2020-06-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Em alguns story comento sobre fazer 2 coisas por 2 mil vezes e não 2 mil coisas por 2 vezes, mas por que tenho falado sobre isso?\n\nProvavelmente você já ouviu essa frase antes, talvez dita por algum parente mais velho ou algum amigo, é algo comumente utilizada em nosso dia-a-dia. Pode ser também que você já tenha ouvido falar em algum momento sobre a regra das 10 mil horas, que propõe que é necessária essa quantidade total de horas para se atingir um nível de maestria em uma habilidade.\n\nA partir do ponto de vista em que há um maior entendimento do processo que envolve a realização de um movimento, bem como o de desenvolver e refiná-lo para determinada prática.\n\nA motricidade pode ser entendida como um conjunto de funções nervosas e musculares que nos permite realizar movimentos voluntários e involuntários. Sendo um processo que abrange planejar, sequenciar, iniciar, executar e corrigir as ações motoras.\n\nEntão se voltarmos ao pensamento inicial: podemos considerar que na realidade o treino e a pratica leva a uma maior capacidade de o nosso sistema motor realizar os movimentos e corrigi-los, e nesse processo de aprendizagem o modelo se mostra um elemento primordial, pois é a partir de um exemplo de como executar uma tarefa que aprendemos a realizá-la com maior proficiência.\n\nTer disciplina e constância levará você a perfeição, consequentemente alcançar sua maior performance.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2020-06-01-a-pratica-nos-leva-a-perfeicao-performance.md"
  }, {
    "title" : "Se permita, viva a vida mais leve!",
    "date" : "2020-05-31T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "A busca pela evolução pessoal é viciante, mas não se cobre tanto nesse momento de distanciamento social.\n\nSe você conseguiu encaixar sua rotina que estimule a alta performance siga o jogo, caso você não conseguiu é momento de afrouxar o cabo e se permitir viver outro momento para manter sua performance e não evoluir - será temporário, logo logo voltamos com gás total.\n\nVocê tem trabalhado home office (saiu do escritório e está trabalhando em casa)? Vou te contar uma verdade, isso não é home office. Você foi forçado(a) fazer isso pela pandemia e não teve tempo se planejar e adaptar com essa nova rotina, pare de se cobrar tanto por uma coisa que você nunca fez e julga não está performando como na sua rotina anterior/antiga.\n\nDepois de anos e anos trabalhando distribuído (desde 2008) é necessário entender qual momento devo parar por não estar rendendo (não gosto da palavra home office, trabalho de onde estiver não necessariamente em casa/home).\n\nO trabalho distribuído requer disciplina e compromisso, costumo falar para meu time: o combinado não sai caro\n\nSe você assumir compromisso de entregar o trabalho em dia X (onde esse prazo foi consentido por todas as partes) e quiser passar N dia jogando vídeo game 🎮 OK, mas entregue no dia combinado.\n\nVestir a camisa da empresa é saber o momento de parar e recarregar a energia para continuar no próximo dia, não virar noites e ter burnout (geralmente causado pelo cansaço extremo) ou qualquer outra síndrome psicológica!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2020-05-31-se-permita-viva-a-vida-mais-leve.md"
  }, {
    "title" : "Como você lida com mudança?",
    "date" : "2020-05-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Por que temos tanta resistência à mudança se a vida é feita delas? A mudança é a única constante, o mais seguro que temos no universo. Hoje não somos a mesma pessoa de ontem, mas tampouco a de amanhã, por mais que tentemos.\n\nUm acúmulo de circunstâncias acontece para que isso seja assim, mesmo que não percebamos. Por esta razão, devemos quebrar o medo da mudança. Existem melhores maneiras de viver do que resistência infinita ao novo.\n\n> Ninguém se banha no mesmo rio duas vezes, porque tudo muda no rio na qual você se banha por Heráclito de Efeso\n\n- Hoje gosto de mudança, mas nem sempre foi assim: friozinho na barrida (adrenalina) é gostoso;\n- Existe variáveis que não controlamos: apenas aceite e planeje o que esteja no seu controle\n- Nem sempre vamos nos sair bem no novo ambiente, é importante aprender lidar com frustrações, mas sempre em busca da evolução (ser antifrágil)\n\nE você, gosta de mudança? Comente como você tem lidado com mudança ultimamente e qual foi o maior aprendizado na sua busca gostar de mudança.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2020-05-28-como-voce-lida-com-mudanca.md"
  }, {
    "title" : "Como está seu hábito de colecionar conhecimentos?",
    "date" : "2020-05-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Essa postagem nasce em um momento que acabou a luz aqui em casa em pleno horário de trabalho, poderia surtar por não conseguir entregar o que tinha planejado para hoje, mas pelo contrário estou lendo para aumentar minha performance e amanhã (daqui X tempo) conseguir entregar muito mais que entrego hoje.\n\n> O livro alimentava minha imaginação. Toda a minha imaginação comia, comia e comia e de barriga assim toda cheia, me levava pra morar no mundo inteiro…! por Lígia Bojunga Nunes\n\nTenho a leitura como a melhor estratégia para aprimorar habilidades cognitivas e comunicação, considerando que ler é uma forma de estarmos conectado com a experiência de outra pessoa (o autor), então podemos afirmar que estamos ganhando experiência. Aliás, ao longo da história da humanidade, o hábito  de ler representa um sinal distintivo, de dignidade e saber. Não é por acaso que muitas pessoas se deixam fotografar tendo um livro nas mãos. Mesmo no mundo de hoje, informatizado, invadido por imagens, a leitura ocupa um lugar de destaque, pois está associada ao desenvolvimento pessoal e ao status intelectual.\n\nFaça anotações\n\nEscreva todos os insights que o livro está lhe dando e grife trechos que você pode revisitar no futuro. Geralmente faço anotações no caderno e grifo o livro ou Kindle - ainda prefiro ler no papel, mas Kindle tem me dado mais mobilidade. Esse estudo pode ajudar você condensar o conhecimento e dar visibilidade no seu hábito de leitura.\n\nSempre que termino de ler respondo as seguintes perguntas:\n\n- Qual os 3 maiores inputs que aprendi com esse livro?\n- O que irei aplicar agora na minha vida?\n- O que levarei pra minha vida?\n\nTenha hábito de leitura, coloque isso em sua rotina diária.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2020-05-27-como-esta-seu-habito-de-colecionar-conhecimento.md"
  }, {
    "title" : "Período de adaptação: nunca é fácil, principalmente quando é forçado",
    "date" : "2020-05-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Apos dois meses vivendo o distanciamento social o que aprendemos nesse período (algumas pessoas chamam de quarentena ou isolamento social)?\n\nÀs vezes só damos valor depois que perdemos, nesse período não foi diferente. Tinha hábito de ir para estrada todos os sábados para nadar, pedalar e correr, no começo de março/2020 resolvi adotar o distanciamento social, após 2 semanas comecei sentir falta de ver pessoas (olha que sempre gosto de ficar em casa sem ver pessoas), sair para praticar atividade física ao ar livre e ir ao mercado sem me preocupar onde iria colocar a mão, foi aí que comecei entender a liberdade de escolha que tinha e do dia para noite me restringi (tinha perdido) - esse sentimento de perca não é confortável - surtei durante alguns dias até cair a ficha e entender o fato que não estava saindo de casa (loucura né, eu que tinha escolhido ficar em casa e mesmo assim não sabia o porque), humanos se adaptam a diferentes ambientes e com o passar do tempo a rotina voltou se encaixar e tudo voltou fluir (na medida do possível).\n\nO colégio que meu filho (de 7 anos) estuda adotou aula à distância ao vivo (live), porem é gravada para os alunos que não tiver como participar  ver em outro horário, comecei observar quanto tempo ele levaria nessa adaptação.\n\nQuando comecei imaginar como seria aula online para crianças de 7 anos imaginei que seria um caos e no primeiro dia não foi diferente, os alunos estavam alguns dias sem se ver e todos querendo falar ao mesmo tempo, ninguém colocando microfone no mute e a professora fazendo a pergunta no positivo todos entenderam? motivando os alunos a falar ao mesmo tempo, eu escutando de fora achei que aquilo estava um caos (principalmente por trabalhar remoto a muitos anos). Algumas horas depois do primeiro dia de aula a professora tomou ciência do problema e mandou mensagem para todos os pais orientando colocar no mute e só liberando o microfone quando o aluno tivesse duvida, ela mudou a forma de perguntar passando para o modo de negação quem não entendeu?, assim minimizando o número de alunos falar ao mesmo tempo, e abrindo espaço para os que tem dúvida falar.\n\nO processo de adaptação para as crianças foram menos de 1 semana, porque nós adultos levamos tanto tempo para nos adaptar?\n\nEstudo dizem que alguns hábitos levam em torno de 254 dias para formar - a maior parte de um ano! Mas muitos livros fala que levamos 21 dias para formar um hábito e provavelmente está certo, desde que tudo que você quer fazer é beber um copo de água gelada após acordar. Qualquer coisa mais difícil é provável que leve mais tempo para se tornar um hábito muito forte, e, no caso de algumas atividades, muito mais tempo.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/periodo-de-adaptacao-nunca-e-facil-principalmente-quando-e-forcado.md"
  }, {
    "title" : "Nem tudo é como gostaríamos",
    "date" : "2020-05-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Buscamos ter controle de todas as variáveis da vida, mas infelizmente (diria felizmente) não temos!\n\nDepois de muitos anos tentando controlar todas as possíveis variáveis, acabei deixando de tentar, essas sabia escolha me fez não ter ansiedade que gerava 1001 questionamentos:\n\n- e se acontecer tal coisa!\n- e se as pessoas pensarem XYZ de mim!\n- e se não funcionar?\n- e se não der certo?\n- e se _..._\n\nBusco viver o presente (estando 100% presente) e planejar o que está no meu alcance para o futuro, sabendo que adversidades acontece e terei que passar por elas.\n\n> Tudo faz parte da grande caixa de mistérios da vida que gostaríamos de espiar, mas não podemos!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/nem-tudo-e-como-gostariamos.md"
  }, {
    "title" : "Foco em evoluir e auto conhecimento",
    "date" : "2020-05-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "É comum se sentirmos desmotivado (não é todos os dias que acordamos bem), principalmente para nós atletas que nesse momento de restrição social onde _não temos provas em vista_, que é uma motivação para manter a rotina de treino.\n\nComo faço para manter minha planilha de treino em dia?\n\nObjetivo claro\n\nMotivação nos faz começar, disciplina é o que nos faz continuar, se não tiver objetivo claro na primeira dificuldade abandonamos nosso objetivo por não ter clareza para onde estamos indo.\n\nDisciplina\n\nNão faço só o que gosto de fazer e sim o que precisa ser feito, a disciplina me trouxe constância e a constância me faz evoluir 1% ao dia.\n\nNão dou tempo para os pensamentos ruins, meu foco é auto conhecimento para ter a cada dia mais disciplina.\n\nO esporte me trouxe muita disciplina, não sou um bom corredor, nem ciclista e muito menos nadador, para conseguir chegar próximo dos amigos que faz às três modalidades super bem, preciso ter muito foco e disciplina:\n\n ser o primeiro a chegar no treino;\n ultimo a sair do treino;\n manter constância do treino;\n estar 100% presente para absorver o máximo do treino;\n* fazer 20% a mais - coloque qualquer numero aqui;\n\n_para tentar chegar próximo deles._\n\nRotina\n\nBusco manter a _mesma_ rotina que tinha antes. Algumas coisas mudaram (na real muita coisa mudou), mas me fez adaptar e transformar na minha nova rotina a melhor rotina: cuidar da minha saúde mental, treinar em casa para manter meu corpo ativo, trabalhar (sempre fazendo o meu melhor) e viver momentos memoráveis com à família (filho, esposa e dog).\n\nPensamento positivo — todos nós temos problemas\n\nQuando alguém me pergunta se estou bem, minha resposta é estou sempre bem, mas será que realmente estou bem?\n\nEm alguns momentos não, mas para que irei reforçar que não estou bem? Energia negativa atrai mais energia negativa, sempre busco estar em um ambiente que tenha uma energia positiva e leve.\n\n> Quando não aguentar mais, tenha certeza que você aguenta mais 20%",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/foco-em-evoluir-e-auto-conhecimento.md"
  }, {
    "title" : "Preparação para IRONMAN VR (70.3) em 3 dias",
    "date" : "2020-04-05T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "A preparação para IRONMAN 70.3 não é um processo simples (requer dedicação e disciplina), principalmente quando resolvemos fazer essa loucura com 3 dias de antecedência em uma fazer que meu volume de treino esta extremamente baixo por conta do COVID19 (treino com alta intensidade e com grandes volumes faz a imunidade cair, nesse momento não podemos vacilar com nossa imunidade), foi assim que aconteceu com #IRONMANVR1 (primeiro IRONMAN Virtual, 5km de corrida, 90km de pedal e 21km de corrida tudo dentro de casa em esteira e rolo).\n\nTinha ciência que não seria uma prova fácil, pedalar e correr grandes volumes não é fácil quando estamos na estrada (outdoor), agora imagina fazer isso indoor? Quando disso sim para o desafio minha preparação foi 100% mental - física sabia que não teria tempo hábito - com muita meditação, técnica de mentalização e descontração (aprendido no DeROSE Method).\n\nSabia que precisava de uma motivação extra por estar dentro de casa, com tudo me motivando para parar (geladeira, sofá, Netflix, trabalho, família e tudo que temos dentro de casa), mas eu disse sim e usei alguns mind hacking para fazer meu cérebro chegar até o fim, o principal foi a pressão social. Acredito que você nunca tenha visto eu falando no story e ontem foi dia de reportar cada etapa da prova, cobrança mental por se expor em público para começar e chegar ao fim.\n\nOutro ponto extremamente importante foi envolver a família no desafio, com meu filho de staff (aquela pessoa que lhe ajuda quando precisa de algum, por exemplo pegar o próximo esquisse de água), à esposa como apoio do filho que poderia não lembrar onde estava alguma coisa e principalmente me motivar em momentos difíceis (sabia que chegaria o KM 15 da meia maratona), ela é casca grosa quando o assunto é chegar ao fim de um desafio - _Samara Avelino_ valeu por jogar duro comigo nesse desafio!\n\nOs primeiros 5km de esteira foi tranquilo, praticamente foi o tempo do corpo esquentar e começar o pedal sem precisar girar com cadência alta, como já estava quente os primeiro 50km foi tranquilo, após o 50km foi momento de começar sentir os glúteos e músculos das coxas queimar (não muito). Subi na esteira forte e com muita energia, como tinha tomado muito líquido para hidratação no KM 8 comecei sentir vontade ir ao banho, mas segurei até o KM 10, até que chegou no tão esperado KM 15 - aqui foi onde começou o desafio - onde comecei me arrastar até o KM 18 aonde voltou a fluir, chegando super bem no KM 21.\n\nTerminei me sentindo super forte e muito bem por ter passado por mais esse desafio psicológico. Em nem um momento passou em minha cabeça que não iria conseguir.\n\nCérebro que manda no corpo!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/preparacao-para-ironman-vr-703-em-3-dias.md"
  }, {
    "title" : "Qual é o seu IRONMAN?",
    "date" : "2020-03-07T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Vamos começar com um assunto complicado, expor nossas fraquezas não são muito fácil né? Mas depois de supera-lá acho importante compartilhar como foi aquela luta.\n\nQual é seu atual IRONMAN? Nesse texto usarei o nome IRONMAN como um sinônimo de desafio que você julga muito complicado, onde envolve muito treino, dedicação e perseverança.\n\nAgora senta que lá vem textão:\nNo carnaval resolvi não ir para Salvador (como já tinha planejado 1 ano a traz), nem ir para bloquinhos em São Paulo e sim ir para o Lobo Tri Experience (aka mini Camp), onde passaríamos 4 dias treinando no período da manhã. No dia 25/12 (último dia do camp) fecharíamos com 4 simulados, ou seja, nadar, pedalar correr e voltava tudo novamente. E lá vou eu mais uma vez para um lugar onde teria que vencer uma das aflições internas a tal Águas Abertas, pois é falo de Triathlon a +- 3 anos e águas abertas ainda era (vamos rasgar o verbo do presente e usar passado) um desafio interno, nunca queria estar ali e sempre negligenciando os treinos de natação.\n\nQuando entrei na água, senti que não estava legal, só queria sair correndo de lá para casa e ficar em posição fetal, mas se estou dentro da água bora nadar.\nToca a buzina do primeiro simulado e vai o fanfarrão dando braçada forte, sem respirar direito e com menos de 200m me sinto perdido no meio da represa sem ninguém do meu lado, bate aquele desespero e minha cabeça assume o controle do meu corpo com diversas afirmações e questionamentos:\n\n o que estou fazendo aqui?\n a primeira boia nunca chega!\n não irei aguentar!\n não estou conseguindo nem boiar!\n vou voltar!\n\nOlho para o lado e vejo o caiaque se aproximando e o coach Jose Belarmino do meu lado, vendo eu me desesperando, ao olhar para ele começa um diálogo no meio da represa:\n\nA: Zé, não aguento vou voltar!\n\nZé: Calma Avelino, segura no caiaque e tira os óculos\n\nA: Zé, você não esta entendendo, fodeu não irei aguentar!\n\nZé: Calma Avelino, respira, tira os óculos, olhe para trás e veja o quanto já nadou, olhe para frente e veja o quanto falta para a primeira boia\n\nEle estava fazendo eu me acalmar e me colocar no estado presente (estudo e vivo muito mindfulness, mas ali não estava rolando), após me acalmar e me colocar no estado presente foi momento de voltar nadar, por fim levei 23 minutos para fazer 500m, sai d'agua destruído e muito abalado. Chegou o momento que mais gosto do triathlon, o tal pedal, quando saio na estrada para pedalar, sinto que algo estava diferente e não conseguia fazer força, comecei tentar fazer respiratória para ajudar na recuperação muscular, porem não fluiu. A corrida consegui sair forte com o pace de 4:50, mas terminei morrendo.\nSe você se lembra tinha mais 3x, entrar na água pela segunda vez era tudo que eu menos queria, entrei sentindo calafrio de medo, angustia e ansiedade, a primeira natação tinha me destruído psicologicamente e não consegui segurar as rédias. Lá foi eu, dessa vez fluiu melhor na parte de respiração, mas o tempo foi para o vinagre, o pedal e corrida não encaixava e acabei jogando a toalha devendo 2x.\n\nNo final do treino foi momento de bater um papo com o coach, comecei a conversa falando que não iria conseguir fazer a prova do dia 15/3 e mais 1001 frases negativas. Quando dei tempo para ele falar, olhou para mim e falou para ter calma e que precisaria entrar mais em águas abertas para perder esse medo.\n\nApós chegar em casa e chorar muito (sim meus olhos ficou repleto de suor kkk), dois dias depois desse capítulo tinha plena certeza que _triathlon não era para mim_, olhei algumas provas de duathlon (sem água) e blábláblá, mas eu que quiz fazer triathlon, ninguém me forçou a isso. No terceiro dia após o acontecido caiu minha ficha, eu que escolhi o triathlon, porque eu estou querendo desistir no primeiro desafio?\nForam 2 semanas até aqui, fazendo natação todos os dias focando na correção da respiração e técnica, alguns dias foram de águas abertas, ficando na boia de 50m, sabe quando uma criança entra na água pela primeira vez e treme de medo? Era eu quando entrava na represa.\n\nApós essas 2 semanas foi dia de fazer simulado (hoje 07/03/2020), fiz tudo diferente da outra vez:\n\n queria esta ali\n antes de sair nadando fiz bastante respiração\n fiz o corpo a costumar com a água\n* nadei 100m para aquecer o mínimo possível\n\nE fui, após nadar 1000m, sai da água super bem e forte para seguir com o pedal e corrida!\n\nParo a história por aqui para voltar ao conteúdo desse texto, com a seguinte pergunta:\n\n> Qual seu atual IRONMAN?\n\nO meu IRONMAN era essa tal de águas abertas, para vencer ele foi com base em meta, foco, perseverança e método.\n\nNão tente abraçar o mundo, foque no seu IRONMAN, após passar por ele curta cada segunda de sua conquista antes de ir para próxima meta.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/qual-é-o-seu-ironman.md"
  }, {
    "title" : "Foco no ambiente, acelerando o aprendizado!",
    "date" : "2020-02-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Objetivo desse blogpost é compartilhar como geralmente faço para acelerar meu aprendizado em uma área que não tenho tanta experiencia e quero (e/ou preciso) ganhar mais experiência.\n\nQuando entrei na área de tecnologia (desenvolvimento de software) não sabia praticamente nada e comecei estudar como poderia acelerar meu aprendizado, até que me deparei em um texto no reddit que falava sobre foco no ambiente, foi o extremamente difícil eu conseguir entender o que estava querendo dizer aquele texto, mas depois de dias lendo e relendo consegui absorver que deveria frequentar lugares onde tinha pessoas fazendo o que buscava aprender, assim aceleraria meu aprendizado. Como tinha acabado de chegar na área, não sabia o ambiente (locais) onde as pessoas desenvolvedora de software frequentava, depois de muita pesquisa me deparei com uma conferência de Python fora de São Paulo, e lá fui eu sair da zona de conforto, na emoção de ter achado essa conferencia, comprei passagem e hospedagem próximo à universidade que seria a conferência, assim que comprei comecei alimentar alguns bichos dentro da minha cabeça (medo do desconhecido e novo, quem sabe no futuro escrevo alguma coisa sobre o assunto):\n\n Todo mundo deve se conhecer, ficarei deslocado!\n Será palestras muita avançada, não irei entender nada!\n Como puxarei assunto com uma pessoa desenvolvedora de Python sendo que conheço pouco da linguagem?\n O que motiva essa galera está lá? Não deve ser o mesmo motivo que eu!\n* … mais uma porrada de afirmação sem embasamento\n\nPensei diversas vezes em não ir, na real alguns dias após a compra das passagens tinha certeza que não iria e só tinha gastado dinheiro. Chegando na data próximo da conferência consegui me convencer que iria e caso não tivesse interação com o pessoal iria conhecer a cidade.\n\nApós vencer os bichos que tinha dentro da minha cabeça e dar o primeiro passo (ou segundo porque o primeiro foi comprar as passagens), foi momento de focar no ambiente e tentar absorver o máximo que podia e conhecer pessoas (julga esse ponto ser o divisor de águas da minha carreira), foi momento de voltar para casa sabendo onde poderia encontrar outras conferências locais (na minha cidade) para respirar o mesmo ar que a galera. Com o passar do tempo comecei ajudar o Grupy-SP (Grupo de usuários Python da cidade de São Paulo), nesse momento ainda não existia usávamos lista de e-mail e canal no IRC para comunicação e todos os eventos eram publicados no Wiki da Python Brasil.\n\nQuando quero aprender alguma coisa que não domino, meu primeiro passo é sair da zona de conforte e ir estudar por conta, depois é buscar locais que tenha pessoas que domine o assunto que eu quero aprender, isso serve para acelerar meu conhecimento, aprender o que não fazer com quem tem experiência (errou muito), assim evito passar horas e horas onde não me levará a lugar algum. Quando estamos estudando um tema novo é muito comum nos perdermos com o que estudar (perder o foco) ou colocar esforços em conteúdo que não deveríamos no momento atual.\n\n> Frequente ambiente que tenha pessoas melhores que você!",
    "type" : "blog",
    "file-path" : "content/blog/foco-no-ambiente-acelerando-o-aprendizado.md"
  }, {
    "title" : "Chegando no limite da tecnologia, e agora para aonde vou?",
    "date" : "2020-02-19T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Nós de tecnologia em geral, somos early adopter (gostamos de abraçar novas tecnologias, mesmo sem saber ao certo porque ela existe), quando falamos em desenvolvimento não é muito diferente.\n\n Por que não usamos o banco de dados X?\n Podemos usar a linguagem de programação Y!\n O serviço Z resolve 100% dos nossos problemas!\n\nVamos assumir que as afirmações acima estejam 100% corretas (lançamos o primeiro erro), a solução irá servir para vida toda ou daqui a alguns meses tenham que olhar para ela, porque batemos em algum limite da implementação, arquitetura ou da própria tecnologia?\n\nSe chegarmos em algum limite qual será os passos para correção? Dado que o software está em produção e não temos tempo hábil para pousar o avião?\n\nVocê já escutou pessoas com mais experiência dizendo: a teoria, na prática é outra\n\nQuando estamos lendo texto onde fala:\n\n o Google usa\n o Facebook usa\n\nBusque entender se essa tecnologia (ou solução) é para o momento atual da sua empresa e/ou software, ou está indo na onda de grandes players que tem estrutura totalmente diferente da sua?\n\nO software, qual o problema à ser solucionado\n\n> _Time_, precisamos desenvolver uma API que irá solicitar consulta em diversas APIs (software de terceiros), pré processar (colocar os dados em nossa estrutura unificada), após processar salvar no Serviço de Store (serviço já existente)\n\nOlhando a descrição acima e pensando em arquitetura de software, chego em uma arquitetura nesse caminho:\n\n![](/blog/Screen Shot 2020-02-19 at 12.25.17-2020-02-19.png)\n\nSoftware X (API): API interna onde recebemos solicitação para disparar consulta nas APIs de terceiros\n\nServiço Y: Consulta assíncrono todas as APIs de terceiro, coloca na estrutura que o Serviço Store precisa e envia para o Serviço Store\n\nAPI 1, 2, 3, 4: APIs a ser consumida, cada API retorna de uma forma, JSON, XML, SOAP e etc\n\nServiço Store: Serviço já existente para armazenamento de dados\n\nDB: transitório: Banco de dados que armazenamos o retorno de todas APIs (1, 2, 3, 4) antes do pré processamento, _após ser processado pode ser deletado_.\n\nQueue: Bando de dados de fila\n\nDados transitórios\n\nEscolher os componentes que iremos utilizar para compor uma solução não é um trabalho muito simples, principalmente quando olhamos para uma solução com pensamento macro e não o que ela pode se tornar no futuro.\n\nVamos colocar uma premissa para essa escolha: o time conhece e usa MongoDB em produção\n\nComo o time usa MongoDB em _produção_ vamos usar esse banco de dados para armazenar o retorno das APIs com a seguinte estrutura:\n\n    {\n        headers: {},\n        body: , // retorno da API, nem sempre será JSON, pode ser XML e sera salvo como raw (string)\n        status_code: 200 // http status code\n    }\n\nSoftware em produção\n\nO desenvolvimento do software foi relativamente tranquilo, foi usado soluções que o time possuía domínio e não gerou débito técnico.\n\nAproximadamente _1 ano_ depois a solução de monitoramento começou enviar alguns alerta reportando que não estava conseguindo salvar os dados no MongoDB, o documento estava com mais de 16mb, ou seja, chegamos no _limite_ do banco de dados.\n\nAo olhar esses casos mais de perto, chegava um grande XML que passava do limite pré definido pelo MongoDB.\n\nSe você está começando usar MongoDB não chegou até essa parte da documentação, vale a leitura para entender sobre os limites do MongoDB.\n\nApós chegar nessa limitação pensamos em 4 possíveis soluções:\n\n1. Compressão no conteúdo, dado que é XML poderia tirar espaço e/ou alguns parâmetros que não usamos, mas estaria postergando o problema, no futuro poderia voltar ter o mesmo problema;\n2. Alterar a estrutura de registro salvando 1 registro para controlar outros N registro com documento feito split (dividindo a string);\n3. Alterar o limite do tamanho máximo da coleção;\n4. GridFS (recomendação do MongoDB, _To store documents larger than the maximum size, MongoDB provides the GridFS API_).\n\nNo primeiro momento a _solução 3_ me parecia ser ótima, bastava mudar o tamanho do limite máximo pré definido pelo MongoDB (para criação de novos documentos) e tudo funcionaria perfeitamente, olhando a documentação (alterar a opção nsSize) é extremamente simples, de fato a alteração no MongoDB é simples, porém o drive do MongoDB para Python seta os _16mb_ em variável interna para tratar documentos, alterar esse limite não é tão trivial, seria necessário fazer monkey patch ou um fork do drive, quando cheguei nesse momento foi o momento de tirar o pé do acelerador e pensar na próxima alternativa.\n\nPara o próximo passo a _solução 2_ me parecia ser ótima, até ter que lidar com uma grande string e ter que colocar grandes funções para tratar tamanho de strings menores, isso que não cheguei no momento de ter um registro para controlar outros registros. Ao ver o começo da implementação a complexidade me fez abrir mão e passar para próxima opção.\n\nAs soluções listadas acima foi mais ou menos a ordem até chegar na solução 4.\n\nSolução final\n\nO software envia para o MongoDB para salvar como uma collection normal, quando recebemos o erro de documento muito grande, tratamos o erro criando um arquivo no GridFS com o conteúdo do XML e colocando a referência do arquivo criado na estrutura do documento, ficando da seguinte forma:\n\n    {\n        headers: {},\n        gridfs: ObjectID(), // ID interno de referência do mongodb\n        status_code: 200 // http status code\n    }\n\nNo software que lê esse documento fazemos uma condição if tratando se existe o nó gridfs:\n\n    obj = mongodb.find_one({...})\n    if obj.get('gridfs'):\n        fs = GridFS(...)\n        body = fs.get(obj['gridfs'])\n        obj['body'] = body.read()\n        obj.pop('gridfs')\n    return obj\n\nDessa forma retornamos a mesma estrutura independente de onde foi salvo o conteúdo (próprio documento ou GridFS), assim ficando agnóstico para o software lê os dados.\n\nNem tudo funciona tão bem como esperamos (não existe bala de prata), alguns pontos extremamente importantes para ter conhecimento:\n\n Leitura e escrita no GridFS é mais lenta que um documento;\n* Estamos armazenando dados em outra coleção do MongoDB, ou seja, o processo de limpeza do banco de dados agora precisa olhar para outras coleções (como mencionado é um dado transitório, podemos apagar todos os dados a qualquer momento), usamos Expire Data via TTL do MongoDB.",
    "type" : "blog",
    "file-path" : "content/blog/chegando-no-limite-da-tecnologia-e-agora-para-aonde-vou.md"
  }, {
    "title" : "atleta nunca tenta descobrir seu limite, mas deseja superá-lo a cada instante",
    "date" : "2020-02-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Constantemente recebo mensagem perguntando o que me fez mudar minha vida, praticar esporte, fazer academia, acordar 4:30am e outras coisas que acabo publicando que soa maluquice. Vou tentar responder alguns questionamentos.\n\n O que me fez querer mudar? Sair de uma vida muito sedentária para prática de esporte.\n\nO estopim sem sombra de dúvida foi medo de morrer, após alguns exames no cardiologista recebi a notícia nas últimas 2 horas tive 3 começo de infarto, sei o que é um infarto, mas o que é um começo de infarto?\n\n O que me fez fazer academia e praticar esporte?\n\nApós +- 2 meses da cirurgia bariátrica o médico falou que já poderia ir para academia, minha resposta para ele foi como assim ir para academia? Não era só fazer a cirurgia e perderia peso?, nesse momento que tive a sensação de ser enganado 🤔. Lá fui eu, chegando na academia vem uma pessoa toda animada e perguntou qual era meu propósito, mentalmente veio a resposta sei lá, minha mãe mandou, na tentativa de cortar o assunto ali, falei que queria correr (confesso que não sei porquê dessa resposta), porém ele continuou o assunto, mais quer correr prova de 5, 10, 21, 42km? , louco para fugir do assunto minha resposta foi o que não sabia e só queria correr.\n\nFui para esteira parecendo um rato correndo, na real me arrastando que nem trotar eu conseguia, mas percebi que no momento que estava na esteira não conseguia pensar em nada além de prestar atenção para não cair, comecei usar esse momento para me desconectar e viver aquele momento. Após alguns meses treinando fiz uma prova de 5, 10 e 18km - sempre chegando no final morrendo -, mas o corredor sempre quer mais KMs, chegando no fim da prova de 18km com muita endorfina comecei pensar para onde eu iria e veio na minha mente a marca do IRONMAN (até então não sabia o que era, apenas lembrei do nome), chegando em caso foi momento de pesquisar e entender que era triathlon, mas o que é triathlon? Quando entendi que era nadar, pedalar e correr, falei para mim isso é fácil, eu já estou correndo, fiz natação quando tinha 7 anos de idade e pedalo desde criança, será tranquilo, inocente eu né KKKKKJKK.\n\nOlhando para meu pensamento de 2016, não sabia pedalar e sim andar de bicicleta, não nadava e sim boiava e correr prefiro não comentar (nem trote era 😜).\n\nTriathlon é estilo de vida (lifestyle)!\n\nEm resumo estou no triathlon pelo psicológico, escrevi alguns textos porque estou no triathlon, você deve achar aí na timeline.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/atleta-nunca-tenta-descobrir-seu-limite-mas-deseja-superá-lo-a-cada-instante.md"
  }, {
    "title" : "Começar viver, esteja consciente dos seus passos!",
    "date" : "2020-01-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Refletir sobre nossos momentos difíceis não são muito fáceis (falar de nossas intimidades muito menos), mas é esses momentos de auto conhecimento e crítica que nos ajuda alavancar para cima e subir nossa própria barra (nos tornar uma pessoa melhor).\n\nPara quem é novo por aqui eu tive algumas empresas de 2011 até 2019, algumas deram certo (fui comprado por outras empresas e sócios), porém outras deram super errado e acabou me levando lá em baixo fazendo eu voltar a corrida dos ratos. Geralmente falamos apenas das histórias de sucesso, mas particularmente gosto de escutar as histórias de insucesso, isso nos ajuda filtrar os caminhos para termos umas atenções.\n\nMas por que estou falando isso aqui👆?\n\nDurante anos - começar empreender não é nada fácil, sair do 0 para 1 - não olhava para outro lado além de fazer minha empresa acontecer, foi anos intensos com muito dedicação, perseverança e resiliência (e coloca resiliência isso).\n\nNo começo de 2018 olhei para trás e me surgiu alguns questionamentos:\n\n Por que estou fazendo isso mesmo?\n Estou dando atenção para minha família ou apenas vivendo em no meu mundo de negócios?\n Quantas vezes viajei com minha família nos últimos 12 meses?\n Porque as pessoas tiram férias?\n Eu realmente trabalho por hobby? Sempre gostei muito do que eu fazia, por isso pensava que trabalhava por hobby\n ... mais uma porrada de perguntas para mim mesmo!\n\nAté que cheguei a conclusão que estava no momento de encerrar mais um ciclo, sair do dia a dia da empresa que fundei em 2015 que vinha crescendo muito, não foi uma olha fácil, mas chegou a hora de mudar a prioridade da minha vida e pensar mais em minha e em minha família (principalmente minha esposa que sempre abraçou as ideias malucas que tinha, falta algum parafuso na cabeça dela 🖤).\n\nMinha escolha por sair da empresa foi para começar viver, ganhei muito dinheiro empreendendo, mas não sabia responder porque e para que eu queria tanto dinheiro. Dinheiro é importante, mas ele não deve ser o fim e sim o meio para alcançar nossas metas.\n\nVocê esta vivendo consciente seu momento atual ou esta no modo Zeca Pagodinho deixa a vida me levar? Tenha consciência do seu momento e seus passos, confesso que eu não tinha, em 2018 foi ano de tomar a rédeas da minha vida...",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/começar-viver-esteja-consciente-dos-seus-passos.md"
  }, {
    "title" : "O que dizer de 2019? Ano de autoconhecimento!",
    "date" : "2019-12-31T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Vou começando relembrando meu 2018 que foi um ano de muito aprendizado, entendo o que de fato eu gostaria de fazer profissionalmente e me desligar do que me deixava longe do que eu queria/quero para mim. E assim dei inicio em 2019...\n\n2019 foi o ano de autoconhecimento e entendo que hobby é hobby, profissão é profissão (cada um em seu lugar) e juntos um complementa o outro, isso acabou me trazendo alguns RP (recordes pessoais) em provas que nunca imaginei na vida que iria conseguir (tinha 180kg, o esporte me fez perder 108kg). Com esse negocio de empreender acabei fazendo terapia (ainda faço, desde 2015), assim consigo me entender e sempre me desconstruir para me ser minha melhor versão a cada dia.\n\nO esporte (triathlon) entrou em minha vida como uma válvula de escalpe, onde consigo deixar todo o estresse da semana de trabalho em alguma estrada e voltando para casa extremamente tranquilo com vontade de começar mais uma semana.\n\nO que espero de 2020? Tenho certeza que irei colher o que plantei!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/o-que-dizer-de-2019-ano-de-autoconhecimento.md"
  }, {
    "title" : "Alta performance com dieta baseada em plantas",
    "date" : "2019-11-30T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "A pergunta que os atletas que segue dieta baseada em plantas recebe é a suposição de que os alimentos de origem animal são a única fonte de proteína, isso é um equívoco, mas infelizmente muitas pessoas têm essa visão por falta de informação.\n\nNa verdade:\n\n Uma porção de brócolis cozido ou espinafre tem tanta proteína como um ovo médio (6 gramas)\n Espirulina (alga azul-esverdeada) é o alimento mais denso em proteínas do planeta\n 3 colheres de sopa de sementes de cânhamo têm proteína igual a 1/2 xícara de iogurte grego (10 gramas), além de 6 gramas de ácidos graxos ômega 3\n\nNos _Estados Unidos_, a recomendação diária de proteína (RDA) é 0,8 gramas por quilograma de peso corporal. Porém, esta recomendação destina-se a simplesmente manter funções corporais básicas, a ingestão diária de proteínas deve ser maior para a maioria das pessoas. Pesquisas mostram que os atletas de alta performance deve ingerir aproximadamente 50% mais proteína do que pessoas sedentárias - 1.2 - 2.0/kg de proteína diariamente - dependendo da fase de treinamento, dependendo de peso, dieta, gênero e idade.\n\nProteína vegetal\n\nAminoácidos são os blocos de construção da proteína. Dos 20 aminoácidos, seu organismo é capaz de produzir 11 deles - eles são conhecidos como aminoácidos não essenciais. Os outros 9 são denominados aminoácidos essenciais - eles não são produzidos pelo organismo e devem ser ingeridos através de alimentos.\n\nAlimentos de origem animal (carne, laticínios e ovos) contêm aminoácidos essenciais em quantidades aproximadamente iguais. Alimentos vegetais como quinoa, trigo-sarraceno, espirulina, soja, chia, grão-de-bico e pães também contêm os 9, mas a maioria dos alimentos vegetais tem ausência de pelo menos um aminoácido essencial. Mas não precisamos de todos os aminoácidos em cada mordida de alimentos, alcançar e manter a síntese de proteína do corpo requer uma dieta que inclui uma variedade de proteínas vegetais, incluindo grãos integrais, legumes, nozes, sementes e legumes.\n\nA lisina (fórmula C6H14N2O2) é o único aminoácido essencial que é difícil de obter em uma dieta _vegana_, porque as plantas contêm quantidade muito baixa. Lisina é um precursor da carnitina (fórmula C7H15NO3), molécula-chave na oxidação beta (a conversão de ácidos graxos em energia). Carnitina auxilia remover toxinas do músculo, reduz o colesterol, e ajuda na produção de colágeno - principal proteína estrutural do corpo encontrada no osso, cartilagem, tendões, ligamentos e pele.\n\nDieta mista que inclui carne, ovos e/ou laticínios fornece 60 - 180mg por dia de carnitina, enquanto dieta vegana fornece 10 - 12mg. Por esses motivos atletas com dietas a base de plantas (veganos) deve ingerir proteína vegetal com grandes fontes de lisina. Os alimentos mais ricos em Lisina incluem tempeh, lentilhas, tofu germinado, amaranto, quinoa, pistache, grão-de-bico e sementes de abóbora.\n\nProteína e Performance\n\nPessoas pode se safar com uma dieta vegana abaixo do ideal; no entanto, o aumento do volume de treino e corrida pode levar a má performance, recuperação e saúde para atletas vegano.\n\nAlguns riscos:\n\n Falta de açúcar no sangue, as fontes de proteína vegetal contém mais carboidratos e menos gordura, comparada com proteínas animais. Isso pode resultar em ineficiência metabólica e diminuição da capacidade de usar gordura como energia, além de menos saciedade e aumento no desejo de açúcar.\n Baixa disponibilidade de energia (EA), devido à alta ingestão de fibras, reduz a absorção de calorias e nutrientes. A EA é a quantidade de energia deixada para funções corporais básicas após o gasto energético do exercício ser subtraído da ingestão de energia. Baixo EA pode prejudicar a densidade mineral óssea (BMD), função hormonal, imunidade e função menstrual, entre outros problemas de saúde.\n Deficiências de micronutrientes, incluindo ferro, zinco, vitamina B12, ácidos graxos ômega-3 (EPA/DHA), cálcio e vitamina D. Isto é devido à exclusão das principais fontes de nutrientes e diminuição da absorção devido à alta carga de fibras.\n Má recuperação, devido à remoção de alimentos com alto teor de leucina (presentes nos alimentos lácteos). Leucine é um aminoácido de cadeia ramificada e é fundamental para a recuperação muscular. Atletas (especialmente mulheres) devem obter 3 gramas de leucina a cada 30 minutos de exercício intenso ou longos.\n Diarreia (intestino funcionando mais que o normal), especialmente durante a execução de exercício, relacionada à ingestão de grande volume de fibras.\n Atletas que seguem dieta à base de plantas deve ter acompanhamento regular com nutricionista esportivo.\n\nUm dia com dieta à base de plantas\n\nPlano de refeição a seguir fornece uma variedade de proteínas vegetais ricas em lisina e combinam alimentos ricos em zinco e ferro com vitamina C e atende a exigência diária de vitamina B12, cálcio e ômega-3.\n\n Café da manhã (pré-treino): Aveia ou quinoa com sementes de abóbora e pistache, melaço (para ferro) e bagas (para vitamina C). Adicione leite de nozes (alta proteína), pó de proteína vegetal para proteína extra (ervilha, arroz, chia, amêndoas, amendoim, cânhamo).\n Lanche pós-treino: pudim de chia ou smoothie com proteína em pó de alta leucina e frutas.\n Almoço: Uma salada saudável com folhas verdes (couve, espinafre ou couve para ferro e cálcio), abundância de legumes (beterraba para nitratos, pimentas para vitamina C), grão de bico e tempeh orgânico, abacate (para gorduras ômega-3) e levedura nutricional (para vitamina B12).\n Lanche: pão integral ou legumes em palito com hummus; ou maçã, banana, ou pão integral com manteiga de nozes e sementes de cânhamo.\n Jantar: Feijão ou lentilha com pimentão, tomates e batata-doce. Couves de Bruxelas assadas ou brócolis (proteína extra mais cálcio e vitamina C).\n\nReferências:\n\n1. _Wooding DJ, Packer JE, Kato H, West DWD, Courtney-Martin G, Pencharz, PB, Moore DR. Increased protein requirements in female athletes after variable-intensity exercise. Med Sci Sports Exer. 2017;49(11):2297-2304._\n2. _Thomas DT, Erdman KA, Burke LM. Position of the Academy of Nutrition and Dietetics, Dietitians of Canada, and the American College of Sports Medicine: nutrition and athletic performance. J Acad Nutr Diet. 2016;116(3):501-28._\n3. _Rebouche CJ. Carnitine. In: Shils ME, Olson JA, Shike M, Ross AC (eds). Modern Nutrition in Health and Disease, 9th Edition. Lippincott Williams & Wilkins, New York, 1999, pp.505-12._\n4. _Fuhrman J and Ferreri DM. Fueling the vegetarian (vegan) athlete. Curr Sports Med Rep. 2010;9(4):233-41._\n5. _Heidi Strickler, RD, CSSD, METS I, ISAK I is a Registered Sports Dietitian with eNRG Performance. An avid endurance athlete, triathlete, and ultra-runner herself, she has a passion for providing nutrition coaching to endurance athletes. She also specializes in plant-based nutrition, female physiology, and collegiate athlete nutrition. In July, she will graduate with a Master’s degree in Sports Nutrition from Liverpool John Moores University in England, United Kingdom. Find out more about Heidi at enrgperformance.com._\n6. The Game Changers\n7. What The Health",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/alta-performance-com-dieta-baseada-em-plantas.md"
  }, {
    "title" : "Transformando dores musculares em prazer (amor)",
    "date" : "2019-11-24T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "De arrepios de dores musculares a amor, acredito que essa seja a evolução que tive dentro da modalidade de bike.\n\nQuando comecei pedalar eu sentia diversas dores muscular e muita dor na bunda (na real é no períneo), começar pedalar era uma tortura, chegava no escritório (local que fica minha bike) e demorava muito tempo para começar (em alguns dias chegava a horas). Lembro como se fosse hoje eu indo comprar minha primeira bicicleta para o triathlon, quando cheguei em casa comentei com minha esposa pedalar é tranquilo, nem transpirei. Na minha cabeça eu sabia pedalar, quando era moleque sempre andei de bike, após começar pedalar entendi que sempre andei de bike e que não sabia pedalar.\n\nCom o passar dos meses trabalhei minha mente colocando outra motivação para tirar o foco das dores e começar de fato evoluir na modalidade que tinha mais dificuldade.\n\nApós tirar o foco da dificuldade que tinha (dores 😬) minha evolução na modalidade começou evoluir muito.\n\nSou muito grato pelos meus familiares (especialmente pela minha esposa e filho 🖤), amigos e marcas por está junto nessa luta diária, sem o apoio deles não seria possível.\n\nMindhacking é uma prática que está me ajudando muito na evolução no esporte, principalmente nos dias que não estou afim de treinar. Eu tenho publicado bastante coisa da minha vida nos treinos, não é todos os dias que estou motivado, mas se está planejado é necessário fazer, vou lá e faço.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/transformando-dores-musculares-em-amor.md"
  }, {
    "title" : "Performance vs. Trust, identifying toxic people",
    "date" : "2019-11-18T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "There is one simple question to ask if you want to build a high performing team.\n\n> Who is the asshole?\n\nSimon Sinek explains a powerful and, ironically, very simple way to identify toxic people in your teams which might be successful short-term but harm a team long-term.\n\nThe majority of companies out there are run a system of incentives which fuels toxic cultures as the bonus structure is mainly based on performance.\n\n<!-- Gumroad: Notion To-Do List Manager -->\n<script src=https://gumroad.com/js/gumroad.js></script>\n<center>\n<br />\n<a class=gumroad-button href=https://gum.co/notion-todo-list-manager?wanted=true target=_blank data-gumroad-single-product=true>👉 control your to-do list 👋</a>\n<br /><br /><br />\n</center>\n<!-- Gumroad: Notion To-Do List Manager -->\n\n{{< youtube YPDmNaEG8v4 >}}",
    "type" : "quote",
    "file-path" : "content/quote/performance-vs-trust-identifying-toxic-people.md"
  }, {
    "title" : "Diferença entre amadores e profissionais",
    "date" : "2019-11-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Porque algumas pessoas _parecem ser_ extremamente bem sucedidas e fazer muito, enquanto a grande maioria de nós luta para pisar na água?\n\nA resposta é complicada e provavelmente composta por diversas respostas.\n\nO aspecto principal é a forma de pensar e planejamento.\n\n![](/blog/maxresdefault-2019-11-11.jpg)\n\nMas qual é a diferença? Na verdade, há diversas diferenças:\n\n Amadores param quando chega a seu objetivo, profissionais entendem que a realização inicial é apenas o começo;\n Amadores têm um objetivo, profissionais têm um processo;\n Amadores pensam que são bons em tudo, profissionais entendem seus círculos de competência;\n Amadores ver feedback e concelho como criticas, profissionais sabem que têm pontos fracos e procuram críticas construtivas;\n Amadores valorizam o desempenho isolado, pense sobre o receptor que pega a bola uma vez em um lance difícil. Profissionais valorizam a consistência, posso pegar a bola na mesma situações 9 vezes em cada 10?\n Amadores desiste no primeiro problema e assumi que é um fracassado, profissionais veem o fracasso como parte do caminho para o crescimento e evolução do ponto fraco;\n Amadores não têm ideia do que melhorar para alcançar bons resultados, profissionais entende;\n Amadores pratica para se divertir, profissionais sabe o que nos treinos ira acontecer no jogo;\n Amadores foca em identificar suas fraquezas e melhorá-las, profissionais focam em seus pontos fortes e em encontrar pessoas que são fortes onde são fracos;\n Amadores pensam que o conhecimento é poder, profissionais transmitem conhecimento e conselhos;\n Amadores foca em ter razão (estar certos), profissionais focam em obter o melhor resultado;\n Amadores foca no pensamento de primeiro nível, profissionais focam no pensamento de segunda ordem.\n Amadores pensa que bons resultados são os seus próprios resultados, profissionais sabe que bons resultados são o resultado das suas ações;\n Amadores foca em curto prazo, profissionais focam a longo prazo;\n Amadores foca em derrubar outras pessoas, profissionais focam em tornar todos melhores;\n Amadores buscam decisões em conjunto para que não haja uma pessoa responsável caso de errado, profissionais tomam decisões por si e aceitam a responsabilidade;\n Amadores buscam culpados, profissionais aceitam a responsabilidade;\n Amadores aparecem de forma inconsistente, profissionais aparecem todos os dias;\n Amadores vão mais rápido, profissionais vão mais longe;\n Amadores vão com a primeira ideia que vem em sua cabeça, profissionais percebem que a primeira ideia raramente é a melhor;\n Amadores acham que sua ideia não pode ser invalidada, profissionais tem certeza que pode;\n Amadores tem pensamento absoluto, profissionais pensam em probabilidades;\n Amadores pensam que a probabilidade de ter a melhor ideia é alta, profissionais sabem que a probabilidade disso é baixa;\n Amadores pensam que a realidade é o que eles querem ver, profissionais sabem que a realidade é a verdade.\n Amadores pensam que a divergência é ameaça, profissional vê como oportunidade de aprender.\n\n> Existem diversas outras diferenças, mas eles podem efetivamente ser resumidos a duas palavras: medo e realidade\n\nAmadores _acreditam_ que o mundo deve trabalhar da maneira que eles querem, profissionais percebem que eles têm que trabalhar com o mundo como ele é. Amadores estão com medo - com medo de ser _vulnerável_ e _honesto_ consigo mesmos, profissionais sentem que são capazes de lidar com quase qualquer adversidade (são resilientes).\n\n'Qual abordagem você acha que vai produzir melhores resultados?'\n\nMotivo de reflexão:\n\n Em qual circunstâncias você se comporta como amador em vez de profissional?\n* O que lhe segura? Você está preso em tentáculos dos povos que são amadores, quando você deveria esta ao lado dos profissionais?\n\nTradução de: https://fs.blog/2017/08/amateurs-professionals/",
    "type" : "blog",
    "file-path" : "content/blog/diferença-entre-amadores-e-profissionais.md"
  }, {
    "title" : "Chegar ao estado de Flow, para alcançar metas",
    "date" : "2019-11-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "_Compreendendo a Psicologia do Flow_\n\nVocê já se sentiu completamente imerso em uma atividade? Se sim, você pode ter experimentado um estado mental que os psicólogos chama de flow, mas o que é isso? Vamos fazer uma analogia para tentar explicar: imagine que você está fazendo uma corrida Sua atenção está focada nos movimentos do seu corpo, na força dos seus músculos, sua respiração e sensação da rua aos seus pés. Você está vivendo aquele momento, totalmente absorvido pelo ato de correr, você está cansado (tem ciência e sensação de cansaço), mas mal percebe o tempo passar.\n\n> De acordo com o psicólogo Mihaly Csikszentmihalyi, o que você esta vivendo naquele momento é conhecido com flow, um estado de imersão completa em uma atividade. Ele descreve o estado mental de flow como estar completamente envolvido na atividade para seu próprio bem, o tempo voa, cada ação, movimento e pensamento acontece natualmente, como tocar um estrumento, todo seu ser está envolvido, e você está usando suas habilidades ao máximo.\n\nExperiências de flow geralmente é _ativada_ de maneiras distintas para cada pessoa. Alguns podem experimentar o flow, enquanto esta concentrada em um esporte como triathlon, corrida, esqui, tênis, futebol ou dança, outros podem ter essa experiência enquanto envolvido em atividade de pintura, programação, desenho ou escrita. Estes momentos de flow muitas vezes ocorrem quando você está envolvido em uma atividade que você gosta e tem mais aptidão.\n\nQual sensação de estar em flow?\n\nDe acordo com Csíkszentmihályi, há dez fatores que acompanham a experiência do flow. Embora muitos desses componentes possam estar presentes, não é necessário experimentar _todos_ eles para que o fluxo ocorra:\n\n 1. Objetivos extremamente claros, embora desafiadores, sente que esta próximo de atingir\n 2. Forte concentração e extremamente focado\n 3. A _atividade_ é intrinsecamente gratificante (prazer de esta fazendo)\n 4. Sentimentos de serenidade; perda do sentimento de autoconsciência\n 5. Intemporalidade (_adjetivo usado para qualificar algo ou alguém que não é afetado pelo passar do tempo_); uma sensação distorcida de tempo; sentindo-se tão focado no presente que você perde a noção do tempo passar\n 6. Feedback imediato, seu cérebro lhe da constante informação que esta alcançando suas micro metas\n 7. Sabendo que o objetivo é factível; um equilíbrio entre o nível de habilidade perante ao objetivo\n 8. Sentimentos de controle pessoal sobre a situação\n 9. Falta de consciência das necessidades físicas\n10. Foco completo na atividade\n\nComo chegar ao flow\n\nEm seu livro, _Csíkszentmihályi_ explica que o flow é provável ocorrer quando conseguimos enfrentar o objetivo após desconstruir-ló por diversas vezes, assim somos capazes de ter rápidas respostas do momento que já vivemos (mesmo que mentalmente).\n\nUm jogo de xadrez é um bom exemplo de quando um estado de flow ocorre. Durante uma competição, o jogador tem objetivos e auto feedback muito claro, permitindo que seu foco seja 100% no jogo durante o período da partida.\n\nSe você quer alcançar o estado de flow, esse itens pode te ajudar:\n\n Você ter objetivo e plano de ação extremamente claro\n Objetivo que você gosta ou é apaixonado\n Há elementos de desafios\n Você é capaz de subir nível da habilidade (conhecimento) atual\n\nO flow também acontece quando o objetivo esta totalmente envolvida na superação de um desafio que é gerenciável, por isso funciona como um ímã (lhe prende) para aprender novas habilidades e aumentar os desafios, explica _Csíkszentmihályi_.\n\nBenefícios do flow\n\nAlém de tornar as atividades mais agradáveis, o flow também tem uma série de outras vantagens.\n\n O flow pode levar a alta performance (melhor desempenho). Os pesquisadores encontraram que o flow pode subir o desempenho em uma grande variedade de áreas que incluem o ensino, a aprendizagem, aos atletas (esporte) e o lado criativo\n O flow também pode levar ao aprendizado e desenvolvimento de novas habilidades. Como o ato de alcançar o flow indica o domínio substancial de certa habilidade, o indivíduo deve buscar continuamente novos desafios e informações para manter este estado\n\nLeia também\n\n Mindfulness, hacking mental para concentração plena\n Foco e disciplina é a arma a favor dos seus objetivos\n* Por que triathlon? Qual é o seu limite?",
    "type" : "blog",
    "file-path" : "content/blog/chegar-ao-estado-de-flow-para-alcançar-metas-objetivo.md"
  }, {
    "title" : "Mindfulness, hacking mental para concentração plena",
    "date" : "2019-11-05T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "É muito comum, pessoas perguntar quantas horas treino por dia/semana, quando eu falo +- á quantidade surge diversos questionamentos, um deles é _como você aguenta tudo isso?_.\n\nA resposta é ter objetivo extremamente claro e praticar constantemente mindfulness (Atenção Plena): é um estado onde treinamos qualidades de atenção ao momento presente, aprendemos a perceber pensamentos, sensações corporais e emoções no momento que ocorrem, sem reagir de maneira automática ou habitual. Com isso, aprendemos a fazer escolhas mais conscientes e funcionais, influenciando positivamente na maneira como lidamos com os desafios cotidianos.\n\nÉ um dos principais mindhacking que uso para hackear minha mente e focar nos treinos e alcançar meus objetivos.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/mindfulness-hacking-mental-para-concentração-plena.md"
  }, {
    "title" : "Foco e disciplina é a arma a favor dos seus objetivos",
    "date" : "2019-10-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Não sei dizer quantos dias por semana penso em desistir do meu objetivo que me faz sair todos os dias para treinar (domingo a domingo).\n\n\n\nOntem (domingo dia 2019-10-13) não foi diferente, não estava em casa, tinha passado uma noite mal dormida, comi besteira na noite anterior, mesmo assim o relógio despertou as 4 am, desliguei e falei para mim hoje não vou treinar, foda-se e voltei a dormir, após 1h o arrependimento bateu e lá foi eu para mais um dia de treino, em uma estrada que não conhecia, sem vontade de treinar, com pensamento super negativo, sem café da manhã e etc (tudo que geralmente passa pela nossa cabeça quando não estou afim de treinar).\n\nDurante o caminho até a estrada que iria correr passei por diversos ciclistas e todos fazendo muita força, quando passava por eles e olhava no retrovisor do carro estavam dando risada (super feliz por está ali pedalando), tudo para reforçar meu pensamento por que diabos eu estou vindo para cá.\n\nEm fim cheguei no local de treino, fiquei enrolando dentro do carro até que chegou um grupo de ciclista e comecei ficar incomodado por esta dentro do carro.\n\nResolvi sair e começar me arrumar para correr. Por fim sai para correr, os passos não encaixavam, meu pace estava abaixo da planilha (treino que teria que rodar), não conseguia me desconectar, ou seja, não estava fluindo. Até encarar aquela corrida como a única coisa que tinha que fazer, começar pensar sempre em mais 100 metros (geralmente uso essa técnica para +1 km, mas hoje tive que trocar o parâmetro de distância) e reparar na paisagem que tinha a minha frente.\n\n\\#PQP que lugar foda, foi dia de mudar o local do escritório (correr em lugar novo), com ar mais leve e uma sensação diferente de todos as outras corridas que já fiz até hoje. Incrível como nosso cérebro tenta nos deixar na zona de conforto.\n\nTem uma galera que manda mensagem me perguntando como faço para conseguir ter ânimo para treinar todos os dias e seguir com disciplina, a minha resposta sempre será ter objetivo claro, metas de curto, médio e longo prazo (objetivo diário, semanal, mensal, anual e de vida), mas é uma luta diária para conseguir, nada vem fácil em nossas vidas.\n\nÉ uma briga comigo mesmo (psicológica), quer entender o que me chama atenção no Triathlon leia esse blogpost: Por que triathlon? Qual é o seu limite?\n\nLute pelos seus sonhos/objetivos, ninguém disse que será fácil!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/foco-e-disciplina-é-a-arma-a-favor-dos-seus-objetivos.md"
  }, {
    "title" : "Diga mais SIM, coloque foco no que você realmente quer",
    "date" : "2019-08-14T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Durante anos falava para muitas pessoas que deveria dizer mais não, que falar não tinha nada de errado dizer não, que não era simplesmente uma palavra que diria:\n\n- não quero agora\n- não consigo\n- não gosto\n- não estou afim\n- não ...\n\nOu seja, não tinha nada de errado em dizer não, pelo contrario, monstra que você não quer abraçar o mundo e esta focado em seus objetivos.\n\n> Eita, não entendi nada agora! Por que o titulo Diga mais SIM, coloque foco no que você realmente quer?\n\nComo comentei _durante anos falava_ (passado, busco sempre evoluir, a principio para melhor e me forço sair da zona de conforto S2), quando usava isso com afirmação estava passando uma mensagem _subliminar para meu cérebro_ para focar no meu objetivo, isso me gerava esforço desnecessario e uma volta para lembro qual era meu real proposito de dizer NÃO.\n\nHoje digo sim para meu objetivo, com isso falo não para tudo que sai fora do foco! A primeira vista parece ser a mesma coisa né? Essa simples troca de mindset gera menos consumo mental para dizer não, porque deixa a cada não meu SIM ainda mais claro. Como dizer não é um tema complicado para muitas pessoas, sua mente fica tranquila porque esta colocando seu objetivo a frente do não.\n\n#evolua\n\nBlogpost relacionado:\n\n- Porque que triathlon? Qual é seu limite?\n- Life Won’t Wait / A vida não vai esperar\n- Meu 2018 foi ano de muito aprendizado\n- Motivação é pessoal, encontre oque lhe motiva continuar\n- A oportunidade disfarçada de trabalho\n- Férias/2018: Viagem de carro pelo Nordeste em família",
    "type" : "quote",
    "file-path" : "content/quote/2019-08-14-miga-mais-smi-coloque-foco-no-que-voce-realmente-quer.md"
  }, {
    "title" : "Meu treino: reboot metabólico",
    "date" : "2019-08-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Sempre que inicio um novo ciclo gosto de fazer esse reboot para dar um gás e voltar logo ao ritmo de antes. Esse reboot me ajuda a desinchar, perder peso e acelerar o metabolismo.\n\nSão algumas experiência pessoais e passos que sigo (tem me ajudado muito), não tenho nenhum artigo científico para balizar isso.\n\nSe quiser tentar, se liga:\n\n1. Durma melhor. Existem inúmeras pesquisas falando sobre os benefícios do sono. Ajuda na perda de peso e regulação dos hormônios que podem diminuir o metabolismo. Tente aumentar as horas de sono de qualidade.\n1. Aumente a ingestão de águe e _CORTE O ÁLCOOL_ (eu não bebo, mas _fica a dica_). Nem preciso falar da importância da água. Mas é algo que não prestamos muita atenção quando estamos de férias. Beba muita água. Principalmente quem quer perder peso, a água vai ajudar a desinchar e diminuir a vontade de doces. Cortar o álcool é complicado, especialmente por causa dos compromissos sociais KKKKKJKK , mas é por um período pequeno e vale a pena.\n1. Diminua a ingestão de carboidratos, se puder corte o açúcar por um tempo. Vai por mim, eu não acredito nessa história de detox mas parar com o açúcar por um período sempre me ajuda a ter mais foco e prestar mais atenção na dieta.\n1. Inclua treinos de força. A musculação deve fazer parte da rotina de qualquer atleta, mas especialmente nessa período de reboot é importante caprichar nos exercícios resistidos para aumentar o metabolismo.\n1. Capriche nos treinos de tiros. Seja correndo, pedalando ou nadando, nesse período gosto de incluir treinos de alta intensidade e curta duração. Esses treinos tb devem fazer parte da rotina de qualquer atleta, mas gosto de aumentar a frequência deles nessa época.\n\nLhe convido em embarcar nessa comigo!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2019-08-09-meu-treino-reboot-metabolico.md"
  }, {
    "title" : "SPCity Marathon 42KM",
    "date" : "2019-07-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "> Mais uma prova, seguido de mais um textão.\n\nO que dizer dessa prova dura onde a subida castigou (23 de maio)? Não saiu como eu esperava, mas fui minha melhor versão, passei o tempo todo com tosse por causa do resfriado.\n\nO que me chama atenção em prova de longa distância é o psicológico onde precisamos  lidar com a adversidade, manter a resiliência e os pensamentos no lugar... Sem sobra de dúvida nessa prova o meu cérebro trabalhou muito.\n\nQue venha as próximas!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2019-07-28-spcity-maratona-corrida-de-rua.md"
  }, {
    "title" : "Trocando forma de pensar (mudando mindset) de empresário para 'empregado'",
    "date" : "2019-07-07T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Se ainda não me conhece empreendi desde 2011 até junho/2019 (durante esse tempo comentei algumas vezes que nunca mais iria empreender) e resolvi voltar para o mercado de trabalho e não é por motivos que quebrei financeiramente, indo na contramão do _hype_ de startups.\n\nAcredito que surgiu diversas perguntas em sua cabeça ao ler o texto acima, acredite que na minha cabeça foram longos meses (quase 1 ano) refletindo sobre o assunto, colocando no papel os prós e contras, imaginando como seria, como me portaria em algumas situações até que por fim resolvi experimentar um ambiente novo, “desconhecido” e acredito que seja desafiador (pelo menos para mim).\n\nRecomenda à leitura desse blogpost Encerrando ciclos, viva no presente não se paralise pelo passado\n\nComo pensava durante alguns anos?\n\nQuando entrei na área de engenharia de software (desenvolvimento, programação) meus colegas de trabalho me auxiliaram criar um pensamento o de que carreira seria uma escada onde começaríamos como desenvolvedor Júnior (baixa experiência e com muita sede de aprender) até um cargo de executivo (muita experiência e perfil de líder, na época não sabia o que era liderar e chamava de chefe), seguindo uma escada mais ou menos assim:\n\n1. Estagiário\n2. Desenvolvedor Júnior\n3. Desenvolvedor Pleno\n4. Desenvolvedor Sênior\n5. Líder técnico\n6. Gerente de desenvolvimento ou projeto\n7. Gerente da área de tecnologia\n8. Diretor da área de tecnologia\n9. Empresario - big boss, esse tópico surgiu depois de alguns anos trabalhando\n\nConforme o tempo vai passando e vamos ganhando experiência na área técnica começamos perceber que não é uma escadinha e podemos nos manter na área técnica ou gestão - vulgo chamada carreira em Y - dependendo do perfil do profissional, onde cada pessoa senta mais familiaridade (gostar).\n\nPara chegar nesse pensamento tive que me desconstruir diversas vezes e conversar com diversas pessoas para entender o que elas pensavam sobre o assunto, até em um discernimento e conseguir discutir sobre assunto.\n\nEm 2018/2019 palestrei bastante sobre a carreira do engenheiro de software, expondo porque existe especialização academia (por exemplo, MBA) e falando sobre essa tal de carreira em Y.\n\nMesmo depois dessa viagem de desconstrução pessoal o meu pensamento sobre se tornar empresario não mudou, ou seja, uma vez empresario sempre empresario e terei que criar outra empresa caso canse do que estou fazendo.\n\nDurante alguns momentos de meditação voltada para meu lado profissional eu comecei refletir sobre esse assunto, até relacionar meu antigo pensamento com a área de desenvolvimento de software e empreender, surgindo turbilhões de questionamentos:\n\n Por que não posso voltar para o mercado caso eu queria?\n Estou quebrado financeiramente para voltar ao mercado?\n Só voltarei para o mercado caso eu quebrei e não consiga recomeçar?\n Uma vez empresario, sempre empresario?\n O que eu gosto de fazer? O que tenho prazer de fazer?\n ...\n\nComo comentado foi um processo longo para conseguir responder algumas perguntas, mergulhando dentro do meu próprio eu e com muita ajuda de terapia, sempre evoluindo pessoalmente um degrau por vez.\n\nDizem que empreender faz ganhar muito dinheiro, mas gastamos igual ou mais com terapia.\n\nVoltei ser funcionário?\n\nSim e não, meu perfil de empreendedor (fazer o projeto/empresa acontecer) é uma característica pessoal minha, onde não quero mudar (acredito que consigo, mas não quero).\n\nHoje ocupo o cargo de head de engenharia no Jusbrasil que é referência no mercado Jurídico Brasileiro, tocando um projeto que tem tudo para revolucionar a forma que os advogados produzem suas peças.\n\nEm 2014 palestrei muito sobre empreendendo dentro da empresa que você trabalha e mesmo assim eu voltei pensar ao contrário da forma que pensava antes.\n\nO cérebro humano é uma máquina que se adapta a qualquer ambiente e adversidade, treine ele para fazer o que você quer e precise fazer, sempre com o foco em longevidade com uma rotina sustentável e saudável para você.\n\nVocê comentou que voltou ser funcionário e respondeu “sim e não”, como assim?\n\nEstou usando todos meus skills de empreendedor que envolve controle de fluxo de caixa, vontade de fazer, liderança de time, gerenciamento de expectativas e muito mais, para tocar o projeto que estou envolvido.\n\n#evolua",
    "type" : "blog",
    "file-path" : "content/blog/2019-07-07-Trocando-forma-de-pensar-mudando-mindset-de-empreendedor-para-empregado.md"
  }, {
    "title" : "Voltando ter prazer em palestrar",
    "date" : "2019-06-22T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Fazia anos que não palestrava e sentia tesão pelo que eu estava falando, após me processo de perca de peso eu geralmente palestrava porque era convidado, mas descia do palco como um profissional frustrado por não exalar o prazer pelo que eu estava falando.\n\nEssa conferência foi diferente, falei sobre minha carreira de engenheiro de software e ver o pessoal conectado com cada passo que eu dava foi fantástico e extremamente motivador!\n\nBusque fazer o que você realmente gosta de fazer, não olhe para sua carreira profissional apenas para o lado financeiro, faça o que gosta e mova-se para sua profissão pagar o que você merece receber, nos somos bons em arrumar desculpas, não jogue seu tempo fora tentando mudar o mundo e mude o seu mundo\n\n#evolua",
    "type" : "quote",
    "file-path" : "content/quote/2019-06-22-prazer-em-palestrar.md"
  }, {
    "title" : "Por que triathlon? Qual é o seu limite?",
    "date" : "2019-06-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Esporte? O que é isso?\n\n\n\nMeu pai quase foi um jogador de futebol e por ele gostar muito de futebol desde pequeno sempre me incentivou a gostar, mas nunca foi minha cara!\n\nCresci pensando que só existia futebol como esporte e nunca tive curiosidade em nenhum outro tipo de esporte, cá entre nós, por que sair da zona de conforto?\n\nDepois de ganhar muito peso (chegando a 180kg) resolvi começar correr para me desconectar do “dia a dia empreendedor” e durante a corrida pensar em como resolver algum problema que tinha dentro da empresa, porém o tiro saiu pela culatra. Enquanto estava “correndo” (no começo caminhando) não conseguia pensar em nada e esse tempo começou ser importante para mim, era o momento de cuidar da minha saúde mental.\n\nNão sou um corredor rápido, mas o que sempre me chamou atenção na corrida são longas distâncias, principalmente depois que comecei ligar o fato de correr durante muito tempo com luta mental, como mudar minha forma de pensar (mindset) para conseguir correr 10, 15, 21km, ou a distância que você conseguir imaginar? Após a primeira prova de 5km sempre busquei provas com distâncias maiores e sempre lutando contra meu próprio cérebro.\n\nCom o passar do tempo comecei seguir algumas pessoas que julgo correr bem e via que eles praticavam outros esporte também, na real eles praticam triathlon que é composto por 3 modalidades: nadar, pedalar e correr.\n\nNós de tecnologia somos curiosos ao entender como surgiu as coisas, comigo não foi diferente ao olhar para o triathlon, fui buscar como surgiu e acabei achando um esporte lindo, principalmente pela superação de nós mesmos, como faço para passar 12 horas (tem atleta que faz em menos e o limite são 17 horas) em uma prova sem morrer, pô 12 horas é meio-dia, eu reclamava de correr 30 minutos imagina se conseguiria ficar durante 12 horas fazendo uma prova (começar na parte da amanhã e terminar na parte da noite), estou falando de uma prova chamada IRONMAN. Até que por fim comecei treinar para esse negócio e é viciante.\n\nA briga psicológica contra nós mesmo para vencer nossas dores musculares e buscar qual é nosso real limite. Muitas pessoas me perguntam se não sinto:\n\n- dor\n- preguiça\n- vontade de parar, mas sei que é nesse momento que irei me destacar dos outros participantes\n- saudade do que gostava de fazer (balada, festa, trabalhar muito, etc)\n- acordar tarde\n- dormir tarde\n\nLogicamente que sinto dores, para cada sim que damos ele vem repleto de não, ou seja, vou fazer meu primeiro IRONMAN (triathlon, me tornar um homem de ferro), para isso preciso me dedicar aos treinos e focar 100% no que me levará até a prova. Se fui capaz de seguir o treino que o coach (assessoria esportiva) passou para fazer antes da prova, no dia da prova será uma puta diversão seguido de diversos desafios psicológicos e nesse momento devo ser forte para resistir as diversidades com muita resiliência.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2019-06-21-por-que-triathlon.md"
  }, {
    "title" : "Life Won’t Wait / A vida não vai esperar",
    "date" : "2019-05-24T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Nossa vida não irá parar o cronômetro esperando você terminar suas atividades do trabalho para começar ter hábitos saudáveis. Sem desculpa que não temos tempo, está cansado e mais um monte de blablablá, o que esta faltando é equilíbrio no seu dia a dia, trabalhar é extremamente importe e necessário (os boletos não para de chegar né meus amigos(as)), mas cuidarmos da pessoa que mais nos ama é mais importante, sem ela não se consegue fazer mais nada. Mas quem é a pessoa que mais nos ama?\n\nVocê próprio, cuide de sua saúde, pare imediatamente de procrastinar a virada de chave para uma vida onde você tenha controle dos seus passos sendo saudável, equilibrada, sem ansiedade, com exercício fisico, etc.\n\nMova-se para frente, deixe os seus maus hábitos para trás, viva o presente usando o passado como base de aprendizado e mapa para saber onde não voltar!",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2019-05-24-life-wont-wait.md"
  }, {
    "title" : "Formando desenvolvedores de alta performance",
    "date" : "2019-04-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Estou a mais de 1 ano treinando para meu primeiro triathlon (IRONMAN 70.3) e nos últimos 7 meses treinando com time de alta performance que faz triathlon profissionalmente a muitos anos. O ano de 2018 foi um ano de muito aprendizado em uma área que nunca imaginei que entraria, para contextualizar segue o conteúdo abaixo:\n\n\nNovos atletas no time\n\nQuando recebi o convite para fazer parte do time de alta performance (aka senior) eu me vi alguns anos atras entrando no mercado de trabalho como desenvolvedor junior e com muita sede de aprender. Infelizmente não foi tão fácil, eu já vinha treinando por conta propria a alguns meses para o Triathlon (que até então não tinha data), com isso trouxe alguns vícios (por sinal muito errado) para o meu dia a dia de treino com atletas profissionais, venho aprendendo a cada dia que passa a respeitar meus limites, me conhecendo e buscando um pouco mais a cada dia. Nos primeiros dias de treino junto com o time tentei entender ao máximo cada momento do treino, mas era difícil fazer as perguntas certas na hora certa, era tudo muito novo e diferente do que eu estava acostumado treinar, com o passar dos dias eu comecei conseguir fazer algumas perguntas, pois consegui organizar o fluxo de ideias e as dúvidas ficaram mais claras.\n\nNesse time que faço parte é extremamente comum entrar _“novos membros”_, com isso eles tem um processo de onboard bem definido e claro por todos os membros, assim não dependendo só de um membro (o personal training por exemplo) para explicar o que deve ser feito e onde estou errando (julgo o mais importante), assim deixando o feedback em um tempo extremamente curto evitando ao máximo lesões. Como estamos lidando com parte muscular do corpo de uma pessoa que tem que se levar ao limite, qual quer erro não corrigido corretamente trará uma lesão muscular, que em muitos casos levam algumas semanas para se recuperar. Quando acontece lesões em um membro todos os atletas irão _“pagar”_ por esse erro, tendo que diminuir o ritmo para o atleta lesionado se recuperar e conseguir acompanhar novamente o treino. Todos os atletas do time tem objetivos claros e não quer ter impedimento para alcançar seus objetivos, por esse motivo todos os membros se ajuda e corrige uns aos outros.\n\nDeixa eu resumir isso tudo:\n\n Objetivo claro - alta performance em que?\n Disciplina: fazer todos os dias (ser constante), mesmo quando não queremos\n   _não precisa acelerar, basta não parar_\n Pensamento a longo prazo: os grandes saltos vêm vivendo o presente pensando em colher no futuro\n\n> Ninguém segura uma pessoa com foco e motivada\n\n> Passe bom: Te leva a meta  \n> Passe certo: Te leva a e alavanca para aproxima meta\n>\n> _busque fazer passe certo_\n\nCruzando paralelo com time de desenvolvimento de software\n\nApós entender o processo de onboard de novos atletas comecei refletir sobre o onboard de novos membros júniores na área de desenvolvimento, me surgindo alguns questionamentos:\n\n Porque não colocamos os novos desenvolvedores júnior junto com desenvolvedores sênior?\n Quais tarefas passamos para os desenvolvedores júnior quando ele começa?\n Porque não colocamos eles junto em um time que está em todo vapor e sincronizado?\n Como, porque ... diversas perguntas me veio átona\n\nEm meus projetos e empresas eu não colocava desenvolvedores júnior em time que estava entregando achando que ele iria ficar extremamente perdido e coagido por está lidando com desenvolvedores mais experientes onde está com tempo para entregar.\n\nAnalisando agora acho que _sempre_ fiz errado. Se queremos que uma pessoa ganhe skill sem ter que quebrar muito a cabeça (conhecido como “auto de data”), basta colocar essa pessoa para interagir com quem domina o assunto em questão, as pessoas mais experientes ajudará você _cortar_ um enorme caminho. Principalmente em desenvolvimento de software que não é uma ciência exata e experiência conta muito, experiência não é uma coisa que consigamos tirar da cabeça da pessoa X e colocar na pessoa Y, mais podemos diminuir essa barreira quando ambos estão interagindo no dia a dia.\n\nNão basta colocar o desenvolvedor júnior em time que tenha mais experiencia, precisamos ter um processo de onboard bem definido e com todos os membros do time alinhado com o proposito a ser alcançado com novos membros ingressando ao time.",
    "type" : "blog",
    "file-path" : "content/blog/2019-04-15-formando-desenvolvedores-de-alta-performance.md"
  }, {
    "title" : "Meu 2018 foi ano de muito aprendizado",
    "date" : "2018-12-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Já faz alguns anos que sigo em um voo solo, sem trabalhar para uma empresa e sim fazendo a minha empresa acontecer. Em 2018 não foi diferente, sigo com a Nuveo (empresa que trabalha com Inteligência Artificial e Visão Computacional aplicado para automatização de backoffice, fundada em 2015).\nApós alguns anos, foi momento de trazer um Diretor de Tecnologia para fazer parte do trabalho que vinha fazendo, esse momento não é um processo simples, principalmente por ser fundador da empresa e querer sempre o melhor para ela, mas fiz e tenho a certeza que foi o melhor passo tomado para o crescimento e amadurecimento da empresa. Foi um processo intenso de aprendizado pensando no futuro da Nuveo.\n\nRespirando novos ares\n\nAos que não conhece o “Avelino do passado” não sabe que eu tinha 180 kg e que agora estou treinando para meu primeiro triathlon, não vou entra muito nesse tema, tera outros blogposts referente a isso em breve. Quero falar um pouco mais sobre esse tweet:\n\nEssa certeza de querer mudar só veio a tona quando eu tirei um tempo para refletir na minha vida, eu já queria fazer, mas a insegurança não deixava.\n\nMudar a carreira profissional para outra área?\n\nNão estou saindo da área de tecnologia (na real acho que não consigo, pelo menos hoje) e sim levando a sério (profissionalmente) uma responsabilidade de treinar para fazer minha primeira prova de triathlon.\n\nEssa mudança de área me fez “voltar” ser junior e absorver muito conteúdo. Se você quer acelerar seu processo de aprendizado se envolva com profissionais da área que esta estudando, eles lhe ajudara passar por algumas barreiras que você ficaria parado por muito tempo e no final descobriria que é mais simples.\n\nCertamente gerarei conteúdo traçando um paralelo da minha entrada na área do esporte com minha entrada na área de desenvolvimento.\n\nEscrever livro?\n\nComo comentei acima eu era bem grande e encarei o processo de perda de peso a sério e envolvendo esporte como base do processo.\n\n“ […] você deveria escrever um livro sobre seu processo de perca de penso, cara você tinha 180 kg e hoje esta treinando para fazer seu primeiro triathlon (media de 13 horas de prova, onde levara você ao extremo), isso não é normal, puta superação pessoal […] ”\n\nEscutei frases +- assim algumas vezes durante esse ano de 2018 e sempre vinha em minha mente:\n\n- pô, isso que estou fazendo é normal\n- eu escrever um livro?\n- eu não sei escrever\n- eu não sou capaz\n- ... e diversas outras desculpas, mas nunca saía da cabeça e após meu momento de meditação (quando o cérebro esta tranquilo), voltava pensar nisso #WTF #PQ\n\nDurante alguns meses eu vinha rabiscando algumas coisas que acharia importante ter escutado quando tinha 180 kg. Em linhas gerais precisava escutar mais verdades e menos tapinhas nas costas!\n2018 resolvi dar o primeiro passo de querer fazer e encarar como um projeto com começo, meio e fim.\n\nSe tornar atleta?\n\nSinto que estou muito longe de me tornar um atleta, comecei faz poucos anos nessa fase de treinar e profissionalmente tem poucos meses, mas sei que depende apenas de mim para isso se tornar realidade. Vamos deixar os anos dizer se me tornarei atleta ou não, adianto que estou gostando de me superar a cada dia.\n\nHoje tem uma marca financiando meu dia a dia de treino, acredito que só consegui porque estou fazendo por gostar do que estou vivendo e saber aproveitar as oportunidades que vem aparecendo com minha exposição proposital no Instagram, pressão social (se expor publicamente) geralmente funciona para nos cobrar psicologicamente.",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2018-12-28-meu-2018-foi-ano-de-muito-aprendizado.md"
  }, {
    "title" : "Férias/2018: Viagem de carro pelo Nordeste em família",
    "date" : "2018-11-12T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "_“Eu não preciso de férias, trabalho com o que eu gosto, é um hobby o que eu faço”_\n\nEu disse isso por alguns anos em minha vida, até tirar férias e perceber que eu também precisava de férias.\n\n\n\nApós ler o blogpost do Raphael Amorim comecei refletir sobre como seria tirar férias e passar alguns dias vivendo para mim e minha família. Não foi um exercício fácil, nunca tinha feito isso na vida, trabalho profissionalmente a 13 anos e não me recordo ter tirado férias de verdade nesse período, sempre estive na corrida dos ratos (termo usado para um exercício sem fim, auto-destrutivo ou inútil).\n\nTrabalhar por hobby\n\nÉ muito comum profissional da área de tecnologia falar que trabalhamos por hobby, será que isso realmente é (100%) verdade ou usamos essa “desculpa” para ressaltar que trabalhamos com o que gostamos? Em todos os trabalhos, projetos (privado e open source) e etc, temos as coisas legais (o que nos motiva continuar), mas temos os “problemas” também.\n\nMuitas vezes nós brasileiros usamos termos em inglês e em ambiente errado, mas qual o significado da palavra hobby?\n\n> Hobby é uma palavra inglesa frequentemente usada na língua portuguesa e significa passatempo, ou seja, uma atividade que é praticada por prazer nos tempos livres.\n\n> Um hobby não é uma ocupação a tempo inteiro, e tem como objetivo o relaxamento do praticante.\n\n> Normalmente, a prática de um hobby não implica vantagem financeira para a pessoa em questão. Apesar disso, ele pode se transformar em uma tarefa que resulta em benefício financeiro para o praticante. Por exemplo, uma pessoa que tem a pintura como um passatempo, pode vender um dos seus quadros.\n\nNão trabalhamos por hobby e sim fazemos o que gostamos, por esse motivo relacionamos o trabalho com hobby, com o passar do tempo dentro de uma empresa começa chegar “problemas” (isso em qual quer empresa, mesmo aquela que você sonha trabalhar) e nesse momento é comum os desenvolvedores quererem mudar de empresa, soando que o desenvolvedor fica pulando de galho em galho.\n\nO _“pular de galho em galho”_ ocorre pela _“busca da felicidade”_, mas será que existe alguma empresa que não teremos “problemas”?\n\nPlanejamento\n\nComo tudo em minha vida eu “tento” planejar (algumas vezes falho miseravelmente, mas em grande maioria tem dado certo), não é um trabalho muito fácil fazer planejamento de alguma coisa que você nunca fez, principalmente quando envolve viajar de carro com a família (tenho um filho de 5 anos) por mais de 1000 km em estrada e locais que não conhece, logicamente que preciso pensar na segurança da minha família.\n\nCom a ajuda da minha esposa, paramos algumas horas durante muitos dias para fazer o planejamento de lugares que queríamos conhecer do Nordeste. A primeira versão foi uma lista gigante, mas fomos colocando alguns filtros até chegar em um roteiro realmente executável mentalmente, mas lógico que não tínhamos ideia que seria tão cansativo (como foi).\n\nO grande trabalho que vejo no começo do planejamento (principalmente com mais de uma pessoa) é ambos conseguir tirar ideias da cabeça e colocar em um “papel” onde todas as pessoas envolvidas consigam ter visibilidade de todas as ideias e artefatos, para aí sim começar o planejamento de fato. É uma viagem em família (mas poderia ser entre amigos) e temos que colocar a vontade de ambos no planejamento.\n\nUsamos alguns apps para nos ajudar no planejamento da viagem, principalmente o trecho que seria percorrido de carro, conhecer locais no destino e local para passar a noite (dormir):\n\n <https://roadtrippers.com/> - planejamento dos trecho percorrido de carro;\n <https://www.booking.com> - locação de local para ficar (evitamos hotel caros pois queríamos uma experiencia real de cada local);\n <https://www.airbnb.com/> - locação de local para ficar;\n <https://www.tripadvisor.com.br/> - conhecer lugares de um destino planejado;\n <https://foursquare.com/> - conhecer lugares de um destino planejado, principalmente locais para comer;\n <https://www.waze.com/> - Navegação de um destino para outro (GPS);\n <https://www.google.com/maps> - Navegação de um destino para outro (GPS) e locais para abastecer o carro;\n <http://wifimagic.com/> - Senha do WiFi.\n\nPor que Nordeste?\n\nÉ um lugar maravilhoso (_é afirmação após ter vivido mais de 20 dias por lá_), mas existe muito conteúdo falando do Nordeste Brasileiro, principalmente fotos mostrando praias exuberantes. Particularmente eu queria um lugar onde tivesse dificuldade de conectividade com internet, era uma premissa que eu coloquei mentalmente (acabei não expondo isso no planejamento para não deixar a esposa preocupada) para dificultar acesso ao trabalho durante os dias que iria tirar para viver minha família e eu mesmo, o tempo para eu pensar no meu futuro, será que já não esta/estava na hora de encerrar algum ciclo na minha vida?\n\nA PythonBrasil\\[14\\] (conferência de Python em 2018) foi em Natal e aproveitamos para juntar a conferência com alguns dias off (férias que julgava não precisar), então tínhamos o ponto inicial de onde “sairíamos”, Natal.\n\nDestinos\n\n 1. São Paulo: Início da viagem, saída de casa;\n 2. Foz do Iguaçu: Latinoware (conferência);\n 3. São Paulo: Parada com destino a Natal;\n 4. Fortaleza: Parada com destino a Natal;\n 5. Natal: PythonBrasil\\[14\\] (conferência) e local onde encontrei a família;\n 6. Praia de Pipa, Natal: Parada planejada com a família;\n 7. Porto de Galinha, Recife: Parada planejada com a família;\n 8. Maragogi, Alagoas: Parada planejada com a família;\n 9. São Miguel dos Milagres, Alagoas: Parada planejada com a família;\n10. Aracaju: Parada planejada com a família;\n\nVeja no mapa abaixo os pins para ter uma ideia do trajeto que foi percorrido.\n\n{{< googlemaps 1vmr0dHs0fWQ0Q6w_va_G2BYbcCfFsprM >}}\n\nEsse foi o trajeto todo que fiz, as férias começou logo após a PythonBrasil\\[14\\] em Natal (local onde encontrei com a família).\n\nResumo geral\n\nPreciso comentar que o começo não foi fácil me _desconectar_, mas forcei, forcei e forcei, por fim eu “consegui” (pelo menos 1 vez por dia brincava com algum projeto Open Source, estava de férias acho que devemos fazer o que gostamos :D).\n\nEstava vivendo em um ritmo frenético e estava precisando tirar alguns dias para colocar os pensamentos no lugar e viver momentos que nunca tínhamos vivido junto com minha família (bens memoráveis, acredito que isso é a única coisa que levamos desse mundo corrido e agitado).\n\nEsse tempo off-line me fez ter muitas (muitas mesmo) ideias me causando ansiedade no último dia, não sabia como iria conseguir executar todas as ideias que tive, para não entrar em um _burnout_ foi o momento de fazer planejamento de tudo que eu realmente queria fazer (tirar as ideias da cabeça e passar para um _“papel”_)\n\nNotas finais: Precisamos nos desconectar de nosso dia a dia para viver com as pessoas que correm conosco (no meu caso família) todos os dias e acabam me aguentando nos momentos que não é compartilhado em redes sociais (Instagram), geralmente publicamos momentos bons, mas nem tudo é Instagram e analisar se estamos seguindo nossas premissas de vida ou se estamos postergando (empurrando com a barrida) alguma decisão que já deveria ter tomado.\n\nAlgumas fotos\n\n <https://www.instagram.com/p/BpNvLx1DoDk/>\n <https://www.instagram.com/p/BpaEVpwBIbr/>\n <https://www.instagram.com/p/BpgqDxYBDMa/>\n <https://www.instagram.com/p/Bpkww3PgIKw/>\n <https://www.instagram.com/p/BpNvLx1DoDk/>\n <https://www.instagram.com/p/BpsKhU5Bbm8/>",
    "type" : "quote",
    "file-path" : "content/quote/lifestyle/2018-11-12-viagem-de-carro-em-familia-2018.md"
  }, {
    "title" : "A arte de reescrever software",
    "date" : "2018-10-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Lidar com software legado hoje em dia é mais comum do que podemos imaginar, costumo dizer que muitos softwares nascem legado, como assim?\nPara mim software que não tem teste automatizado é legado, não tem como garantir funcionamento de absolutamente nada dentro dele e muitos comportamentos (recursos ou bugs) só irá aparecer com usuários usando constantemente.\n\n\n\nApós alinhamento do que é software legado é comum a empresa (principalmente as com cultura de startup) e desenvolvedores ter que trocar peças do software em pleno o voo, não temos como pousar o avião para fazer manutenção e depois decolar novamente quando a empresa está com clientes usando o software em produção.\nCom isso vem o trabalho do engenheiro de software junto com time para fazer planejamento de trocar peças (componentes, módulos pacotes, serviços ou qual seja o nome que você de para isso) do software com ele no ar.\n\nPlanejamento\n\nNo meu ponto de vista esse trabalho deve ser feito com muito planejamento e pé no chão, só assim conseguimos pensar nos possíveis problemas que possamos ter, mas tenha em mente que não terá como prever todos os possíveis problemas, mesmo passando meses e meses planejando, a única certeza que podemos ter é: ao colocar no ar surgirá imprevistos, bem-vindo a vida de desenvolvimento de software.\n\nEsse é o momento de alinhamento do “problema” e possíveis soluções junto com o time envolvido, tenha certeza que todos os envolvidos entendeu o problema antes de dar o próximo passo de sair vomitando soluções e consequentemente escolher a melhor solução. Se um dos membros não entendeu o problema não deve ignorar, ele não enxergou como um possível problema ou o trabalho de expor o problema não foi claro para todos, essa deve ser a hora de praticar a comunicação entre os membros do time, geralmente não é um trabalho fácil, mantenha sempre a calma, seja objetivo e traga o time de volta ao tema quando começar sair, para mim não existe nível hierárquico para fazer isso, todos devem estar com o mesmo propósito: resolver o “problema”.\n\nEm software usamos um termo chamado baby step (passos de bebê), ou seja, dê o próximo passo após concluir o atual (um de cada vez).\n\nChegando à solução\n\nPara qualquer “problema” existem diversas soluções e isso não é diferente no mundo de software. Lidando com software legado (contexto desse blogpost) temos que ter o equilíbrio do melhor software e da solução que resolve o que estamos buscando resolver.\nDesenvolvedores geralmente quer partir para melhorar software ao nível de software, mas precisamos pesar isso com outras métricas para ver qual é a melhor solução realmente:\n\n Tempo\n Esforço\n Conhecimento (do time, esse é extremamente importante)\n\nMinha escolha sempre será por uma solução que o time consiga dar manutenção e mais de uma pessoa já usou a abordagem sugerida em produção - existe um abismo enorme entre teoria e produção (infelizmente).\n\nEsse é o momento de exercitar o conhecimento do time para escolher qual caminho seguir:\n\n Micro Serviço (REST, RPC ...)\n Fila de processamento\n Serverless\n Serverless + API Gateway\n Módulo, pacote, biblioteca e/ou ...\n ...\n\nComo tudo em minha vida, tento ter mais de uma opção caso a primeira escolhida não funcione, trago essa abordagem para desenvolvimento de software também - mas já tive casos que todas as possíveis soluções não funcional e infelizmente foi momento de jogar a toalha e repensar no negócio, via software estava impossível resolver.\n\nReescrevendo as peças\n\nDado que o time escolheu a melhor solução para o “problema” é momento colocar à teoria discutida em prática, pode ser que a primeira solução não seja possível, estava implícito algum ponto que não tinha visibilidade antes começar, infelizmente em alguns casos (e não por falta de experiência) isso acontece, principalmente quando estamos falando de software legado. Gosto da analogia cavar um buraco na areia, existem diversas ferramentas que pode “adivinhar” o que tem onde vamos cavar, mas se realmente funcionasse 100% (algumas pode chegar muito próximo desse número) não precisaríamos de arquivologista ou outras profissões seguindo essa área de atuação.\n\nDeploy, grande momento de ir para produção\n\nMesmo tudo funcionando extremamente bem em ambiente de teste, homologação ou qualquer nome que você dê, a tendência de ter imprevistos quando colocarmos o software em produção é grande, esteja preparado para ter que lidar com eles.\n\nAlgumas coisas que tento evitar (sempre que possível):\n\n Certifique-se se realmente tudo foi escritório teste e de fato testado por todos envolvidos nos outros ambientes;\n Deploy de sexta, ninguém do time está afim de perder o final de semana em família e/ou suas obrigações pessoais. Mas tem casos que não temos como esperar, planejamento é à alma desse ponto;\n Caso apareça problema evite ser o super-herói e se tranque ao seu mundo para resolver o problema e volte com a “bala de prata”;\n Caso apareça problema evite hacking no servidor de produção, tenha um plano de roll back (voltar para versão anterior) caso necessário;\n Na linha do roll back, mantenha os logs gerados no momento do crash. No calor do momento é sempre um problema lembra desse pequeno/grande detalhe;\n\nDeixe algumas recomendações nos comentários para o pessoal que ler esse blogpost após você.",
    "type" : "blog",
    "file-path" : "content/blog/2018-10-21-a-arte-de-reescrever-software.md"
  }, {
    "title" : "Keeping open source projects - awesome-go",
    "date" : "2018-09-25T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Beginning of any project (especially when we are talking about open source) is extremely entertaining for developer, over the years the fun passes and it is the responsibility to keep your son following the path of it.\n\n\n\n\nHow did the starting awesome-go?\n\nAll projects I started are out of necessity, the awesome-go was no different.\n\nAfter knowing the awesome-python and seeing other awesomes projects I searched for the awesome-go and did not get results. Wanted to do a simple project where he had markdown code with a list of legal projects written in go, this in Jul 6, 2014 with the commit start environment Awesome for Go\n\nAfter many people help the project began to have access and receive contributions. That was the moment I realized I would have to write code to help revise the contributions (dubbed as pull request within GitHub). Maintainers have written test to validate the following patterns within the markdown:\n\n Test alphabetical order\n Test if exist duplicated links\n Test if an entry has description, it must be separated from link with  - \n\nWork that was done manually by the maintainers and the volume of contributions was virtually impossible to revise all.\n\n\nWhat big challenge of maintaining an open source project?\n\nThere are several, but I will talk about what I currently find most complicated (involves very very dedication).\nI always thought the big challenge of keeping project open source would be to write code, but for many years I believe it was wrong. Today I see that the biggest challenge of maintaining project is to create community, train new leaders, write documentation for new contributors understand and to be new covers join the project.\n\nThe awesome-go is no different from other open source projects, just contribute, interact, engage and etc, which will have your space. From now on, I welcome you to the project.\nInterested in contributing, recommends reading:\n\n Contribution Guidelines\n Code of Conduct\n\n\nTop Contributors and Fork Members, these are the contributors (and maintainers) of the project, they that make the awesome-go be busy until today. Here is my heartfelt thanks to all involved.\n\n\nWhat's the focus the project today?\n\nThe focus has not changed (it is the same), we are a list of go packages, categorized and maintained by the community.\n\nLast year I sent e-mail to some current maintainers go language team proposing to move the repository to golang organization to be managed by the core team, after a few email exchanges they responded to me with some problems if the awesome-go was maintained by the golang organization. In a brief summary the awesome-go would go from a list of packages (maintained by the community) to a list of official packages approved by the core team, and that not purpose of the project.\n\n\nWhat's the future of the project?\n\nAs all open source projects the focus is to grow community maintainer, thus bringing new ideas (and diversity) to improve each day the list of packages and agility in reviewing the contributions.\n\nWe need to improve the visibility of the site awesome-go.com on Google (SEO), for this we need people with new ideas and willingness to contribute.\n\nAll the idea to improve the life of the awesome-go project will be very welcome!\n\nStay inside:\n\n Open contributions\n* Problems and/or suggestions",
    "type" : "blog",
    "file-path" : "content/blog/2018-09-25-keeping-open-source-projects-awesome-go.md"
  }, {
    "title" : "Usando iPad Pro como laptop principal",
    "date" : "2018-08-19T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Após ler alguns blogpost sobre usar o iPad como computador principal e conversar com um amigo que trabalha no Google que usa em caso como main laptop, resolvi estudar os apps para iOS que eu teria que usar para atender a minha demanda do dia a dia como gestor e desenvolvedor.\n\nComo sempre a Apple faz um ótimo trabalho nos seus produtos, sempre pensando na simplicidade de uso do seu cliente final, ou seja, isso ajuda o onboard em qualquer dispositivo/software deles. Nem tudo são flores, ao deixar algumas coisas muito óbvias acaba confundindo (no começo) quem vem da experiência de usar um laptop para um iPad, mas acredita que em alguns dias (no meu caso 1 semana) já estava extremamente acostumado com o meu ambiente e clicando com o dele como não houvesse amanhã!\n\nMas é possível desenvolver usando o iPad?\n\nBom vamos lá, deixa eu contextualizar como era meu ambiente de desenvolvimento antes de responder essa pergunta.\n\nEu usava um Macbook de 12’ com a seguinte configuração:\nProcessador: i7\nMemoria: 16GB RAM\nDisco: 512GB ssd\nCor: Ouro Rose (por escolha própria, muitos me questionava pela cor dele, mas eu simplesmente gostei, até o atendente da Apple perguntou se seria para a minha esposa 😕)\nEra um super avião em poder de processamento e extremamente portátil, mas nem tudo é era tão bom como esperado, algumas coisas previstas, mas outras não. Um USB-C, acabei-me acostumando, pois usava a dock station DELL WD15 quando estava em casa para ligar monitor externo (HDMI ou VGA), ethernet, USBs e etc, o problema que vejo é a tela quando estou na rua (fora do home office), ela é meia “mole”, isso acontecia em um MacBook Air 11’ que tive no passado, acredito que isso seja uma feature não bug para Apple.\n\nCom essa máquina eu sempre mantive o meu ambiente de desenvolvimento remoto, isso mesmo, tudo em um servidor conectando via mosh (ssh com menos buffer, leia mais sobre aqui MOSH), a anos não uso IDE para desenvolver software passando com alguns editores que roda em console (sem interface gráfica), VIM durante muitos anos (eis que surgiu o vim-bootstrap) e hoje EMACS (acredito que isso seja assunto para outro blogpost kkkkk).\n\n Dia a dia de desenvolvimento é entorno das seguintes tecnologias:\n\n- Go\n- Python\n- Clojure (quando preciso rodar alguma coisa em JVM)\n- TypeScript (quando preciso mexer em forntend, mas tento correr disso sempre que posso, sorry)\n- Rum (brinquedo que ultimamente não estou com tempo de brincar 😞)\n\nOlhando as tecnologias acima é possível se virar bem sem interface gráfica, Clojure dando um pouco mais de trabalho por causa da JVM (build dá um pouco de trabalho, IDE existe click build 😋), mas é possível.\n\nAgora respondendo a pergunta “é possível desenvolver usando o iPad?\nPara a minha necessidade atual sim, lógico que levou um tempo (julgo anos) até conseguir viver sem uma interface gráfica para desenvolver, hoje eu consigo me virar super bem.\n\n\nPorque escolher o iPad como computador principal?\n\nEscolha pelo iOS como ambiente principal foi após olhar se todos os aplicativos que eu precisava seria possível ter no iPad. O meu dia a dia estava mais em ferramentas office que desenvolvimento de software.\nSou CTO da Nuveo (empresa que trabalha com Inteligência artificial) e o meu dia estava se resumindo em reuniões (texto que foi dito dentro da reunião), detalhamento de história para o time técnico transformar em software, criação de diagrama (forma de expressar ideia em fluxo), desenvolvimento de software (ssh/mosh) e responder muitos emails. Não consigo ficar tão longe de desenvolvimento de software, como leu no tópico anterior eu mantinha o meu ambiente de desenvolvimento remoto, isso tornou (100%) viável a minha ida para um iPad Pro.\n\n\n- Reunião: Existem muitos apps para anotações e muitos deles dá suporte a iPencil (caneta da Apple);\n- Criação de diagrama: iPad, combinado com a iPencil e Apps que existem para esse fim a atividade de criação de diagrama fica extremamente dinâmica e fluida;\n- Desenvolvimento (ssh): Tem algumas clientes ótimos para ssh e mosh, onde não deixa a desejar para openssh cliente em laptop;\n- Ferramentas office (responder email): iOS está muito bem servido para ferramentas de escritório iWorks (Number, Pages, Keynote e etc) e Office 365 (Microsoft Office), cliente de email existem muitos (alguns extremamente completo), cloud store (Dropbox, Google Drive e iCloud).\n\n\nAcessórios\n\nExistem diversos acessórios que ajuda a auxilia no uso diário do iPad, segue abaixo a lista de acessórios que eu usava:\n\n- Smart Keyboard: olhando por vídeo e imagem pensava que seria horrível digitar com ele, sinceramente me surpreendeu e muito, está muito longe para ser o melhor teclado, mas é relativamente confortável digitar\n- iPencil: nunca usei outra “caneta” para iPad ou outro device, na minha opinião é excepcional após aprender manipular ela (no começo fiquei meio perdido)\n- Adaptador Lightning HDMI (monitor externo)\n- Logitech Create Backlit Keyboard Case (substitui pelo Smart Keyboard, não achei muito portátil para carregar, fica muito grande)\n\nExistem muitos acessórios para deixar o iPad mais laptop.\n\n\nApps?\n\n- Blink: Cliente mosh e ssh (super recomendo)\n- SSH Tunnel: Criar tunnel ssh (proxy)\n- OpenVPN: Cliente para VPN\n- 1Password: Não consigo viver sem ele hoje em dia 😄\n- MIHTool: Developer Tools do Browser\n- Safari: Poderia usar o Chrome, mas no iOS não liberar trocar o browser padrão (acredito que isso irá se manter até eles levar um processo)\n- Airmail: Cliente de email\n- ProtonMail: Cliente de email pessoal (criptografado)\n- PivotalTracker: Gestão de tarefa usada na Nuveo\n- Dropbox: O meu “File System”, dado que o iOS não libera acesso no FS do iOS\n- Documents by Readdle: Conecta em diversos Cloud Store\n- Editorial: Editor de markdown (texto) com sync no Dropbox\n- Notability: Editor com suporte a iPencil\n- Telegram: Comunicação pessoal\n- Slack: Ferramenta de chat usado para comunicação interna na Nuveo\n- Lucidchart: Ferramenta de diagrama\n- MindMeister: Ferramenta de mind manager\n- appear.in: Vídeo conferência\n- Google Meet: Vídeo conferência\n- Skype: Vídeo conferência\n- MUDRammer — Cliente MUD (game via telnet)\n\nAcredito que eram esses apps que usava no dia a dia.\n\n\nPara qual uso eu recomendo o iPad?\n\nEsse é um assunto extremamente complicado dado que o iPad Pro não é um hardware barato e sim um hardware de “luxo”.\nPara quem quer um hardware para navegar na internet e utilizar ferramentas offices acredito que seja uma escolha ideal (se não entrarmos em relação do valor).\n\n\nContinuo usando o iPad?\n\nCostumo dizer que ter um iPad Pro é um ambiente de luxo, consegue viver sem ele, mas tenha certeza que como qualquer ferramenta boa ganha dependência extremamente fácil e rápido.\nPassei 2 meses usando diariamente o iPad para todo o tipo de trabalho até ir em cliente onde tive que passar o dia desenvolvendo (via 4G, o cliente não tinha WIFI liberado para terceiro).\nUm dos motivos claros que me fez deixar o uso do iPad (vendi 😞) foi a falta do trackpad (achei extremamente triste isso), acostumei viver clicando na tela, mas particularmente não é para qualquer momento, mouse ainda é mais prático — pelo menos para mim — para o meu filho de 5 anos tenho certeza que ele prefere clicar na tela. “Uso do iPad no colo”, não é muito confortável usar o iPad no colo com o Smart Keyboard (nem Logitech Create Backlit), é possível não pratico.\n\nSinceramente acredito que fiz uma escolha errada, usava uma laptop de 12’ (extremamente portátil) e comprei o iPad Pro de 12.9’ (maior que meu laptop), essa escolha me fez voltar para laptop.\n\nHoje estou usando MacBook Pro de 13 com TouchBar (não consegui acostumar com ele ainda 😞), praticamente o mesmo tamanho e peso do meu iPad Pro de 12.9 com case/keyboard. Sinto falta da praticidade de expressar coisas com iPencil, mas é possível viver sem.\n\n\nAmbiente de desenvolvimento\n\nComo comentei eu conecto em servidor remoto, ou seja, uso Debian Sid e instalo tudo que preciso lá, assim nada fica local na iPad e/ou laptop.\n\n\nOutros blogposts\n\n\nRecomendo ler esse blogpost: Conheça seu ambiente de trabalho",
    "type" : "blog",
    "file-path" : "content/blog/2018-08-19-usando-ipad-pro-como-laptop-principal.md"
  }, {
    "title" : "Motivação é pessoal, encontre oque lhe motiva continuar",
    "date" : "2018-08-13T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Muitas pessoas pergunta-me por estou praticando corrida sendo que existem outros esportes mais “legais” e com mais “adrenalina”! Sempre gostei de ver minha evolução pessoal (isso é uma das coisas que me motiva), a corrida é um esporte que é você, seu cérebro e nada mais, podemos dizer, você e você mesmo(a). Todos os dias que estou me aquecendo para começar correr meu cérebro quer me vencer tentando convencer meu corpo que não vou conseguir chegar ao final, já corro mais de 1 ano (todos os dias) e continua o mesmo sentimento até hoje. O prazer de conseguir chegar no final (vitória) diária é o que me motiva acordar amanhã #5am para meditação e correr, motivação é pessoal, encontre o que lhe motiva continuar, pare de pensar que sua motivação é a mesma que seu amiguinho do Instagram que só pública o lado bonito e positivo da vida, quem gosta de compartilhar as quedas? Tenha certeza que todos cai, mas poucos tem coragem de compartilhar publicamente, compartilhas as quedas podem ajudar outras pessoas não tropeçarem na mesma pedra que você. Não são todos os dias que acordamos bem, mas é todos os dias que saio para correte e alcançar meus objetivos de vida!\n\n#evolua #corrida #academia #glamour #palco #foco #olofotes #atuar #dominesuamente #vida #life #umpassodecadavez #rotina #the5amclub #the5am #mude #planeje #planejamento #vidaatravesdalente #textao",
    "type" : "quote",
    "file-path" : "content/quote/2018-08-13-motivacao-e-pessoal-encontre-oque-lhe-motiva-continuar.md"
  }, {
    "title" : "Realizando sonho de trabalhar full time com Open Source",
    "date" : "2018-06-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "É extremamente comum ver amigos que começam a contribuir com open source quererem arrumar um “emprego” para passar o dia contribuindo com o projeto (em geral, deixando o Github verdinho...). Será que é realmente legal, como muitos imaginam, trabalhar para uma empresa para só contribuir com open source?\n\n\n\nCostumo dizer que contribuir com open source é viciante, faz você passar horas e horas entendendo o projeto que alguém (ou alguma empresa) idealizou, até que chega o momento de mandar o primeiro PR (pull request, patch e etc) e defender sua implementação. Vem a aí a primeira skill que o desenvolvedor (você) precisa evoluir (caso ainda não tenha). Sim estou falando de venda. Não venda de produto e sim da sua ideia (aprender a se comunicar via texto - em geral em inglês) Está aí outro problema, pois texto não passa sentimento. Hoje acho bom, principalmente pensando em uma contribuição, pensar na evolução do software e não levar só o que acreditamos para dentro do software (se você mantém um software open source, esteja aberto às novas ideias/necessidades).\n\nEm um primeiro momento sim, mas como qualquer sonho nem tudo é previsível (principalmente quando você nunca ocupou essa posição antes). A ideia de escrever esse blogpost é expor um cenário que provavelmente você não analisou. Quando estamos apaixonados achamos que o caminho a percorrer é composto de flores.\n\n\nVamos direto ao ponto!\n\nQuando você contribui com qualquer projeto (principalmente open source), dedica algumas horas (dias, meses e até mesmo anos) do seu tempo para entendê-lo e após compreendê-lo, existem duas linhas a seguir:\n\n- - Propor/implementar alguma necessidade que você tem;\n- - Assumir alguma issue proposta por alguém.\n\nOu seja, a escolha (autonomia) está em suas mãos. Esse é o ponto no qual eu quero chegar: autonomia.\n\nMas quando eu estiver dentro de uma empresa será igual?\nEntão, bem provavelmente não. Sabe por quê? Porque você está sendo pago para implementar as necessidades que a empresa tem e não as suas necessidades!\nSe você chegou até esse ponto, isso pode piorar, principalmente se você estiver contribuindo com um grande projeto open source.\n\nJá pensou que a empresa em que você trabalha pode necessitar de um recurso que você não concorda em ter no projeto? E você terá que defender uma ideia que não concorda, pois está sendo pago para isso? Esse é um ponto que muitas pessoas que querem ser pagas para contribuir com open source não pensam e te desafio a pensar o que você faria quando passasse por este cenário (caso queira ocupar uma posição desse tipo).\n\n- O que você faria?\n\nTenha em mente que nada é para sempre e amanhã você pode estar em outra empresa, mas a pessoa que defendeu/propôs/lutou/se expôs (use a palavra que se encaixa no seu mundo) o recurso X, Y e Z foi você e não a empresa que te pagava!\n\nEntão não devo aceitar trabalho para contribuir com open source?\n\nAcredito que surgiu a seguinte duvida: Durante quase todo o texto parece que você (Avelino) apoia o fato de que a pessoa deve fazer aquilo que ela está sendo paga para fazer, mas no último parágrafo parece que você (Avelino) muda de ideia e traz a mensagem de que é o indivíduo que contribui e não a empresa e que deve-se ter cuidado.\n\nNão existe certo ou errado, estou escrevendo esse blogpost para fazer você refletir que ser pago para contribuir com open source pode não ser tão divertido como muitos pensam. Minha dica seria você evoluir os seguintes skills:\n\n- - Venda: não necessariamente vender um produto e sim sua ideia;\n- - Comunicação: nem todos irão abraçar sua ideia (isso é bom não é ruim);\n- - Aprenda a dizer não: costumo dizer que o aprender dizer não vem com a senioridade. Nesse contexto a palavra não expõem que você não concorda com alguma coisa proposta, não que você é contra a pessoa, ou seja, não é uma negação a pessoa e sim ao contexto (nesse caso proposta) a ser seguida;\n- - Aprenda a debater idéias, não convicções;\n- - Aprenda a ouvir: extremamente importante.\n\nPor último e julgo o mais importante você ter ciência é: Open Source é mantido por pessoas\n\nLição aprendida na PythonBrasil[13]",
    "type" : "blog",
    "file-path" : "content/blog/2018-06-15-realizando-sonho-de-receber-para-contribuir-com-opensource.md"
  }, {
    "title" : "A oportunidade disfarçada de trabalho",
    "date" : "2018-05-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "As oportunidades normalmente se apresentam disfarçadas de trabalho árduo, e é por isso que muitos não as reconhecem.\n\nPor Ann Landers",
    "type" : "quote",
    "file-path" : "content/quote/2018-05-28-ann-landers-a-oportunidade-disfarcada-de-trabalho.md"
  }, {
    "title" : "Why is the name of the language, 'Clojure'?",
    "date" : "2018-05-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Many who did not seek the history thinks:\n\nDid you pick the name based on starting with the word closure and replacing the s with j for Java? It seems pretty likely, but it would be nice to have that confirmed.\n\nRich Hickey's response (creator of the Clojure):\n\nThe name was chosen to be unique. I wanted to involve c (c#), l (lisp) and j (java). Once I came up with Clojure, given the pun on closure, the available domains and vast emptiness of the googlespace, it was an easy decision.\n\nWe have strong influence of Lisp, Cand Java languages, well-consolidated languages what trans security for you to use in your projects!\n\n(Understand more about!)\n\nLearn Clojure links\n\n- Clojure by example\n- Clojure from the ground up\n- Brave Clojure - become a better programmer\n- Programming Clojure\n- Clojure Cheatsheet\n- Clojure Guides - getting started\n- About more LISP History (pt-BR sorry)",
    "type" : "quote",
    "file-path" : "content/quote/2018-05-21-why-is-the-name-of-the-language-clojure.md"
  }, {
    "title" : "The 5am club? Just crazy to do it",
    "date" : "2018-05-19T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Have you ever heard of #the5amclub? Do you know how powerful the range of 5 to 8 A.M.?\n\nFew people are willing to wake up at 5 A.M. by choice, but that's exactly what makes the most successful people in the world, the 5am club class, the high achievers.\n\nWho does this madness? Tim Cook (Apple's CEO), Richard Branson (from Virgin), Robert Iger (from Disney), Howard Schultz (from Starbucks) and Benjamin Franklin are some of the people who adhered to this lifestyle.\n\nUnderstand why every day the club wins more fans!",
    "type" : "quote",
    "file-path" : "content/quote/2018-05-19-the-5am-club-just-crazy-to-do-it.md"
  }, {
    "title" : "Acelerar no caminho errado ou desacelerar para chegar onde realmente deve chegar?",
    "date" : "2018-05-16T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "E quando raramente param para refletir sobre a vida, se deparam com um imenso abismo emocional entre elas e as pessoas que lhe são mais caras.\n\nA realidade é que não adianta você acelerar muito, estando no caminho errado. Você só vai chegar mais rápido a lugar algum.\n\nMesmo sendo algo contra intuitivo, desacelerar é justamente o que fará com que você atinja seus objetivos de vida de forma mais rápida.\n\nDesacelerar seus pensamentos te trará clareza de quais realmente são suas prioridades, de quais vícios abandonar, quais pessoas andar, quais decisões tomar.\n\nE à partir desse nível de clareza, naturalmente você terá mais foco. E com foco, seu nível de ansiedade e stress será completamente diferente. E o resultado final?\n\nMais qualidade de vida para você e todos que estão ao seu redor.",
    "type" : "quote",
    "file-path" : "content/quote/2018-05-16-acelerar-no-caminho-errado-ou-desacelerar-para-chegar-onde-realmente-deve-chegar.md"
  }, {
    "title" : "Medo? Lute contra os seus medos e mude seu futuro",
    "date" : "2018-05-13T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Por onde começar? Que tal essa enquete abaixo!\n\n\n\nAVISO: Estou expondo minha opinião pessoal (recomendo considerar como loucura da minha cabeça)\n\nAnalisando o resultado da enquete fica extremamente claro que o medo de muitos é o fracasso, não é nada fácil combater esse medo (mas é necessário para uma evolução pessoal), uma das formas de combater qualquer medo é encarar ele de frente, isso não quer dizer que você não tem medo e sim que esta batendo de frente com você mesmo.\n\nLendo a história de muitos atletas de alta performance muitos tem medo de não conseguir, mas com muito treino (onde geram dores, lesões e etc) o medo de não conseguir passa pois você se preparou para o momento que lhe gera medo. Qual a diferença disso para nossa vida? Nenhuma, tudo é questão de treino, persistência e muita meditação (alinhamento de pensamento).\n\nMedo de empreender?\n\nEmpreender é uma vida de ansiedade e baixa visão (mesmo quando sua empresa esta indo muito bem), ou seja, isso gera uma ansiedade extremamente grande e consequentemente medos.\n\nNa real não é um medo de empreender e sim responsabilidade com todos os colaboradores da empresa.\n\n- E se o cliente não fechar\n- E se o dinheiro acabar\n- E se não funcionar a solução proposta\n- E se não vender\n- E se não acontecer como estamos planejando (essa pode ter certeza que não ira contracena, mas planejamento é importante para minimizar o risco kkkkk)\n- E se ...\n- E se ...\n- E se ...\n\nSe for pensar em todos e se você não sai do lugar e não dá o próximo passo, ou seja, acabará não fazendo. Tenha em mente que só a idea de fazer não irá mudar sua história, agora a ação/execução (o fazer) tem valor e lhe ajudará derrubar o medo do fracasso.\n\nCostumo dizer: Prefiro pedir desculpa por ter feito errado do que pedir desculpa por não fazer, ser proativo lhe ajudará perder o medo.\n\nDê o primeiro passo\n\nMinha dica para todos que tem algum medo é dar o primeiro que os outro passos acontecem naturalmente.\nFaça, execute, saia da zona de conforto e encare de frente seus medos.\n\nEscrever esse quote não foi fácil mas julgo importante todos saber que mesmo por trás de um cara durão (não sei se tão durão assim kkkk) que sempre julgou (mostrou) não ter medo em alguns passos da minha vida eu tive/tenho medo mas faço e controlo minha ansiedade até o resultado chegar.\n\nUm passo de cada vez nos faz alcançar nosso resultado almejado.",
    "type" : "quote",
    "file-path" : "content/quote/2018-05-13-lute-contra-os-seus-medos-e-mude-seu-futuro.md"
  }, {
    "title" : "Dev Na Estrada 151 - Entrevista Thiago Avelino",
    "date" : "2018-04-06T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Escute minha participação no Podcast Dev Na Estrada falando sobre minha carreira profissional:\n\n{{< podcast https://html5-player.libsyn.com/embed/episode/id/6451362/height/90/theme/custom/thumbnail/yes/direction/backward/render-playlist/no/custom-color/3CD52E/ >}}",
    "type" : "blog",
    "file-path" : "content/blog/2018-04-06-dne-151-thiago-avelino.md"
  }, {
    "title" : "Guia de estilo para pacotes Go",
    "date" : "2018-04-02T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Tradução do blogpost Style guideline for Go packages escrito pela @rakyll.\n\n\n\nCódigo organizado em Go é fácil de entender, usar e ler. A falta de organização em código Go é tão crítica quanto as APIs mal projetadas. Os diretórios, nome e a estrutura dos seus pacotes são os primeiros elementos com os quais os utilizadores vêem e interagem.\n\nO objetivo deste blogpost é ajudá-lo(a) com boas práticas comuns para não definir regras ruins. Você deve sempre usar o seu julgamento para escolher a solução mais elegante para sua implementação.\n\n\nPacotes\n\nTodos os códigos Go são organizados em pacotes. Pacote em Go é simplesmente um diretório (pasta) com um ou mais arquivos .go dentro dele. Pacotes Go fornecem isolamento e organização de código semelhante a diretórios e organização de arquivos em um computador.\n\nTodo o código Go vive em um pacote e um pacote é o ponto de entrada para acessar o código Go. Compreender e estabelecer boas práticas em torno de pacotes é importante para escrever um bom pacote (código) Go.\n\n\nOrganização do pacote\n\nVamos começar com sugestões de como você deve organizar código Go e explicar convenções sobre o nome de pacotes Go.\n\nUsar vários arquivos\n\nPacote é um diretório com um ou mais arquivos Go. Sinta-se livre para separar seu código em quantos arquivos achar melhor para a legibilidade ideal.\n\nPor exemplo, o pacote HTTP pode ter sido separado em arquivos diferentes de acordo com o aspecto de handles HTTP. No exemplo a seguir, o pacote HTTP é dividido em alguns arquivos: tipos do cabeçalho e código, tipos de cookie e código, a implementação HTTP real e a documentação do pacote.\n\n``markdown\n- doc.go       // documentação do pacote\n- headers.go   // HTTP tipos de headers e código\n- cookies.go   // HTTP tipos de cookies e código\n- http.go      // HTTP implementação do cliente, request e tipo de response, etc.\n`\n\nManter os tipos próximos\n\nComo regra geral, mantenha os tipos mais próximos de onde eles são usados. Isso tornará mais fácil qualquer contribuição e manutenção (para você ou outra pessoa externa) para encontrar um tipo. Um bom lugar para as estruturas de dados (struct) pode estar no começo do arquivo headers.go.\n\n`bash\n$ cat headers.go\npackage http\n\n// Header represents an HTTP header.\ntype Header struct {...}\n`\n\nA linguagem Go não restrige onde você deve definir os tipos, uma boa prática é manter os tipos na parte superior do arquivo, dentro do pacote que ele faz parte.\n\nOrganização por responsabilidade\n\nUma prática comum de outras linguagens é organizar tipos juntos em um pacote chamado modelos (ou algum nome nessa linha). Em Go, nós organizamos o código por suas responsabilidades funcionais.\n\n`go\npackage models // DON'T DO IT!!!\n\n// User represents a user in the system.\ntype User struct {...}\n`\n\nEm vez de criar um pacote chamado modelos e declarar todos os tipos de entidade lá, um tipo de usuário deve viver em um pacote de camada de serviço.\n\n`go\npackage mngtservice\n\n// User represents a user in the system.\ntype User struct {...}\n\nfunc UsersByQuery(ctx context.Context, q Query) ([]User, Iterator, error)\n\nfunc UserIDByEmail(ctx context.Context, email string) (int64, error)\n`\n\nPensando no godoc\n\nNão é muito facil pensar (usar) Godoc na fase inicial do desenvolvimento da API do seu pacote para ver como seus conceitos serão renderizados no doc. Muitas vezes, essa visualização tem um impacto sobre o projeto (em geral para melhor). Godoc é a forma como os usuários vão consumir um pacote, por isso é extremamente importante ajustar as coisas para torná-las mais acessíveis, tenha certeza que isso melhora a API dos seus pacotes.\n\nExemplos para preencher as lacunas\n\nEm alguns casos, talvez não seja possível fornecer todos os tipos relacionados de um único pacote. Pode ser confuso fazer isso (em uma fase inicial), você pode querer publicar implementações concretas de uma interface comum de pacote separado ou esses tipos podem ser propriedade de um pacote de terceiros. Dê exemplos para ajudar o usuário a descobrir e entender como eles são usados juntos.\n\n`bash\n$ godoc cloud.google.com/go/datastore\nfunc NewClient(ctx context.Context, projectID string, opts ...option.ClientOption) (Client, error)\n...\n`\n\nNewClient trabalha com option.ClientOptions mas não é nem o pacote de armazenamento de informações nem o pacote de opção que exporta todos os tipos de opção.\n\n`bash\n$ godoc google.golang.org/extraoption\nfunc WithCustomValue(v string) option.ClientOption\n...\n`\n\nCaso a API do seu pacote exija que muitos pacotes não padrão sejam importados, é útil adicionar um exemplo Go para mostrar aos usuários código de exemplo.\n\nExemplos é uma ótima maneira de aumentar a visibilidade de um pacote menos descoberto. Por exemplo, para datastore.NewClient pode referenciar o pacote de opção extra.\n\nNão exportar de main\n\nUm identificador pode ser exportado para permitir o acesso a ele de outro pacote.\n\nOs pacotes principais não são importáveis, portanto, exportar identificadores de pacotes principais é desnecessário. Não exporte identificadores de um pacote principal se você estiver construindo o pacote para um binário.\n\nExceções a esta regra podem ser os principais pacotes incorporados um .so, .a ou Go plugin. Em tais casos, código Go pode ser usado a partir de outras linguagens através da funcionalidade exportar CGO e identificadores de exportação são necessários.\n\n\nNome do pacote\n\nO nome do pacote e caminho de importação são ambos identificadores significativos do seu pacote e representam tudo o que o seu pacote contém. Nomear seus pacotes canônicamente melhora não apenas sua qualidade de código, mas principalmente para os usuários do pacote que você esta criando/mantendo.\n\nSomente em minúsculas (lowercase)\n\nOs nomes dos pacotes devem ser minúsculos. Não use snake_case ou camelCase em nomes de pacote. O Go blog tem um guia abrangente sobre nomear pacotes com uma boa variedade de exemplos.\n\nNomes curtos, mas representativos\n\nOs nomes dos pacotes devem ser curtos, mas devem ser exclusivos e representativos. Os usuários do pacote devem ser capazes de entender sua finalidade a partir do nome, sem necessidade de ler documentação (esse trabalho não é nada fácil, mas é possível).\n\nEvite nomes de pacotes demasiado amplos como common e util.\n\n`go\nimport pkgs.org/common // DON'T!!!\n`\n\nEvite nomes duplicados em casos que o usuário precise importar o mesmo pacote.\n\nSe você não pode evitar um nome ruim, é muito provável que haja um problema com sua estrutura geral e organização de código, esse é um grande alerta para repensar do design da sua API.\n\nClaro caminho de importação\n\nEvite expor sua estrutura personalizada de repositório aos usuários. Alinhe bem com as convenções GOPATH. Evite ter src/, pkg/ e etc, no caminho da importação.\n\n`go\ngithub.com/user/repo/src/httputil   // DON'T DO IT, AVOID SRC!!\n\ngithub.com/user/repo/gosrc/httputil // DON'T DO IT, AVOID GOSRC!!\n`\n\nSem plural\n\nEm Go, os nomes dos pacotes não são plurais. Isso é surpreendente para os programadores que vieram de outras linguagens e estão retendo um velho hábito de pluralização de nomes. Não use nome do pacote httputils, mas httputil!\n\n`go\npackage httputils  // DON'T DO IT, USE SINGULAR FORM!!\n`\n\nRenomear deve seguir as mesmas regras\n\nSe você estiver importando mais de um pacote com o mesmo nome, poderá renomear localmente os nomes dos pacotes. Os renomes devem seguir as mesmas regras mencionadas neste blogpost. Não há nenhuma regra sobre que pacote que você deve renomear. Se você está renomeando a biblioteca de pacotes padrão, é bom adicionar um prefixo Go para fazer o nome de auto documento que é Go biblioteca padrão pacote, por exemplo, gourl, goioutil.\n\n`go\nimport (\n\tgourl net/url\n\n\tmyother.com/url\n)\n`\n\nURLs personalizada (vaidade)\n\ngo get suporta a obtenção de pacotes por uma URL que seja diferente da URL do repositório do pacote. Estas URLs são chamadas de URLs personalizadas e exigem que você sirva uma página com meta tags específicas que as ferramentas Go reconhecem. Você pode servir um pacote com um domínio personalizado e um caminho usando URLs personalizadas.\n\nPor exemplo:\n\n`bash\n$ go get cloud.google.com/go/datastore\n`\n\nverifica o código-fonte de https://code.googlesource.com/gocloud bastidores e colocá-lo em seu espaço de trabalho (GOPATH) $GOPATH/src/cloud.google.com/go/datastore.\n\nDado code.googlesource.com/gocloud já está servindo este pacote, seria possível ir buscar o pacote a partir desse URL? A resposta é não, se você impor a URL personalizada.\n\nPara fazer isso, adicione uma instrução import ao pacote. A ferramenta Go rejeitará qualquer importação deste pacote de qualquer outro caminho e exibirá um erro amigável para o usuário. Se você não impor as suas URLs personalizadas, haverá duas cópias do seu pacote que não podem trabalhar em conjunto devido ao namespace diferente.\n\n`go\npackage datastore // import cloud.google.com/go/datastore\n`\n\n\nDocumentação de pacote\n\nDocumente sempre seu pacote. A documentação do pacote é um comentário de nível superior imediatamente anterior à cláusula package. Para pacotes não-principais, godoc sempre começa com Package {PkgName} e segue com uma descrição. Para pacotes principais, a documentação deve explicar o binário.\n\n`go\n// Package ioutil implements some I/O utility functions.\npackage ioutil\n\n// Command gops lists all the processes running on your system.\npackage main\n\n// Sample helloworld demonstrates how to use x.\npackage main\n`\n\nUse doc.go\n\nÀs vezes, os docs do pacote podem ser longos, especialmente quando fornecem detalhes do uso e das diretrizes. Quando isso acontecer mova o pacote godoc para um arquivo doc.go`. (consulte um exemplo de um doc.go.)",
    "type" : "blog",
    "file-path" : "content/blog/2018-04-02-guia-de-estilo-para-pacotes-go.md"
  }, {
    "title" : "Fazer o melhor que podemos na condição que tem - Monja Coen",
    "date" : "2018-03-27T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Esta fazendo o possível ou o melhor? Se você (ou eu) podendo fazer o meu melhor me contato com o possível cairemos em um lugar chamado mediocridade\n\nMedíocre\n\nSignifica mediano, sofrível. É um adjetivo de dois gêneros que qualifica aquele ou aquilo que está na média entre dois termos de comparação , ou seja, que não é bom nem mau, que não é pequeno nem grande etc. Por exemplo: Um livro medíocre.\n\nLembra quando você chegava da escola com o boletim escrito: 8,0 em matemática, 5,5 em português, 4,0 em história… e você dizia: deu pra passar. Deixa, eu toco a minha vida – Isso é mediocridade.\n\nMediocridade é falta de capricho. Capricho é você fazer o teu melhor na condição que você tem.\n\n{{< youtube loLrGMr3FNA >}}\n\nNão arrume desculpas para você mesmo(a), faça sempre o seu melhor. Eu (Avelino) tenho costume de fazer minha auto avaliação na minha meditação diaria e sempre faço uma reclecção se eu fiz o meu melhor pois sempre acho que poderia ser melhor o que foi feito, se você sempre tem esse sentimento fique tranquilo que nos seres humanos estamos sempre em um processo de evolução continua, o que fiz hoje irei fazer muito melhor amanhã.\n\nConheça mais sobre a Monja Coen que é uma pessoa incrível com pensamos e alinhamento mental surpreendente.",
    "type" : "quote",
    "file-path" : "content/quote/2018-03-27-fazer-o-melhor-que-podemos-na-condicao-que-tem.md"
  }, {
    "title" : "Empreendendo em seu local de trabalho",
    "date" : "2018-03-25T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Em 2014 palestrei em alguns evendo falando sobre Empreender em seu local de trabalho, muitas pessoas pensam que empreender é abrir uma empresa (ter CNPJ) e cuidar de questões burocraticas de ter uma empresa (contabilidade, fluxo de caixa e blá blá blá), mas na real o que é empreender?\n\n{{< speakerdeck 9951aee0382e0132d1604297f98471b0 >}}\n\nPorque esse blogpost, após 3 anos de palestra?\n\nTrocando forma de pensar (mudando mindset) de empresário para 'empregado'\n\n\nEmpreendedorismo\n\nEstudo voltado para desenvolvimento de competências e habilidades relacionadas à criação de projetos, processo de iniciativa de implementar novos negócios ou mudanças algo (por exemplo empresa) já existentes. É um termo muito usado no âmbito empresarial e muitas vezes está relacionado com a criação de empresas ou produtos novos, normalmente envolvendo inovações e riscos.\n\nEu costumo dizer que é um modo de pensar e não o ato de criação de empresa.\n\nO empreendedorismo está muito relacionado com a questão de inovação, na qual há determinado objetivo de se criar algo dentro de um setor ou produzir algo novo. Diversos projetos open source nasce de uma necessidade, os criadores e/ou mantenedores teve/tem o modo empreendedor de pensar.",
    "type" : "quote",
    "file-path" : "content/quote/2018-03-19-quote-empreendendo-em-seu-local-de-trabalho.md"
  }, {
    "title" : "História do Lisp, abra os olhos para programação funcional",
    "date" : "2018-02-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Como começou minha paixão por parênteses (ops Lisp)?\n\nTenho uma formação na área de Matemática Aplicada (começa ai a loucura), Lisp foi uma das poucas linguagens de programação que me deparei dentro da academia (eu já programava em Perl profissionalmente e conhecia Python), quando vi aqueles parênteses de cara pensei isso não é para mim (isso é uma loucura de Matemática/Acadêmico que nunca saiu para o mercado de trabalho). Com o passar das aulas eu comecei achar confortável os parênteses (seres humanos acostuma muito rápido com tudo) e comecei achar estranho a forma de pensar para escrever a lógica do software (por exemplo (+ 1 2)). Lisp usa Notação polonesa como forma de expressão, isso foi complicado acostumar, no dia a dia usava uma linguagem de programação normal e dentro da academia funcional (sem saber que era funcional).\n\nCom o tempo comecei pegar gosto pela forma de pensar (funcionalmente) e acabei entrando para um projeto (no mercado, não académico) que usava Common Lisp na sua implementação SBCL (Steel Bank Common Lisp, que é mantido até hoje). Nesse momento eu virei super fã da linguagem e com a forma de lidar com software (de verdade) em produção. A empresa trabalhava com dados estatístico do mercado de Pesquisa Cliníca e LISP foi tomado como linguagem por matemáticos, isso facilitou muito a comunicação entre o time de engenharia e acadêmicos.\n\nComo tudo começou?\n\nÉ um conjunto de linguagem de programação especificada pelo John McCarthy em 1955 saindo sua primeira versão em 1958 (durante um projeto de pesquisa em inteligência artificial) influenciado pelo seu aluno Alonzo Church. A motivação de McCarthy surgiu da idéia de desenvolver uma linguagem algébrica para processamento de listas para trabalho em IA (inteligência artificial). O seu nome vem de LISt Processing (a lista é a estrutura de dados fundamental desta linguagem). Tanto os dados como o programa são representados como listas, o que permite que a linguagem manipule o código fonte como qualquer outro tipo de dados.\n\nNascendo assim o Lisp 1, a versão que realmente foi distribuída por McCarthy e outros do MIT (Massachussets Institute of Tecnology) foi Lisp 1.5 (manual de programadores), assim chamada porque continha várias melhorias no interpretador Lisp 1 original, mas não foi uma grande reestruturação como planejado que fosse ser o Lisp 2.\n\nLinha do tempo de linguagens que segue o dialeto Lisp\n\nVou começar apartir do Lisp 1.5 pois foi o primeiro a ser distribuido.\n\n- Lisp 1.5 (1955 - 1965)/Dialeto - Primeira implementação distribuída por McCarthy e outros do MIT\n- Maclisp (1965 - 1985)/Dialeto - Desenvolvido pelo MIT Project MAC (não relacionado Apple, nem ligado com McCarthy)\n- Interlisp (1970 - 1990)/Dialeto - Desenvolvido pela BBN Tecnologiapara PDP-10 rodando no sistema operacional Tenex, logo após adotado pela máquina Xerox Lisp o InterLisp-D\n- ZetaLisp (1975 - 1995)/Dialeto - denominada Lisp Machine - usado nas máquinas Lisp, descendente direto de Maclisp. Tendo como grande influência o Common Lisp\n- Scheme (1975 - mantido até hoje)/Dialeto - Diferente de Common Lisp, linguagem que usa dialeto Lisp\n- NIL (1975 - 1980)/Dialeto - Sucessor direto do Maclisp, com muitas influências de Scheme. Esta versão do Common Lisp estava disponível para plataformas de grande alcance e foi aceita por muitos como um padrão de fato até a publicação do ANSI Common Lisp (ANSI x3.226-1994).\n- Common Lisp (1980 - mantido até hoje)/Dialeto - aka Common Lisp the Language (a linguagem) – As tentativas e divergência entre ZetaLisp, Spice Lisp, nil, e S-1 Lisp para criar um dialeto sucessora para Maclisp. Common Lisp estava disponível para plataformas de grande alcance e foi aceita por muitos como padrão até a publicação do ANSI Common Lisp (ANSI X 3.226-1994)\n- CCL (1984 - mantido até hoje)/Implementação - baseado no dialeto Common Lisp, antiga MCL\n- T (1985 - mantido até hoje)/Dialeto - Derivado de Scheme escrito por Jonathan A. Rees, Kent M. Pitman e Norman, Adams da Yale University com experiencia de design de linguagem e implementação. Em 1987 foi publicado o livro The T Programming Language: A Dialect of LISP\n- Emacs Lisp (1985 - mantido até hoje)/Dialeto/Implementação - Usado como linguagem de script (configuração) do editor Emacs (mantido pelo projeto GNU)\n- AutoLISP (1985 - mantido até hoje)/Dialeto/Implementação - feito para AutoCAD, rodando nos produtos AutoCAD Map 3D, AutoCAD Architecture e AutoCAD Mechanical\n- OpenLisp (1985 - mantido até hoje)/Dialeto - desenvolvido por Christian Jullie escrito em C e Lisp que deu origem a implementação ISLISP\n- PicoLisp (1985 - mantido até hoje)/Dialeto - Open Sourcepara Linux e outros sistemas compatíveis com POSIX\n- EuLisp (1990 - 2015)/Dialeto - Escopo estático e dinâmico, introduzida para Indústria e Acamia Europeia\n- ISLISP (1990 - mantido até hoje)/Dialeto - feito para International Standard sobre licença de Dominio Público\n- newLISP (1990 - mantido até hoje)/Dialeto - Linguagem Open Source escrita por Lutz Mueller, ditribuída pela licença GPL (GNU General Public License) com fortes influencias de Common Lisp e Scheme\n- Racket (1990 - mantido até hoje)/Dialeto - Multi paradigma que veio da familía Scheme, um de seus objetivos de projeto é servir como uma plataforma para a criação de linguagens, design e implementação. Sua runtime usa JIT\n- GNU Guile (1990 - mantido até hoje)/Implementação - Usado para extensão de sistema para o Projeto GNU, baseado em Scheme\n- SBCL (1999 - mantido até hoje)/Implementação - baseado no dialeto Common Lisp com recurso de alta performance no compilador, suporte a unicode e threading. Nasceu como fork do Carnegie Mellon University Common Lisp por Andrew Carnegie e Andrew Mellon\n- Visual LISP (2000 - mantido até hoje)/Dialeto/Implementação - Antigo AutoLisp após ser comprado pela Autodesk\n- Clojure (2005 - mantido até hoje)/Dialeto/Implementação - começou sendo baseado Common Lisp rodando na JVM (Java Virtual Machine), trazendo retro compatibilidade com todas linguagens que roda na JVM, é possível importar classes Java por exemplo\n- Arc (2005 - mantido até hoje)/Dialeto/Implementação - desenvolvido por Paul Graham) e Robert Morris escrito usando Racket\n- LFE (2005 - mantido até hoje)/Dialeto/Implementação - Lisp Flavored Erlang, implementado em Erlang\n- ACL2 (2005 - mantido até hoje)/Dialeto/Implementação - Criado por Matt Kaufmann e J Strother Moore dentro da University of Texas at Austin\n- Hy (2013 - mantido até hoje)/Dialeto/Implementação - apelido para Hylang, implementado em Python. Nasceu dentro da PyCon 2013 escrito por Paul Tagliamonte\n- Rum (2017 - mantido até hoje)/Dialeto/Implementação - implementado em Go, projeto extremamente novo, veja o github\n\nVeja a timeline visual\n\nNão para por aqui, existe muitas outras derivações...\n\nÉ isso mesmo, Lisp é uma linguagem de programação que tem vários dialetos e implementações, com a ANSI Common Lisp itilizada como o dialeto mais utilizado.\n\nExiste outra linguagem (mais usada que Lisp) o SQL ANSI (American National Standards Institute):\n- PostgreSQL\n- MySQL\n- Oracle\n- Microsoft SQL\n- e outros\n\nTodos tem como dialeto o SQL ANSI mas evoluiu a partir do default.\n\nPor onde começar estudar Lisp?\n\nVamos supor que você gostou da loucura que é as diversas implementações e você quer estudar essa linguagem, por onde você começa?\n\nQual interpretador usar? Eu particularmente gosto do SBCL (particularmente é o que mais tenho usado para desenvolvimento), em produção uso CCL, se você trabalha com alguma tecnologia que roda em JVM vai para Clojure.\n\nSegue alguns links:\n\n- How I got started with Common Lisp in 2017\n- Awesome Lisp\n- CLiki\n- lisp-lang.org\n- The Evolution of Lisp",
    "type" : "blog",
    "file-path" : "content/blog/2018-02-07-lisp-01.md"
  }, {
    "title" : "Conheça seu ambiente de trabalho",
    "date" : "2017-05-03T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Aprender novas tecnologias (nesse caso linguagens de programação) não é um trabalho fácil, vai muito além de conhecer syntax da linguagem. Exige alguns desafios como entender porque a linguagem foi criada (existe), entender o eco sistema, como fazer deploy, como gerenciar ambiente de produção e etc.\n\n\n\nPensando nessa introdução vou falar um pouco sobre conhecer o seu ambiente de trabalho antes de conhecer novas tecnologias (linguagens), é muito comum ver desenvolvedores querer usar sempre o que existe de mais novo no mercado (linguagem, framework, plugin, editor e etc) sem pensar no time de desenvolvimento envolvido, mas sera que isso realmente é a melhor coisa a se fazer para empresa que você trabalha? O nível de complexidade são diferente para pessoas, é extremamente comum ver um desenvolvedor (geralmente auto de data) aprender novas tecnologias muito rápido, mas nem todos são assim. Um dos trabalhos de ser CTO é saber dosar a dose do remédio para que todos os desenvolvedores esteja sempre na mesma página, isso envolve dizer alguns não momentâneos (não é fácil esse papel, mas é extremamente necessário).\n\nConhecer seu editor\n\nÉ primordial você conhecer o editor que você trabalha, não adianta você querer usar o editor que esta em hype para a tecnologia X, use o que você realmente sabe usar. Principalmente na área de desenvolvimento de software muitos desenvolvedores fala de Emacs e Vim, você realmente precisa usar esses editores? Minha opinião é que você conheça, pois é importante conhece como outros desenvolvedores trabalha, mas leve isso como um novo caso de estudo não leve em paralelo com o estudo sobre a tecnologia que esta aprendendo, tenha foco no que você quer aprender, tempos tempo para aprender muita coisa na vida, basta ter paciência, perseverança e foco nos objetivos.\n\nPontos importantes para você conhecer do seu editor:\n- Teclas de atalhos: com o passar do tempo você percebe que seu dia começa ficar mais produtivo quando começa largar a dependência do mouse;\n- Uso de busca em código (não se prenda dentro do editor, conheça como fazer usando bash também);\n- Trabalhar com mais de um projeto na mesma janela do Editor (Hoje é extremamente comum dividir o que é frontend e backend, trabalhar com micros serviço e etc, com esse cenário sera necessário você se adaptar em trabalhar com mais de um projeto aberto pois você precisa implementar e/ou corrigir código em mais de um projeto), as maioria dos editores de hoje em dia lhe da suporte a isso, fique tranquilo;\n- Conhecer configuração do seu editor, como colocar um plugin novo, como configurar uma linguagem nova e etc.\n\n> Usei durante muitos anos TextMate até me dedicar a aprender VIM (sim, parei de estudar durante 6 mês outras tecnologias e me voltei para o estudo do VIM), isso me fez aprender muito mas é uma escolha, o que você quer aprender? X ou Y? Depois de anos usando VIM resolvi aprender usar Emacs e já estou a 2 anos usando ele como editor principal, ou seja, mudamos de opniões e temos disponibilidade de conhecer coisas novas.\n\nFormas de debugar seu software\n\nSaber uma linguagem de programação nova não basta saber a syntax e sim quais ferramentas ela lhe traz para debugar o software que esta desenvolvendo, seja print, breakpoint, gdb, pdb ou qual quer outra forma. Como desenvolvedor é extremamente importante software ser capaz de achar bugs dentro do software que você esta desenvolvendo ou dando manutenção (desenvolvido por outro desenvolvedor), se você não estudar a fundo como debugar software na sua linguagem você tera alguns problemas para achar o bug que seu software pode ter.\n\nLogs, ambiente de produção precisa ser rastreável\n\nAntes de falar de logs você precisa ter em mente as principais diferença de log e print.\n\nConhecer uma linguagem de programação nova é necessário saber como ela se comporta em produção (falando mais uma vez, não é só saber syntax), logar eventos do seu software é extremamente importante, colocar cor para identificar evento é muito importante para você não perder horas tendo que analisar um log, ou até mesmo jogar os logs coletados fora pois esta impossível de se fazer analise (infelizmente já vi mais de uma vez isso acontecendo).\n\n\nPratique (treine)\n\nTodos atleta de alta performance precisa praticar (exaustivamente) para ficar bom o suficiente para assim competir. Em desenvolvimento de software não é diferente, você precisa praticar para conseguir desenvolver software sem ficar pensando qual a teclada de atalho no meu editor mesmo?, qual o nome daquele pacote que faz XYZ mesmo? e etc. Se você tiver que ficar pensando nessas coisas como seu cérebro tem espaço pra saber qual o problema que você tem que resolver, pensar na melhor maneira da sua arquitetura? Não tem como pensar nessas coisas pois seu cérebro está concentrado em entender seu eco sistema e não resolver o problema, por isso devemos ter o eco sistema em nossa mente para ai sim depois pensar na solução do problema.\nQuanto melhor você conhecer suas ferramentas melhor você será como desenvolvedor. Uma forma que eu faço para praticar é contribuir com projetos open source, desenvolver não é apenas escrever código e contribuição open source envolve mais relacionamento humana (remoto que é mais difícil ainda) do que código.\n\n> Se você não é bom em falar com pessoal é importante aprender by JavaMan\n\n\nConsiderações finais\n\nEntenda seu ambiente de trabalho, você precisa dominar seu eco sistema para performar mais no seu dia a dia, deixe ele tão simples para o seu cérebro para você não precisar pensar mais nele. Trabalhe com uma tecnologia que lhe deixe feliz e faça com ela o que você realmente precisa fazer, não se engane buscando desculpas dentro de si mesmo para lhe justificar o que esta fazendo (aprendendo X ou Y). Mantenha seu foco em estudos que lhe traz evolução profissional e/ou pessoal.",
    "type" : "blog",
    "file-path" : "content/blog/2017-05-03-conheca-seu-ambiente-de-trabalho.md"
  }, {
    "title" : "Qual o glamour em ser CEO?",
    "date" : "2017-03-04T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Antes de entrar no assunto do titulo vou contextualizar o porque estou escrevendo esse blogpost.\n\nEu (Avelino) a anos acompanho minha rede de contato no LinkedIn e via que muitas pessoas estava como (ou se tornou à pouco tempo) CEO (Chief Executive Officer, que significa Diretor Executivo) de empresa, isso me surgiu curiosidade em saber qual empresa essas pessoas tinham se tornado CEO, para minha surpresa a maioria tinha se tornado CEO de uma empresa e continuava trabalhando em outra empresa, muitas sendo assalariado.\n\nCom isso surgiu algumas dúvidas dentro da minha cabeça:\n\n- Como ser Diretor Executivo de uma empresa e ocupar um cargo em outra empresa?\n- “Como ter tempo para ser Diretor Executivo e ocupar um cargo em outra empresa?\n- Como fazer relacionamento com sociedade, acionistas, sócios, funcionários, clientes, governo e etc?\n\nAnalisando esse comportamento eu acho que seria interessante compartilhar meu pensamento sobre o falso glamour de empreender e ser CEO.\n\n\nO que é CEO e qual seu papel?\n\nCEO é a sigla para Chief Executive Officer, que significa Diretor Executivo. É o cargo de mais alto nível a ser ocupado em uma companhia, o responsável pelo gerenciamento de toda a organização.\n\nO seu papel é, além de aplicar as decisões na prática ser aquele que lidera as discussões, promove novas maneiras de pensar e que é o comunicador por excelência de uma organização. É também sua função trabalhar a relação com a imprensa e com tudo que envolva a companhia, mas que aconteça fora dela.\n\nO CEO, no entanto, não tem passe livre (você acha que vai colocar o seu salário de R$ 70.00,00 por ser CEO?) para fazer o que quiser. Ele executa as decisões, mas responde diretamente ao conjunto de diretores da empresa. Na maior parte das companhias, existe um diretor que supervisiona o trabalho do CEO (pensando em grandes companhia), a quem o executivo normalmente se dirige preferencialmente.\n\n\nGlamour\n\nGlamour tem sua origem na palavra Grammar, e significa uma qualidade extraordinária em um determinado indivíduo, fazendo com que ele pareça muito atraente.\n\n\n\nTrazendo o termo Glamour para dentro do contexto do blogpost, estamos falando de uma pessoa que tem qualidade extraordinária de se relacionar com sociedade, acionistas, sócios, funcionários, clientes, governo e etc, qual quer pessoa é apta a ter esse perfil? Respondendo esse questionamento eu diria que Sim, mas precisa de experiência e isso só vem com o tempo.\n\n\nMeu caso em particular\n\nPara quem não me conhece sou CTO (e fundador) da Nuveo (nuvem inteligente que revolucionará a forma como as pessoas guardam, utilizam e encontram informações) fundada em 2015. Após passar por uma crise em uma das empresas que eu tinha resolvi tirar algumas semana para pensar como sair do buraco que estava, depois de alguns dias pensando como resolver os problemas financeiros (mas nunca pensando a curto prazo e sim a logo prazo) cheguei na ideia base da Nuveo.\n\nEu sei que não tenho (e não quero ter) perfil para ser CEO de uma companhia, dado esse cenário liguei para o atual CEO da Nuveo (José Flavio Pereira) comentando a ideia e como imaginaria monetizar (lógico que essa ideia mudou depois de alguns meses pois percebemos que não era possível tracionar no mercado e muito menos escalar), Flavio me pediu alguns minutos para pensar e iria me retornar a ligação. Aproximadamente 30 minutos depois, ele me retorna com duas pessoas querendo investir na empresa (que nem tinha nascido), ou seja, eu tinha achado o CEO da Nuveo (bastava ele aceitar), logicamente ele aceitou e segue na empreitada até hoje.\n\n\nResponda para você mesmo\n\n\n\n- O que adiantaria assumir o cargo de CEO sendo que não tenho perfil?\n- Ou você quer viver de aparencia em ser chamado de CEO?\n- O que lhe motiva continuar empreendendo?\n- Quantas vezes você já pensou em desistir?\n\n\nEmpreender é viver no risco, precisamos minimizar ao máximo nosso risco.",
    "type" : "blog",
    "file-path" : "content/blog/2017-03-04-qual-o-glamour-em-ser-ceo.md"
  }, {
    "title" : "O que é responsabilidade?",
    "date" : "2016-11-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Responder por suas ações e consequências dos seus atos!\n\nSe você não pode responder pela ação que você toma volte pensar no que você anda fazendo.  \nErrar é humano, passar a mão na cabeça de quem erra e lidar como nada tivesse acontecido, é justificar o erro como um acerto.\n\nhttps://www.facebook.com/avelino.profile/posts/10154545252728726",
    "type" : "quote",
    "file-path" : "content/quote/o-que-é-responsabilidade.md"
  }, {
    "title" : "Eu nunca mais vou empreender",
    "date" : "2015-06-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Para quem não me conhece eu tive uma startup durante um tempo e ela foi comprada por uma empresa de fora do Brasil. Logo após a venda da startup eu prometi para mim mesmo que nunca mais empreenderia, sim isso foi um comentário que fiz em um dos meus momentos de reflexão e nunca comentei com ninguém até então.\n\nPorque eu prometi isso para mim?\n\nEmpreender não é um processo simples, não existe mar de rosas no caminho do empreendedor e como tudo temos altas e baixas (e por sinal mais baixa do que alta).\nEu fui sócio do Christiano Anderson durante um tempo e ele foi e ainda é uma inspiração para mim como desenvolvedor e empreendedor, passava horas e horas tomando cerveja com ele entendendo algumas tomadas de decisão na vida dele e isso me fez ter ele como uma referência (e por sinal uma ótima referência).\nVoltando ao motivo, antes de vender à startup meu filho tinha nascido e empreender com uma criança recém-nascida foi um processo complicado, esposa precisando de atenção (mais do que o comum) e eu tendo que desenvolver solução para melhor atender os clientes, nessa fase logicamente que foi uma fase de baixa (poucos clientes). Como em muitos casos não tínhamos planejado ter filho, mas que venha com saúde.\n\n\nÁ volta para o mercado de trabalho!\n\nQuando voltei para o mercado de trabalho queria ter estabilidade dentro da empresa e com isso aceitei algumas condições de trabalho não muito favorável (mas condições que muitas pessoas que mora em São Paulo – Capital aceita), eu andava media de 42 km para ate o escritório, sim 84 km por dia dentro de uma máquina de 4 rodas (chamada carro) e fazia papel de gerente de projeto (para quem não sabe eu tinha certificado PMP, que venceu em 2014 e não tenho a mínima vontade de renovar). Meu dia a dia era mandar e-mail e dar prazo para projeto, sei que isso na área de tecnologia não é muito fácil (mas é o que tem para hoje).\nChegava em casa extremamente cansado por ter trabalhado o dia todo e consequentemente ter participado do trânsito de uma megalópole (em São Paulo, você não pega transito e sim participa, é muitas horas para falar que pegou transito).\nLogicamente que não fiquei muito tempo nessa vida e resolvi procurar outra oportunidade e fui trabalhar home office (remoto) como desenvolvedor. Agora sim cheguei onde eu quero, trabalhando de casa, vendo meu filho crescer, ate ir para PythonBrasil[10] e passar algumas horas conversando com o Henrique Basto que me fez algumas perguntas que o Renzo e Bruno Rocha tinha feito a 1 ano atrás e eu ainda não sabia responder.\n\n\nA volta para os empreendedorismos…\n\nPorque você trabalha para os outros ainda? Você não consegue viver da renda do samba (site de conteúdo adulto, link para +18)?\n\nIsso fez eu refletir alguns meses e juntar com uma grande vontade que tinha que era sair da Capital e ir morar no interior. Após convence a esposa foi hora de procurar cidade e casa. Lembrei do Cadu que tinha comentado e convidado de eu de vir morar no Vale do Paraíba quando estava trabalhando remoto. Escolhi uma cidade tranquila próximo de SJC para morar com minha família (Caçapava, e viva a Taiada).\n\nSim vamos viver de samba, após 1 mês morando no Vale e empreendendo, o samba me fez sambar, a empresa que mantinha o fluxo do caixa do samba resolveu aplicar algumas regras, que fez o samba não consegui sacar o dinheiro que estava rendendo, sem eu pensar estava novamente empreendendo.\n\nApós isso acontecer, comecei pensar que tinha feito a pior escolha da minha vida em ter saído da Capital e vindo morar no Vale, eu não tinha ligado o nome Vale do Paraíba com Vale do Silício. Sim o Vale do Paraíba respira empreendedorismo, principalmente dentro do Parque Tecnológico de SJC. Onde fez eu retomar meu espírito empreendedor e começa novamente empreender.\n\nHoje posso afirma que empreender é viver novas experiências todos os dias e tirar energia de onde você meno espera.\n\nDevo muito (mas muito) ao Cadu e Nando por algumas horas de bate papo sobre como eles fazem as coisas acontecer dentro da ZNC e experiência de vida empreendedora.",
    "type" : "blog",
    "file-path" : "content/blog/2015-06-15-nunca-mais-vou-empreender.md"
  }, {
    "title" : "Cron dentro do Django com Celery",
    "date" : "2015-03-30T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Ontem na parte da noite conversando com um conhecido ele falou que estava usando em um projeto o Celery, como ainda não conhecia vamos estudar este projeto. Gostei da forma que ele trabalha e como ele integra com o Django. | Tenho em um projeto uma fila de processamento só que foi desenvolvido por mim e não tem todos os recursos que o Celery tem.\n\nVou explicar como usar o Celery com o Django em um exemplo simples, e como sempre basta usar a criatividade para desenvolver a sua necessidade.\n\nPrimeiramente temos que instalar dois pacotes Python para que possamos trabalhar com o Celery no Django, o django-celery e ghettoq. Caso tenhamos o easy_install instalado basta instalar os pacotes da seguinte forma:\n\n``shell\neasy_install django-celery\neasy_install ghettoq\n`\n\nCaso não tenha o easy_install precisamos instalar:\n\n`shell\ncd /usr/src/\ngit clone http://github.com/ask/django-celery.git\ncd django-celery\npython setup.py build\npython setup.py install\ncd ..\ngit clone http://github.com/ask/ghettoq\ncd ghettoq\npython setup.py build\npython setup.py install\n`\n\nApós instalar vamos criar um projeto para que possamos trabalhar com o Celery nele.\n\n`shell\ndjango-admin.py startproject celerytest\ncd celerytest\n`\n\nVamos editar o settings.py:\n\n`python\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': 'test',\n    }\n}\n...\nCARROT_BACKEND = ghettoq.taproot.Database\nINSTALLED_APPS = (\n    ...\n    'djcelery',\n    'ghettoq',\n)\n`\n\nApós declarar qual biblioteca o projeto em Django vai carregar podemos sincronizar o nosso database:\n\n`shell\npython manage.py syncdb\n`\n\nTemos que criar um arquivo chamado tasks.py, esse arquivo trabalha como o models de uma aplicação:\n\n`python\nfrom celery.task.schedules import crontab\nfrom celery.decorators import periodic_task\n\nthis will run every minute, see http://celeryproject.org/docs/reference/celery.task.schedules.html#celery.task.schedules.crontab\n@periodic_task(run_every=crontab(hour=, minute=, day_of_week=*))\ndef test():\n    print Tarefa de teste...\n`\n\nAgora temos que dar start em nosso daemon Celery:\n\n`shell\npython manage.py celeryd -v 2 -B -s celery -E -l INFO\n2010-10-19 05:34:44,215: WARNING/MainProcess] celery@program-8 v2.1.1 is starting.\n[2010-10-19 05:34:44,216: WARNING/MainProcess] /usr/local/lib/python2.6/dist-packages/celery-2.1.1-py2.6.egg/celery/apps/\n    worker.py:105: UserWarning: Running celeryd with superuser privileges is not encouraged!\n  Running celeryd with superuser privileges is not encouraged!)\n[2010-10-19 05:34:44,216: WARNING/MainProcess] /usr/local/lib/python2.6/dist-packages/celery-2.1.1-py2.6.egg/celery/apps/\n    worker.py:108: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in a production environment!\n  warnings.warn(Using settings.DEBUG leads to a memory leak, \n[2010-10-19 05:34:44,222: WARNING/MainProcess]\nConfiguration -&gt;\n    . broker -&gt; ghettoq.taproot.Database://guest@localhost/\n    . queues -&gt;\n        . celery -&gt; exchange:celery (direct) binding:celery\n    . concurrency -&gt; 2\n    . loader -&gt; djcelery.loaders.DjangoLoader\n    . logfile -&gt; [stderr]@INFO\n    . events -&gt; ON\n    . beat -&gt; ON\n    . tasks -&gt;\n . celerytest.lol.tasks.test\n[2010-10-19 05:34:44,238: INFO/PoolWorker-2] child process calling self.run()\n[2010-10-19 05:34:44,239: INFO/PoolWorker-3] child process calling self.run()\n[2010-10-19 05:34:44,241: WARNING/MainProcess] celery@program-8 has started.\n[2010-10-19 05:34:44,241: INFO/Beat] child process calling self.run()\n[2010-10-19 05:34:44,241: INFO/Beat] Celerybeat: Starting...\n[2010-10-19 05:35:00,537: INFO/MainProcess] Got task from broker: celerytest.lol.tasks.test[22d15af7-8fe9-4acd-bdde-06265004eb50]\n[2010-10-19 05:35:00,760: WARNING/PoolWorker-3] firing test task\n[2010-10-19 05:35:01,088: INFO/MainProcess] Task celerytest.lol.tasks.test[22d15af7-8fe9-4acd-bdde-06265004eb50] processed: None\n``\n\nPronto ele esta rodando.\n\nO Celery é um projeto muito bom só que ainda estamos enfrentando alguns bugs com processos pesado o pior que ele para de processar e não esta dando nem um retorno, por isso antes colocar em produção teste sua aplicação onde o Celery vai rodar.",
    "type" : "blog",
    "file-path" : "content/blog/2010-10-19-cron-dentro-do-django-com-celery.md"
  }, {
    "title" : "Church Vim",
    "date" : "2015-03-30T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Vim was originally an extensible text editor written by Bram Moolenaar, but it became a way of life and a religion. To join the Church of Vim, you need only pronounce the Confession of the Faith:\n\n    There is no system but GNU, and Linux is one of its kernels.\n\nSainthood in the Church of Vim requires living a life of purity-but in the Church of Vim, this does not require celibacy (a sigh of relief is heard). Being holy in our church means exorcizing whatever evil, proprietary operating systems have possessed computers that are under your control, or set up for your regular use; installing a holy (i.e., wholly) free operating system (GNU/Linux is a good choice); and using and installing only free software with and on the system. Note that tablets and mobile phones are computers and this vow includes them.\n\nJoin the Church of Vim, and you too can be a saint!\n\n People sometimes ask if St IGNUcius is wearing an old computer disk platter. That is no computer disk, that is my halo — but it was a disk platter in a former life. No information is available about what kind of computer it came from or what data was stored on it. However, you can rest assured that no non-free software is readable from it today.\n\nIn addition to saints, the Church of Vim also has a hymn - the Free Software Song. (No gods yet, though.) Hear the song sung by Saint IGNUcius himself.\n\nSome of the early epistles of the Church of Vim were collected years ago before the establishment of sainthood.\n\nSaint IGNUcius says: Some people don't realize that Saint IGNUcius is Saint IGNUcius's way of not taking himself too seriously. Therefore,\n\n    Warning: taking the Church of Vim (or any church) too seriously may be hazardous to your health.\n\n\nInspired by St IGNUcius",
    "type" : "blog",
    "file-path" : "content/blog/church-vim.md"
  }, {
    "title" : "Castalio - Episódio 63: Thiago Avelino - vim-bootstrap e BeerBlogging",
    "date" : "2015-02-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Escute minha participação no Castalio Podcast falando sobre vim-bootstrap e BeerBlogging:\n\n{{< podcast https://archive.org/embed/castalio-podcast-63 >}}",
    "type" : "blog",
    "file-path" : "content/blog/2015-02-15-castalio-podcast-episodio-63-thiago-avelino-vimbootstrap-beerblogging.md"
  }, {
    "title" : "Encerrando Ciclos, viva no presente, não se paralise pelo passado",
    "date" : "2015-02-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Nós da área de tecnologia passamos muito por encerramento de ciclos, resolvi escrever um blogpost não técnico para retratar alguns pontos importantes na hora de fecharmos nossos ciclos. Não estou escrevendo uma ciência exata, acho extremamente importante após ler o blogpost você pare para pensar o que acha certo ou errado, e sinta-se livre para comentar.\n\nSempre é preciso saber quando uma etapa chega ao final. Se insistirmos em permanecer nela mais do que o tempo necessário, perdemos a alegria e o sentido das outras etapas que precisamos viver. Encerrando ciclos, fechando portas, terminando capítulos - não importa o nome que damos, o que importa é deixar no passado os momentos da vida que já se acabaram.\n\n- Foi despedido do trabalho? Terminou uma relação?\n- Deixou a casa dos pais? Partiu para viver em outro país?\n- A amizade tão longamente cultivada desapareceu sem explicações?\n\nVocê pode passar muito tempo se perguntando por que isso aconteceu. Pode dizer para si mesmo que não dará mais um passo enquanto não entender as razões que levaram certas coisas, que eram tão importantes e sólidas em sua vida, serem subitamente transformadas em pó. Mas tal atitude será um desgaste imenso para todos: seus pais, seu marido ou sua esposa, seus amigos, seus filhos, sua irmã, todos estarão encerrando capítulos, virando a folha, seguindo adiante, e todos sofrerão ao ver que você está parado.\n\nNinguém pode estar ao mesmo tempo no presente e no passado, nem mesmo quando tentamos entender as coisas que acontecem conosco. O que passou não voltará: não podemos ser eternamente meninos, adolescentes tardios, filhos que se sentem culpados ou rancorosos com os pais, amantes que revivem noite e dia uma ligação com quem já foi embora e não tem a menor intenção de voltar.\n\nAs coisas passam, e o melhor que fazemos é deixar que elas realmente possam ir embora. Por isso é tão importante (por mais doloroso que seja!) destruir recordações, mudar de casa, dar muitas coisas para orfanatos, vender ou doar os livros que tem. Tudo neste mundo visível é uma manifestação do mundo invisível, do que está acontecendo em nosso coração - e o desfazer-se de certas lembranças significa também abrir espaço para que outras tomem o seu lugar.\n\nDeixar ir embora. Soltar. Desprender-se.\nNinguém está jogando nesta vida com cartas marcadas, portanto às vezes ganhamos, e às vezes perdemos. Não espere que devolvam algo, não espere que reconheçam seu esforço, que descubram seu gênio, que entendam seu amor. Pare de ligar sua televisão emocional e assistir sempre ao mesmo programa, que mostra como você sofreu com determinada perda: isso o estará apenas envenenando, e nada mais.\n\nNão há nada mais perigoso que rompimentos amorosos que não são aceitos, promessas de emprego que não têm data marcada para começar, decisões que sempre são adiadas em nome do “momento ideal”. Antes de começar um capítulo novo, é preciso terminar o antigo: diga a si mesmo que o que passou, jamais voltará.\n\nLembre-se de que houve uma época em que podia viver sem aquilo, sem aquela pessoa - nada é insubstituível, um hábito não é uma necessidade. Pode parecer óbvio, pode mesmo ser difícil, mas é muito importante. Encerrando ciclos. Não por causa do orgulho, por incapacidade, ou por soberba, mas porque simplesmente aquilo já não se encaixa mais na sua vida. Feche a porta, mude o disco, limpe a casa, sacuda a poeira. Deixe de ser quem era, e se transforme em quem é.",
    "type" : "blog",
    "file-path" : "content/blog/encerrando-cliclos-viva-no-presente-nao-se-paralise-pelo-passado.md"
  }, {
    "title" : "Castalio - Episódio 64: Thiago Avelino - OpenMining e SambaPorno",
    "date" : "2015-02-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Escute minha participação no Castalio Podcast falando sobre OpenMining e SambaPorno (ATENÇÃO: _Conteúdo Pornográfico EXPLÍCITO_):\n\n{{< podcast https://archive.org/embed/castalio-podcast-64 >}}",
    "type" : "blog",
    "file-path" : "content/blog/2015-03-01-castalio-podcast-episodio-64-thiago-avelino-openmining-e-sambaporno.md"
  }, {
    "title" : "Where to start a project with bottle, Boilerplate",
    "date" : "2015-02-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Developing python application using minimalist frameworks has become frequent in the Python community, for no reasons not to speak here. I see this change as a professional development where developers want to choose what is best for your application, simply use what little hide a group (of pearls, or not) that is better.\n\nAlong with this evolution brings vices of many developers other frameworks (and/or technology), this can be a problem at the time of the taking of decision of which Python web framework to use.\n\nI am a member of the team that keeps the Bottle Framework and thinking of a better acceptance of the framework decided to create the bottle-boilerplate, a project that creates a scaffold using the structure of the bottle and its best practices on top of design pattern MVC, thus simplifying the bootstrap starting a web application.\n\n\nWhich libraries are used?\n\n- bottle (based python web framework)\n- click (manage commands at the prompt, example runserver)\n- beaker (manage session)\n- jinja2 (template engine)\n- bottle-sqlalchemy (bottle plugin for connection with relational database)\n\n\nHow to use?\n\nThe process failed use the simplest possible:\n\n``bash\npip install bottle-boilerplate\nbottle startproject YOU-PROJECT-NAME\n`\n\nIf you want to open the documentation from the bottle:\n\n`bash\nbottle doc\n``\n\n\nHow to contribute?\n\nThe bottle-boilerplate is an open source project and accept what you want contribution (which come to improve the project). Is an interface (command line) to the cookiecutter-bottle, i.e. bottle-boilerplate on startproject will call cookiecutter to create the application.\n\nWe need the contribution in cookiecutter-bottle to improve the application for example, write test, among other improvements. Send pull request free Synthase (PR).",
    "type" : "blog",
    "file-path" : "content/blog/where-to-start-a-project-with-bottle-boilerplate.md"
  }, {
    "title" : "Go vs Python more request per second",
    "date" : "2015-01-17T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "I use python because it is a simple and powerful language, but never used by be excellence in performance (But for python web serves very well)! I know that benchmark based on Hello World does not want to say too much, but it's interessanta we know what technology (framework) is more time to answer performance web support request.\n\nThere is a python framework named Falcon (Falcon follows the REST architectural style, meaning (among other things) that you think in terms of resources and state transitions, which map to HTTP verbs) which is extremely performance, even using asynchronous backup processing library (as gevent, is a coroutine-based Python networking library that uses greenlet to provide a high-level asynchronous API on top of the libev event loop).\n\nThese days I commented on the social network about the performance of the falcon and some people commented that it would be interesting to do a benchmark with Go, and here I am writing a blogpost for the performance of a webserver written in Go and Python to see which responds more request per second!\n\nLet's go...\n\nFalcon application\n\n{{< gist avelino 154a2d612b4ff732558e81113762abde main.py >}}\n\n\nGo application\n\n{{< gist avelino c8e8bc86e79335d9a9b10ff35fc75b5f main.go >}}\n\n\nBenchmark\n\nUsed:\n\n``\nab -n10000 -c500 http://localhost:8080/\nIntel(R) Core(TM) i7-3520M CPU @ 2.90GHz\n8GB RAM\n`\n\nFalcon\n\nRequests per second: 4888.35 in 2.046 seconds\n\n`\navelino@klm ~ $ ab -n10000 -c500 http://127.0.0.1:8080/\nThis is ApacheBench, Version 2.3 <$Revision: 1604373 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking 127.0.0.1 (be patient)\nCompleted 1000 requests\nCompleted 2000 requests\nCompleted 3000 requests\nCompleted 4000 requests\nCompleted 5000 requests\nCompleted 6000 requests\nCompleted 7000 requests\nCompleted 8000 requests\nCompleted 9000 requests\nCompleted 10000 requests\nFinished 10000 requests\n\n\nServer Software:\nServer Hostname:        127.0.0.1\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        11 bytes\n\nConcurrency Level:      500\nTime taken for tests:   2.046 seconds\nComplete requests:      10000\nFailed requests:        0\nTotal transferred:      1530000 bytes\nHTML transferred:       110000 bytes\nRequests per second:    4888.35 [#/sec] (mean)\nTime per request:       102.284 [ms] (mean)\nTime per request:       0.205 [ms] (mean, across all concurrent requests)\nTransfer rate:          730.39 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0   29 166.7      0    1004\nProcessing:     2   29  37.8     23     436\nWaiting:        2   29  37.8     23     436\nTotal:         14   58 193.7     23    1438\n\nPercentage of the requests served within a certain time (ms)\n  50%     23\n  66%     25\n  75%     25\n  80%     25\n  90%     28\n  95%     50\n  98%   1029\n  99%   1232\n 100%   1438 (longest request)\n`\n\nGo\n\nRequests per second: 15711.36 in 0.636 seconds\n\n`\navelino@klm ~ $ ab -n10000 -c500 http://127.0.0.1:8080/\nThis is ApacheBench, Version 2.3 <$Revision: 1604373 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n\nBenchmarking 127.0.0.1 (be patient)\nCompleted 1000 requests\nCompleted 2000 requests\nCompleted 3000 requests\nCompleted 4000 requests\nCompleted 5000 requests\nCompleted 6000 requests\nCompleted 7000 requests\nCompleted 8000 requests\nCompleted 9000 requests\nCompleted 10000 requests\nFinished 10000 requests\n\n\nServer Software:\nServer Hostname:        127.0.0.1\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        11 bytes\n\nConcurrency Level:      500\nTime taken for tests:   0.636 seconds\nComplete requests:      10000\nFailed requests:        0\nTotal transferred:      1130000 bytes\nHTML transferred:       110000 bytes\nRequests per second:    15711.36 [#/sec] (mean)\nTime per request:       31.824 [ms] (mean)\nTime per request:       0.064 [ms] (mean, across all concurrent requests)\nTransfer rate:          1733.77 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   1.7      0      12\nProcessing:     2    6   5.5      5     205\nWaiting:        2    6   5.5      5     205\nTotal:          4    7   6.4      5     205\n\nPercentage of the requests served within a certain time (ms)\n  50%      5\n  66%      6\n  75%      6\n  80%      6\n  90%      7\n  95%     13\n  98%     28\n  99%     33\n 100%    205 (longest request)\n``\n\nWe can let Go more performer (compiling software), follows the result after compiling:\n\nRequests per second: 20978.30 in 0.415 seconds\n\nConclusion\n\nYes Go is much more performatico than Python in web requests, nor why I stop programming in Python. Today we have a very large ecosystem in the world of Python where does Python be very powerful (and good), an example is mathematical libraries such as numpy, pandas and etc.\n\nThis blogpost is to show that Python (or what you want other technology) is not the silver bullet (solution to all the problems). Choose the right technology for your problem, not everything is nail, to use hammer!",
    "type" : "blog",
    "file-path" : "content/blog/go-vs-python-more-request-per-second.md"
  }, {
    "title" : "Bottle, full stack without Django",
    "date" : "2014-12-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "This blogpost is based in a lecture I presented here in Brazil, follows the slides!\n\n\n\nBottle is a micro web framework compatible with WSGI, depends only on the Python standard library is compatible with python 2.6, 2.7, 3.2, 3.3 and 3.4, single source file. It was created by Marcel Hellkamp (@defnull) and maintained by the community that raised surrounding framework.\n\nDjango is a framework for rapid development for web, written in Python, which uses the standard MTV (model-template-view) and pragmatic. Was originally created as a system to manage a journalistic site in the city of Lawrence, Kansas. Became an open source project and was published under a BSD license in 2005. The name Django was inspired by the jazz musician Django Reinhardt. Django became very known for having included batteries, i.e. several distributed libraries join the Centre of the framework for simplicity work (called full stack).\n\nPragmatic is what contains practical, realistic considerations, with well-defined target. Be pragmatic is to be practical is to have goals defined. In other words, the team that developed the Django take some description of architecture and who uses Django follows this architecture without being able to change easily.\n\nIt's good a web framework have batteries included? Depends, if you use everything that the framework gives you Yes, but not all web designs are the same.\n\nMany project does not use 80% than Django offers, in those cases that don't use more than 50% of what we pay the cost of offering Django someone have defined the architecture, i.e. lost in performance because the Django has many modules that will not be using and yet he will climb a few modules that we don't use. When we use a micro framework we do the role of architect of application development, since we don't have a set before architecture begins to develop is necessary to devote time to define the architecture of the application.\n\nAll the packages that we have on the Django Python library that can substitute for use in a micro framework!\n\n ORM - SQLAlchemy to bottle-sqlalchemy\n Forms - WTForms\n Template Engine - Jinja2, mako, etc\n Migration - Alembic\n\n\nSQLAlchemy\n\nThe SQLAlchemy exists before Django (yes before Django) and since 2005 we have a team focuses on development of an ORM, unlike Django it's a time to take care of a web framework + ORM (I believe I don't need to talk to a developer focused render more than a developer not focused).\n\nStructure of a model:\n\n``python\nclass Entity(Base):\n    __tablename__ = 'entity'\n    id = Column(Integer, Sequence('id_seq'), primary_key=True)\n    name = Column(String(50))\n\n    def __init__(self, name):\n        self.name = name\n\n    def __repr__(self):\n        return <Entity('%d', '%s')> % (self.id, self.name)\n`\n\n\nWTForms\n\nA workaround for those who do not use Django and need to work with forms we have the WTForms, was created in 2008 and maintained until today!\n\nStructure of a form:\n\n`python\nclass UserForm(Form):\n    name = TextField(validators=[DataRequired(), Length(max=100)])\n    email = TextField(validators=[DataRequired(), Length(max=255)])\n`\n\n\nTemplate Engine\n\nJinja2 is a modern and designer-friendly templating language for Python, modelled after Django’s templates. It is fast, widely used and secure with the optional sandboxed template execution environment\n\n\nStructure of a template:\n\n`html\n<title>{% block title %}{% endblock %}</title>\n<ul>\n{% for user in users %}\n  <li><a href={{ user.url }}>{{ user.username }}</a></li>\n{% endfor %}\n</ul>\n`\n\nMigration\n\nUsage of Alembic starts with creation of the Migration Environment. This is a directory of scripts that is specific to a particular application. The migration environment is created just once, and is then maintained along with the application’s source code itself.\n\n\nStructure of a migration:\n\n`python\nrevision = '1975ea83b712'\ndown_revision = None\n\nfrom alembic import op\nimport sqlalchemy as sa\n\ndef upgrade():\n    pass\n\ndef downgrade():\n    pass\n`\n\nHow to make the evolution and downgrade:\n\n`python\ndef upgrade():\n    op.create_table(\n        'account',\n        sa.Column('id', sa.Integer, primary_key=True),\n        sa.Column('name', sa.String(50), nullable=False),\n        sa.Column('description', sa.Unicode(200)),\n    )\n\ndef downgrade():\n    op.drop_table('account')\n`\n\nStructure of a alter table:\n\n`python\n\n$ alembic revision -m Add a column\n\n\nrevision = 'ae1027a6acf'\ndown_revision = '1975ea83b712'\n\nfrom alembic import op\nimport sqlalchemy as sa\n\ndef upgrade():\n    op.add_column('account', sa.Column('last_transaction_date', sa.DateTime))\n\ndef downgrade():\n    op.drop_column('account', 'last_transaction_date')\n``\n\n\nConclusion\n\nExactly what you see, everything that Django has found out the stack of Django. I didn't write this blogpost to speak ill of Django and Yes to shows that exist other solutions for full development stack. Many people use Django by not understanding the environment with Python, today the Django brings much ready that makes some developers get lazy and not gain skills of software architecture.\n\nCome help with the Bottle, we are a growing community, to contribute with code of Bottle look at the issue that we have open. In case of doubt we have mailing list and IRC channel.\n\nGET INVOLVED",
    "type" : "blog",
    "file-path" : "content/blog/bottle-full-stack-without-django.md"
  }, {
    "title" : "Swift Language (Apple) first steps",
    "date" : "2014-06-04T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Apple launched the Swift language (Looking for the Swift parallel scripting\nlanguage? Please visit http://swift-lang.org) at WWDC 2014. A modern language\nto program for Mac and iOS!\n\nStrongly typed language, where you explicitly what type (variable, arguments,\nand function returns), syntax reminds dynamic languages with\nPython, Go, Ruby and JavaScript.\n\nApple offers a free comprehensive guide on language in\nHTML and\niBook formats.\n\n We can put zero left freely to improve readability, insert _ to separate groups\n  of numbers and add the + in front. That server to improve readability of the\n  program (does not alter the value of the number):\n\n``ruby\nlet a = 1000000\nlet b = 0.0000001\n\n// readable\nlet a = 1_000_000\nlet b = 0.000_000_1\n`\n\n Practical numerical ranges: 0..5 and 0...5 (Ruby)\n Unicode variables:\n\n`ruby\nlet π = 3.1415926\n`\n\n Tween strings (expand variables and expressions inside strings):\n\n`ruby\nvar name = Thiago Avelino\nvar yaer = 25\nprintln Hi, my name \\(name), 'm \\(year) years.\n`\n\n Few functions/methods native to strings works:\n \n   hasPrefix\n \n   hasSuffix\n \n   uppercaseString\n \n   lowercaseString\n \n   countElements\n \n   isEmpty\n Not have regular expressions\n* Ternary operators: (condition ? yes : no)`\n\nI liked the language, as 'm used to not bother me Go explicit types, lack of\nregular expression can be a problem seems, but it is a pleasant language to\nlearn!",
    "type" : "blog",
    "file-path" : "content/blog/swift-language-apple-first-steps.md"
  }, {
    "title" : "Golang, C and Python the benchmark time",
    "date" : "2014-03-06T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "I was wondering how performant Golang is, so I decided to put together a little benchmarking example for myself.\n\nThe benchmark will be done in my personal computer:\n\n\n``\nProcessor  3 GHz Intel Core i7\nMemory  8 GB 1600 MHz DDR3\nSoftware  OS X 10.9.2 (13C64)\n`\n\n\n\n\nSo I started with Python, which is what I know best and created the following simple script;\n\n{{< gist avelino b66dfb057504c4ad93452d037e1ed5c1 factorial.py >}}\n\nThe reason for the total output, was to have a check to ensure that I was getting the same results in each of the scripts. To make sure that they are doing the same amount of work.\n\nRunning the script gives us the following execution time;\n\n\n`\n$ time python factorial.py\n\ntotal: 591400000\n\n0.68s user\n0.01s system\n99% cpu\n0.688 total\n`\n\n\nSo I am getting about 1s in total execution time. Not bad.\n\nNow the same code sample in C, to see what the time execution would be;\n\n{{< gist avelino f2ccbba0573dbbf80dbc1cf955d49b7d factorial.c >}}\n\nCompile and execute the above snippet of code;\n\n\n`\n$ gcc factorial.c -o factorial\n$ time ./factorial\n\ntotal: 591400000\n\n0.01s user\n0.00s system\n91% cpu\n0.016 total\n`\n\n\nOk, that's quite an improvement. This is C, so we do expect there to be a great improvement.\n\nFinally we create our code sample in Go;\n\n{{< gist avelino 2266fc463ac021af99cb85664f2627b1 factorial.go >}}\n\nThen build and run the code sample and we get the following;\n\n\n`\n$ go build factorial.go\n$ time ./factorial\n\ntotal:  591400000\n\n0.01s user\n0.00s system\n93% cpu\n0.018 total\n``\n\n\nSo, that's pretty much the same as C, which is excellent. The best part of it all, is that it is actually fun to code in Go compared to C. Python was always an attraction for me as the language is a breeze to work with and enjoyable programming with it. Go is also a nice language to work with and it's really fast to boot. So I'm very excited about the language.",
    "type" : "blog",
    "file-path" : "content/blog/golang-c-and-python-the-benchmark-time.md"
  }, {
    "title" : "Business Intelligence (BI) Application Server written in Python",
    "date" : "2014-02-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "I started a new project with the name OpenMining, new application server written in Python.\n\n\n\nOpenMining is software for creating OLAP (online analytical processing) cubes (multi-dimensional) using Numpy, Scipy and Pandas for data management and flexibility in processing dynamical filters. Open-source provider of reporting, analysis, dashboard, data mining and workflow capabilities.\n\n\nOur goals\n\n- Business Intelligence software (Pentaho/Jaspersoft) alternative;\n- OLAP manager;\n- Generate report (grid, charts, pdf and etc);\n- Dashboard manager, link one or more element (report);\n- Easy dashboard generate;\n- Not one data is processed on the basis of source data;\n- Friendly interface;\n- Used websocket on cube load;\n\n\nPython libs used\n\n- Pandas\n- Numpy\n- numexpr\n- ipython\n- Tornado\n- SQLAlchemy\n- RQ\n- Riak client\n- Redis client\n- Memcached client\n\nMore about OLAP cube\n\nA cube can be considered a generalization of a three-dimensional spreadsheet. For example, a company might wish to summarize financial data by product, by time-period, and by city to compare actual and budget expenses. Product, time, city and scenario (actual and budget) are the data's dimensions.\n\nCube is a shortcut for multidimensional dataset, given that data can have an arbitrary number of dimensions. The term hypercube is sometimes used, especially for data with more than three dimensions.\n\nEach cell of the cube holds a number that represents some measure of the business, such as sales, profits, expenses, budget and forecast.\n\nOLAP data is typically stored in a star schema or snowflake schema in a relational data warehouse or in a special-purpose data management system. Measures are derived from the records in the fact table and dimensions are derived from the dimension tables.\n\n\nScreenshot\n\n\n\n\n\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Thiago Avelino\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the Software), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nContribute\n\nStar and fork in github.com/mining/mining, send pull request!\n\nBug tracker",
    "type" : "blog",
    "file-path" : "content/blog/business-intelligence-bi-application-server-written-in-python-openmining.md"
  }, {
    "title" : "Business Intelligence (BI) Application Server written in Python",
    "date" : "2014-02-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "I started a new project with the name OpenMining, new application server written in Python.\n\nOpenMining is software for creating OLAP (online analytical processing) cubes (multi-dimensional) using Numpy, Scipy and Pandas for data management and flexibility in processing dynamical filters. Open-source provider of reporting, analysis, dashboard, data mining and workflow capabilities.\n\nOur goals\n\n- Business Intelligence software (Pentaho/Jaspersoft) alternative;\n- OLAP manager;\n- Generate report (grid, charts, pdf and etc);\n- Dashboard manager, link one or more element (report);\n- Easy dashboard generate;\n- Not one data is processed on the basis of source data;\n- Friendly interface;\n- Used websocket on cube load.\n\nPython libs used\n\n- Pandas\n- Numpy\n- numexpr\n- ipython\n- Tornado\n- SQLAlchemy\n- RQ\n- Riak client\n- Redis client\n- Memcached client\n\nMore about OLAP cube\n\nA cube can be considered a generalization of a three-dimensional spreadsheet. For example, a company might wish to summarize financial data by product, by time-period, and by city to compare actual and budget expenses. Product, time, city and scenario (actual and budget) are the data's dimensions.\n\nCube is a shortcut for multidimensional dataset, given that data can have an arbitrary number of dimensions. The term hypercube is sometimes used, especially for data with more than three dimensions.\n\nEach cell of the cube holds a number that represents some measure of the business, such as sales, profits, expenses, budget and forecast.\n\nOLAP data is typically stored in a star schema or snowflake schema in a relational data warehouse or in a special-purpose data management system. Measures are derived from the records in the fact table and dimensions are derived from the dimension tables.\n\n\nContribute\n\nStar and fork in github.com/mining/mining, send pull request!",
    "type" : "blog",
    "file-path" : "content/blog/2014-02-21-business-intelligence-bi-application-server-written-in-python-openmining.md"
  }, {
    "title" : "Corretor Ortográfico no VIM",
    "date" : "2013-12-07T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Desde 2007 escrevo aqui no meu blog, com isso já passei por diversas plataforma\nde blog (Blogspot, Wordpress, Django, Django\nDiario,\nPelican, entre outras), hoje estou\nusando liquidluck\n(ferramenta escrita em Tornado Python para gerar arquivos estático), minha\nescolha para essa mudança foi simplificar o processo de escrever texto, ou\nseja, usar o que eu uso no dia a dia para programar, com isso tive algumas\nperda como corretor ortográfo!\n\nOlhando o LibreOffice achei o plugin chamado VERO – VERificador\nOrtográfico,\ne para mim seria excelente ter ele dentro do VIM, pois bem consegui fazer o que\neu queria, usar o VERO dentro do VIM.\n\n\nInstalando o VERO\n\nPrimeiro precisamos baixar o plugin VERO (vou criar uma pasta dentro do\n/var/tmp para deixar centralizado os arquivos) e descompactar\n\n    mkdir /var/tmp/vero\n\tcd /var/tmp/vero\n\twget\n\thttp://extensions.libreoffice.org/extension-center/vero-verificador-ortografico-e-hifenizador-em-portugues-do-brasil/pscreleasefolder.2012-01-04.1563120832/2.1/vero_pt_br_v210aoc.oxt\n\tunzip -x vero_pt_br_v210aoc.oxt\n\nAbra o vim e digite:\n\n    mkspell pt pt_BR\n\nPrecisamos colocar um configuração dentro com seu .vimrc:\n\n\techo 'set spell spelllang=pt' >> ~/.vimrc\n\nPrecione enter até acabar todas as perguntas e pronto você tem o VERO instalado\ndentro do seu VIM, agora basta usar o corretor ortográfo!\n\nConheça o vim-bootstrap, gerador de configuração vim.",
    "type" : "blog",
    "file-path" : "content/blog/corretor-ortografico-no-vim.md"
  }, {
    "title" : "Prazo no desenvolvimento de software, qual é a ciência exata?",
    "date" : "2013-11-19T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Falar de prazo é uma tarefa muito complicada hoje e sempre, pois não existe uma\nciência exata (tirando 42), outro ponto que prazo é uma promessa e consequentemente\npromessa tem que ser cumprida (e você vai fazer de tudo para cumpri-las), com\nisso trabalhar muito mais para cumprir o que você assumiu (prazo).\n\nLevantando conteúdo para esse blogpost achei no Quora o seguinte topico What\nis the hardest thing you do as a software\nengineer?\n(Qual a coisa mais difícil para um engenheiro de software?) e os termos que\ntem haver com tempo, prazo, horas e etc são os mais falado.\n\nSou engenheiro de software a mais de 7 anos de experiência passando por\ndiversas empresas, mercados, equipes, é que praticamente todo engenheiro de\nsoftware que conheci começa com a premissa que código é o objetivo e a\nsolução de todo problema.\n\nPara falar mais sobre esse assunto acho necessário sairmos de nossa área de\natuação (desenvolvimento de software) e olhar outras área:\n\n- Ilustrador\n- Produtor de video\n- Design\n- Entre outras profissão que trabalha com a mente…\n\nAs áreas relatadas acima trabalham com uma parte mais intelectual onde precisa\nter a criatividade para conseguir produzir um conteúdo. Esse final de semana\nestava almoçando com outros desenvolvedores e um deles foi no evento InterCon\nonde um palestrante estava apresentando um case de um video de no máximo 1\nminuto onde esse 1 minuto envolvia no minimo 5 profissionais e a produtora\nlevou media de 5 mês para desenvolver esse projeto.\n\nDesenvolvimento de software não é diferente das área relatada acima, é uma\nárea intelectual onde você precisa pensar como o software escalar, se o banco\nde dados relacional vai se sair bem na hora que tiver muito trafego (caso não,\nqual é a melhor alternativa), qual é melhor design pattern para a\nimplementação a ser feita e outros pontos que envolvem o desenvolvimento de\nsoftware.\n\nEntão aprendam a primeira e mais difícil verdade do mundo: Software\nnormalmente não é resolvido com Software, é resolvido com capacidades\nHumanas. Numa distribuição de Paretto eu diria que 80% de todo problema de\nsoftware somente é resolvido quando você investe aqueles 20% restantes em\nComunicação, Articulação, Pensamento Claro e Racional, quebra Ambiguidades,\nNegociação, Compromisso.\n\nQuando você passa um prazo (faz uma promessa) você vai ter que assumir o\nrisco que a proposta inicial vai realmente resolver o problema proposto, e\nisso nem sempre é possível pois estamos trabalhando com tecnologia e a\nevolução é constando. Outra que nos engenheiro de software não somos\nmaquinas onde usamos software para escrever software e sim uma cabeça\npensante de onde sai toda a logica.\n\nDito isso, é possível cumprir todas as promessas? Não, infelizmente não é.\nMas é nossa responsabilidade como profissionais estar sempre em busca desse\nideal, não criar maneiras de evitá-las.\n\nOu seja, não existe uma ciência exata para prazo!",
    "type" : "blog",
    "file-path" : "content/blog/prazo-no-desenvolvimento-de-software-qual-a-ciencia-exata.md"
  }, {
    "title" : "A volta dos que nao foram, software livre para sempre",
    "date" : "2013-10-26T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Durante 5 anos usei o sistema operacional da Apple (OS X), o OS X é um ótimo sistema operacional principalmente o ambiente gráfico que é sensassional, sistema de áudio entre outros recursos, os 3 primeiro anos usei sem problema nem um ate que a Apple veio com uma historia de cobrar pelo Xcode (The Xcode interface seamlessly integrates code editing, UI design with Interface Builder, testing, and debugging, all within a single window. The embedded Apple LLVM compiler underlines coding mistakes as you type, and is even smart enough to fix the problems for you automatically), ou seja, é a IDE para escrever projetos para plataforma Apple (OS X e iOS) mais o compilador vugo GCC, essa foi a gota d'agua, eles estavam vendendo o GCC, mas como eu já tinha me acostumado com o ambiente (que não é um trabalho muito complicado pois a Apple faz ótimos produtos) não quiz parar de usar e comprei o Xcode, depois de um tempo a Apple voltou a traz colocando novamente de graça.\n\nDepois dessa dramática historia acima comecei olhar valores de notebook (e ultrabook) a tentativa de parar de usar OS X, logo após olhar valores fica pensando, acho que não vou conseguir voltar usar Linux como estação de trabalho novamente pois vou sentir falta dos aplicativos Apple e deixei a ideia para lá, e nisso se passou mais 1 ano.\n\nAte que parei para refletir o que eu usava do OS X, segue abaixo a lista de aplicativos:\n\n iTerm2\n vim (via linha de comando)\n Python\n ssh\n PostgreSQL\n Chrome (e diversos serviços web)\n\nOu seja, tudo que eu usava e acha que iria sentir falta eu conseguiria rodar em Linux. Logo depois dessa reflexão eu lembrei que tinha ganhado um CR-48 (Chromebook) do Google e resolvi começa brinca com ele para ver como era à experiência, apesar da maquina não ser potente como o Macbook Retina (i7) que eu usava estava atendendo minha necessidade, a primeira vista é um notebook que tem apenas um Chrome e com isso todos os serviços web funciona perfeitamente. Olhando o Chrome OS mais de perto vi que é um Linux (baseado em Gentoo) ao meu ver o Google fez um ótimo trabalho principalmente no ambiente X (mais para frente escrevo um blog post falando sobre o que achei do Chrome OS).\n\nDepois desse lero lero todo, achei uma distribuição Linux que atendia minha necessidade ( browser e console para desenvolver), para quem não sabe é possível instalar Linux via chroot dentro de uma pasta no Chrome OS.\n\nEis que resolvi compra o Chromebook Pixel, que por sinal tem uma hardware ótimo para trabalhar com Chrome OS.\n\n\n\nEstou trabalhando a uma semana no Chrome OS e ate agora não tive necessidade de pegar o Macbook para nada, ou seja, voltei usar Linux e agora posso dizer novamente que não uso nem um software propietario no meu notebook. Tudo que achei que iria sentir falta do ambiente Apple era nada mais nada menos que coisa da minha cabeça.\n\nEstou de volta ao desktop livre.",
    "type" : "blog",
    "file-path" : "content/blog/a-volta-dos-que-no-foram-software-livre-para-sempre.md"
  }, {
    "title" : "New web framework asynchronous to Python 3",
    "date" : "2013-08-11T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "I started a new project with the name nacho, asynchronous web framework for Python 3.\n\n\n\n\nOur goals\n\n It was designed to work on Python 3.x\n Some of syntax were inspired on Tornado's syntax\n Tornado is the default server, but Eventlet is stable as well\n Templates are done by Jinja2\n HTML5 as the big-main-thing\n Work friendly with NoSQL (otherwise we should stop talking about them)\n Handle asynchronous requests properly\n\n\nExample\n\n``python\nclass MainHandler(ApplicationController):\n    def get(self):\n        data = {'title': 'testando lero lero'}\n        self.render(home.html, *data)\n\n\nr = Routers([(r/, MainHandler),])\n``",
    "type" : "blog",
    "file-path" : "content/blog/2013-08-11-new-framework-asynchronous-to-python3.md"
  }, {
    "title" : "Riak, alta performance NoSQL para seu projeto",
    "date" : "2012-12-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Esse ano de 2012 ajudei a comunidade Riak que a cada dia esse banco de dados vem me surpreendendo. Estou para escrever um blogpost desde fevereiro, mas como vida de programador (pelo menos para mim esse ano) é agitada.\n\nResolvi falar sobre a performance nesse primeiro blogpost sobre Riak e colocar na mesa um teste (relativamente simples) para compara o tempo de inserção, realmente é um teste simples se tratando de NoSQL.\n\nAntes de mostrar a comparação acho importante deixar claro as vantagens que temos em utilizar Riak:\n\n- Disponibilidade: sistema de recuperação de dados onde trabalha de forma inteligente para que esteja disponível para ler e escrever operações, mesmo em ambiente com falha, assim garantindo a integridade dos dados;\n- Tolerância a falhas: pode perder o acesso aos nós (Servidores Riak), devido à falha de rede ou partição de hardware e nunca perder de dados;\n- Simplicidade de utilização: facil adição de máquinas em um cluster Riak, sem ocorrer uma carga nos servidores - isso em um pequeno grupo de servidores como uma grande quantidade de servidores Riak;\n- Escalabilidade: Riak distribui automaticamente os dados ao redor do cluster e produz um aumento de desempenho quase linear quando você adicionar dados.\n\nDepois de deixar claro os itens acima podemos colocar na messa o Riak e o grande MongoDB, lembrando que esse blogpost não é para falar qual NoSQL é melhor ou para você parar de utilizar um ou outro banco, Riak e MongoDB tem algumas características semelhantes, esse foi o motivo de colocar em teste os dois.\n\nO teste foi simples preciso inserir 1 milhão (1000000) de registro no meu banco de dados, qual banco de dados entrega isso mais rápido para mim?\n\nCódigo Python usando drive nativo do Riak:\n\n``python\n#!/usr/bin/env python\n-- coding: utf-8 --\n\nimport riak\n\n\n\nclient = riak.RiakClient()\nbucket = client.bucket('test')\n\nfor i in range(0, 1000000):\n    person = bucket.new('riak_developer_%d' % i, data={'name': 'Thiago Avelino %d' % i,\n                                                       'age': 18+i,\n                                                       'language': ['python'],})\n`\n\nCódigo Python usando drive nativo do MongoDB:\n\n`python\n#!/usr/bin/env python\n-- coding: utf-8 --\n\nfrom pymongo import MongoClient\n\n\n\nconnection = MongoClient()\ndb = connection.test\npersons = db.persons\n\nfor i in range(0, 1000000):\n    person = persons.insert({'name': 'Thiago Avelino %d' % i,\n                             'age': 18+i,\n                             'language': ['python'],})\n`\n\nUm código simples onde faço um loop que vai de 0 a 1000000 (estou fazendo 1000001 inserção), e dentro de cada interação do loop estou gerando um registro no banco de dados. Veja abaixo o resultado:\n\n`shell\n(riak-test) ~/Sites/riak-test$ time python riak.py\npython riak.py  15.60s user 0.14s system 99% cpu 15.850 total\n\n(riak-test) ~/Sites/riak-test$ time python mongodb.py\npython mongodb.py  144.14s user 35.47s system 55% cpu 5:25.85 total\n``\n\nRealmente o tempo de execução do Riak é muito mas muito rápido, o que me deixou mais surpreso foi o tempo do MongoDB, o MongoDB demorou 9 vezes mais comparado com o Riak.\n\nNão estou falando que o MongoDB é ruim, ate mesmo que tenho projetos grande em produção usando ele e dependendo do projeto/infra recomendo usar MongoDB.",
    "type" : "blog",
    "file-path" : "content/blog/2012-12-23-riak-alta-performance-nosql-para-seu-projeto.md"
  }, {
    "title" : "Palestra sobre London Framework na PyCon Argentina",
    "date" : "2012-12-10T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Universidad Nacional de Quilmes, local onde foi organizado a PyCon Argentina\n\nNo começo de junho o Mariano (organizador do evento PyCon Argentina 2012, me fez um convite para ir palestra sobre London Framework (Framework criado por Marinho Brandão).\n\nNada melhor do que conhecer pessoas e principalmente culturas novas, entender o que os Argentinos estão desenvolvendo e o que anda estudando, ou seja, fazer network (como falamos na área de tecnologia). Dava para ver no rosto dos argentinos a vontade de aprender e de consumir o maximo de informação possível, na PyCon Argentina de 2012 teve uma ótima seleção de palestra, onde foi abordado temas como asynchrony (twisted), Plone (com Erico Andrei - Brasileiro), web2py  (com Massimo Di Pierro - criador do framework), Python 3.3 (com Brett Cannon - Desenvolvedor Google) e muito mais.\n\nTive grande privilegio de palestra sobre London Framework, foi apresentado o motivo de criar um novo framework (Python) e hoje temos funcionando dentro do London. A repercussão foi muito positiva, recebi muitos tweets e e-mails de desenvolvedores querendo saber mais sobre London Framework, o que mostra grande aceitação e necessidade (semelhantes) do framework dentro da comunidade Argentina. Veja abaixo os slide da palestra de London Framework:\n\n{{< slideshare 2DLd4OvBUeGT2M  >}}\n\nA pedidos da organização, fiz minha palestra em portunhol (tinha planejado apresentá-la em inglês, já que não sou fluente em espanhol). Pelas conversas de corredor, acredito que o público entendeu bem o meu portunhol!\n\n\n\nNo final do primeiro dia de evento tivemos uma confraternização, onde a organização da PyCon Argentina chamou uma pizzaria conhecida de Buenos Aires para fazer algumas pizza. A forma dos argentino preparar a pizza é bem diferente de nos Brasileiros, não querendo puxar sardinha para os Argentinos, é muito gostosa a pizza Argentina.",
    "type" : "blog",
    "file-path" : "content/blog/2012-12-11-palestra-sobre-london-framework-na-pycon-argentina.md"
  }, {
    "title" : "Comandos tmux (cheat sheet)",
    "date" : "2012-10-08T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "[tmux]() é um software que pode ser usado para vários consoles de multiplex virtuais, permitindo que um usuário acesse múltiplas sessões de terminais separados dentro de uma janela de um único terminal ou sessão de terminal remoto. É útil para lidar com vários programas a partir de uma interface de linha de comando, e para separar os programas a partir do shell do Unix, que começou o programa. Distribuído sob uma licença BSD.\n\nManaging tmux sessions\n\n``shell\ntmux start tmux server\ntmux at attach running sessions to a terminal\ntmux ls list running tmux sessions\n`\n\nSharing sessions between terminals\n\n`shell\ntmux new -s session_name make new named session\ntmux at -t session_name attach to exist session (allowing shared sessions)\n`\n\nCommands (used within a running tmux session)\n\n`shell\nc  - create new window\nn/l - next/last window\n&  - kill current window\n\n%  - split window, adding a vertical pane to the right\n  - split window, adding an horizontal pane below\n←/→ - move focus to left/right pane\n↑/↓ - move focus to upper/lower pane\n\n!  - Break current pane into new window\nx  - Kill the current pane.\nd  - detach the current client\n\n[  - enter copy mode (then use emacs select/yank keys)\n     press CTRL-SPACE or CTRL-@ to start selecting text\n     move cursor to end of desired text\n    * press ALT-w to copy selected text\n\n]  - paste copied text\n\n?  - show tmux key bindings\n``\n\nNotes\n\n> All commands need to be prefixed with the action key.\n\n> By default, this is CTRL-b",
    "type" : "blog",
    "file-path" : "content/blog/2012-10-08-comandos-tmux-cheat-sheet.md"
  }, {
    "title" : "Plone para desenvolvedores Python",
    "date" : "2012-08-30T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Sempre que uma pessoa vinha falar de Plone para mim eu não me sentia muito bem pois não conhecia e o pessoal que sempre conversei que desenvolvia em Plone e depois conheceu Django sempre falava que não valia apena mexer com Plone! Será que isso é realmente verdade?\n\nDepois do que eu escutei o pessoal falando eu não queria nem saber desse cara chamado Plone, ate mesmo que para desenvolver uma solução de gerenciamento de conteúdo usando Django não é muito trabalhoso (Realmente era assim que eu pensava, mal eu sabia que estava completamente enganado). Como eu fiz para mudar esse preconceito que tinha?\n\nRealmente para mim mudar esse pensamento foi preciso senta e conhecer a ferramenta, não foi um trabalho muito facil pois como já relatei vim de Django e para mim era preciso subir um ambiente relativamente parecido, mas é Plone e ele roda encima do servidor de aplicação Zope e isso é algo que eu não conhecia (apenas tinha uma ideia do que era mas o que é realmente não sabia) em fim, depois do esforço de conhecer o Zope e Plone achei bacana. Mas achar bacana e colocar em produção é bem diferente.\n\nNo começo de agosto assumi um cargo de lider tecnico da tv1.com, eis que surge uma demanda gigantesca pois atendemos muitos sites do Governo Brasileiro, tais como:\n\n- Portal Brasil\n- Secom\n- Planalto\n- Biblioteca da Presidencia\n- Emquestão\n- entre outros...\n\nTodos os sites é em Plone, e por esse motivo tive que estudar ainda mais do que estava estudando...\n\nSemana passada Liz Leddy e Nejc Zupan (dois desenvolvedores Plone) estava no Brasil para participar do evento Plone Symposium South America e Caipirinha Sprint (um dos melhores sprint que participei). O sprint foi muito bom fiquei surpreso com a qualidade do código que o Plone tem e como o pessoal leva a escrita de teste unitario e teste funcional a serio, o que posso falar é que 100% do código Plone tem cobertura de teste (se você que ver com os seus proprio olhos aqui explica como rodar os teste com coverage).\n\nBom o que posso falar mais é que agora sou um core commiter do Plone:\n\n\n\nBom nós desenvolvedores (Python) temos mania de criticar (ter preconceito) ou não ter uma iniciativa para estudar uma nova tecnologia, o que posso falar para essas pessoas (eu realmente sou um desse) é: Conheça para depois tomar suas propria decisão, se você acha que um projeto pode ser mais simples ou melhor em um ponto especifico, não esqueça que você desenvolvedor (Python) tem capacidade de ajudar um projeto open source.",
    "type" : "blog",
    "file-path" : "content/blog/2012-08-30-plone-para-desenvolvedores-python.md"
  }, {
    "title" : "Proxy transparente com Nginx",
    "date" : "2012-08-09T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Muitas pessoas usam Squid para fazer qual quer tipo de proxy, ate mesmo para proxy transparente para usar em servidor web, por exemplo:\n\nVocê tem um site que precisa ter IP aqui no Brasil so que como o custo de servidor e link aqui no Brasil é muito caro, você pode fazer um proxy transparente para o servidor aqui no Brasil ser um cara que vai receber a requisição e repassar para o outro servidor que esteja em qual quer lugar do mundo. Com essa solução podemos ter uma maquina simples (maquina com pouco poder de processamento) pois ela só vai receber o trafego e repassar para o servidor que esteja em outro local.\n\nVamos imaginar um exemplo pratico, preciso que o usuário acesse o IP 177.71.248.185 (é um servidor da Amazon no Brasil), esse servidor precisa receber a requisição e repassar para o IP 67.159.35.2 (é maquina principal onde é processado o backend, esse servidor esta fora do Brasi). Foi usado essa solução em um portal que atendo para ter baixa latencia.\n\nVamos ao exemplo pratico:\n\n``nginx\nupstream server {\n    server 67.159.35.2;\n}\nserver {\n    listen       80;\n    server_name  avelino.us www.avelino.us;\n    location / {\n        proxy_cache proxy-cache;\n        proxy_cache_key $host$request_uri$args;\n        proxy_ignore_headers Cache-Control Expires;\n        proxy_cache_min_uses 1;\n        proxy_hide_header Set-Cookie;\n        proxy_cache_valid 200 301 302 30m;\n        proxy_cache_valid any 0m;\n        proxy_buffering on;\n\n        proxy_pass http://server;\n        proxy_redirect off;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n}\n``\n\nCriei um upstream server para falar qual é o servidor de destino do trafego, na configuração acima tem um cache de 30 minutos pois no servidor principal tem cache de 4 horas.\n\nLogicamente que existe desvantagem com isso, pois vamos estar trafegando em duas (ou mais) redes, assim usando o trafego do servidor que esta recebendo a primeira requisição e do segunda que esta recebendo um requisição do primeiro.",
    "type" : "blog",
    "file-path" : "content/blog/2012-08-09-proxy-transparente-com-nginx.md"
  }, {
    "title" : "Criando package (modulo) em Node.js",
    "date" : "2012-06-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Existe muitas pessoas querendo estudar Node.js pela simplicidade de trabalhar com processamento assíncrono e por usar JavaScript em server side. JavaScript é uma linguagem simples mas para desenvolvimento Client side mas ao mesmo tempo quando colocamos JavaScript do lado do servidor começa a surgi algumas duvidas como: estrutura do software, como criar biblioteca, qual Framework usar e muitas outras.\n\nDando uma olhada no Github vi que tem muitos software que parece uma lingüiça com mais de 500 linhas em um mesmo arquivo, aí me vem a seguinte pergunta JavaScript não é orientado a objeto? logicamente que sim, então tem alguma coisa errada pois uns dos paradigma é dividir funcionabilidade onde cada modulo faça sua parte e usando todas faz o que foi proposto a ser feito.\n\nEntão vamos lá, seguindo um exemplo simples:\n\n Conectar em um banco de dados\n Fazer insert, update e delete\n Desconectar do banco de dados\n\nO exemplo usado encontra-se no repositorio example-nodejs-mongodb (desculpe, acabei apagando o repositorio no passado :/*) na minha conta do Github, nesse exemplo vou usar o banco de dados MongoDB por ser mais simples de instalar e usar (Pois é um banco de dados NoSQL) . Dado que já esteja instalado o MongoDB em seu sistema operacional (Para usuarios Linux basta baixar o source do MongoDB no site e depois rodar o binario mongod, já para usuarios Windows não tenho não tenho experiencia no ambiente mas achei esse tutorial que pode ajudar). A instalação do NodeJS e NPM no Linux e Windows é uma operação relativamente simples, por isso não vou detalhar todo o processo, você pode ver nos artigos nesse blogpost.\n\nA primeira coisa que temos que ter em mente é que tudo o que é escrito dentro de um package (proprio) não é levado para fora, você precisa especificar o que realmente quer expor do seu package. No arquivo mongocon.js temos um exemplo de como trabalhar com exports no Node.JS:\n\n``js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/avelinous');\n\nexports.mongoose = mongoose;\n`\n\nNo exemplo acima estou expondo toda a classe do mongoose, eu poderia restringir export só alguns metodos por exemplo:\n\n`js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/avelinous');\n\nexports.mongoose_schema = mongoose.Schema;\n`\n\nAssim podemos limitar o acesso dentro de um package.\n\nCaso queira fazer um package e expor publicamente via NPM, basta criar um package.json juntamente com o seu source, assim pode colocar dependencias que o seu package tem e em qual versão do NodeJS ele roda, veja o exemplo de um package.json:\n\n`json\n{\n    name: mongo_test,\n    description: A package using mongoose ODM,\n    author: Avelino <t AT avelino DOT run>,\n    dependencies: {\n        mongoose: >= 2.7.0\n    },\n    engine: node 0.6.19\n}\n``\n\nPronto, com isso é facil enviar o seu package para o repositorio do NPM.",
    "type" : "blog",
    "file-path" : "content/blog/2012-06-23-criando-package-modulo-em-node-js.md"
  }, {
    "title" : "Trabalhar para empresa de fora do Brasil",
    "date" : "2012-04-20T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "O tema é muito abrangente mas vou focar justamente para a área tecnologia onde temos a possibilidade de trabalhar remoto (vulgo home office, que é um outro tema que gera muita polemica).\n\nHoje fecha um total de 3 dias trabalhando na empresa Mochii (Realmente achei o site da empresa muito nerd e extremamente diferente, esse e outros motivo me fez trabalhar com eles) e durante esses três dias tive uma ótima experiencia para compartilhar.\n\nPrimeiro que o dono da empresa é muito acessível, sem essa frescura de hierarquia (Não que eu ache totalmente hierarquia desnecessário, mas em alguns caso ao meu ver não precisaria de tanta burocracia).\n\nSegundo que o time de desenvolvimento de lá é 100% aberto a ideias e a criticas (logicamente que criticas construtivas e que saiba conversa sobre o porque não concorda com determinada parte do código), muito diferente de alguns desenvolvedores no Brasil (Sei que tem em outros lugares do mundo mas como trabalhei muito tempo no Brasil estou usando como referencia) que se apega com código desenvolvido.\n\nUma coisa que realmente me deixou muito surpreso foi em relação a cobrança de como esta indo a tarefa que eu (Thiago Avelino) assumi, o dono da empresa chegou para mim e falou que eu deveria conversa com um funcionario que saberia explicar melhor sobre o porque esta usando a tecnologia X, Y e Z, depois do lider do desenvolvimento me explicado foi atribuido uma tarefa e não fui cobrado nem uma vez sobre a tarefa, realmente isso é muito diferente aqui no Brasil, principalmente quando um desenvolvedor novo entra em um time, geralmente tem sempre um cara no time que fica pergunta e ai esta entendendo?, ao meu ver isso tem o seu lado bom e consequentemente o seu lado ruim. O lado bom é que tem a interação do time com o novo desenvolvedor, mais isso acaba ficando chato pois se o novo desenvolvedor não esta entendo ele vai ficar com vergonha (ou alguma coisa do genero) de se expressa falando que não esta entendo alguma parte do fluxo do projeto ou mesmo código.\n\nPoderia falar mais 1001 experiência que tive essa semana, mas vou ir gerando blog post com os passar das semanas, assim posso ir aprofundando cada dia mais da experiência vivida.\n\n> Realmente vale apena trabalhar para uma empresa de fora do Brasil.",
    "type" : "blog",
    "file-path" : "content/blog/2012-04-20-trabalhar-para-empresa-de-fora-do-brasil.md"
  }, {
    "title" : "Test é para os fracos",
    "date" : "2012-02-24T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Em novembro fiz mais uma palestra sobre teste unitários só que agora com o titulo da palestra bem diferente Test é para os fracos, o motivo desse titulo é para deixar a palestra mais dinâmica pois escrever teste não é uma tarefa muito simples no primeiro contato.\n\nTem muitas pessoas que acha que escrever teste não garante que o software não tem bug, isso é claro, mas vamos encarar o problema quando quando tiver que mudar o software, caso ele esteja como teste na parte onde esta sendo implementado novas funcionalidade e venha quebrar ai sim vamos dar valor aos teste.\n\nUns dos tópicos da minha palestra é como acostumar a escrever teste, geralmente não é um trabalho muito simples, quando começamos a praticar técnicas de desenvolvimento de software como TDD é um trabalho muito chato pois não temos experiencia e nem costume de escrever um teste para depois implementar o software passar na quela teste, vendo este cenário podemos chegar a conclusão que muitos desenvolvedores não sabe realmente o que precisa ser desenvolvido e com isso fica ainda mais complicado de praticar TDD.\n\nAntes de desenvolvermos um software a primeira coisa é saber o que o software vai fazer, só assim a pratica de TDD começa e ficar mais fácil e fluente, uma dica que dou para quem começa da implementa camada de teste unitário em um projeto é participar de Coding Dojo e de PythonStorm (Ideia do nosso amigo Rodolpho Eckhardt) onde é reunido um grupo para fazer para bater um papo sobre tecnologia (Python) e falar sobre melhores praticas.\n\nEsse é referente aos primeiros slides da palestra, vou escrever as próximos slides no próximos webposts.\n\nLink dos slides da palestra: http://www.slideshare.net/avelinoo/test-para-os-fracos",
    "type" : "blog",
    "file-path" : "content/blog/2012-02-24-test-e-para-os-fracos.md"
  }, {
    "title" : "VIM a IDE para programadores Python",
    "date" : "2011-12-22T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Depois muito tempo sem escrever nada no meu blog, escolhi esse tema para chamar a atenção do pessoal que esta começando desenvolver em Python que sempre pergunta qual é a melhor IDE para desenvolver em Python ou qual quer programador que usa uma super IDE pesado porque tem o recurso X, Y e Z.\n\nCom o VIM podemos ter todos os recurso avançado que temos em qual quer IDE, basta algumas configurações para que esses recursos ser ativado, para facilitar a vida de todos compartilhei o meu .vimrc e nesse post vou explicar como usar o mesmo.\n\n> Em 2 de novembro de 1991, Bram Moolenaar publicava a primeira versão do edito vim. O vim nasceu como um clone para Amiga do editor vi criado por Bill Joy em 1976, adicionando algumas funcionalidades extras, daí seu nome (VI iMproved ou VI Melhorado). Este editor se adaptou rapidamente a outras plataformas.\n\nAssumindo que o vi já esta instalado no meu micro, vamos instalar as configurações que eu fiz, basta rodar os seguintes comando no seu bash (Linux ou Mac):\n\n``shell\ncurl https://raw.github.com/avelino/.vimrc/master/bootstrap.sh -o - | sh\n`\n\n> instalação depreciada, o projeto evoluiu para Vim-Bootrap\n\nApós isso ele vai baixar o repositório na sua pasta HOME.\nRecomendo o uso o VIM em GUI pois podemos chegar 256 cores, ou seja, colocar temas mais agradável e assim deixando o uso do vim mais confortável para o desenvolvimento, para Linux é o gvim e para mac o macvim (Para mac o Björn Winckler fez um ótimo trabalho, na minha humilde opinião é a melhor versão do VIM via GUI).\n\nChega de blablabla né, vamos logo para o que realmente interessa, como o VIM ficou e como utilizar ele?\n\n\n\nUsando o vim para navegar nas pasta de um projeto:\n\n\n\nBuscando arquivo por nome dentro do projeto:\n\n\n\nListar todas as class e def do arquivo esta esta aberto (Python)\n\n\n\nLista de comandos para usar no 'vim', lembrando que esses comando foi customizado:\n\n- :cd /path Abrir pasta\n- tn Abrir nova aba\n- te Abrir nova aba e carregar arquivo\n- t] Proxima aba\n- t[ Voltar aba\n- Ctrl+c Adicionar todos os arquivos no cache para poder fazer busca de arquivo (recomendo fazer isso ao abrir o projeto)\n- Ctrl+f Busca arquivo e abre na mesma aba\n- Ctrl+s Busca arquivo e abre em uma nova aba\n- \\b Abre arquivo que esta no buffer do vim (Arquivo abertos)\n- \\d,, \\n ou F3 Abre navegador de arquivo\n- \\f Lista todas as class e def (Python)\n- \\j Vai para declaração de um metodo\n- \\r Renomear todos os metodos\n- [e Move linha para cima\n- e] Move linha para baixo\n- \\v ou Ctrl+w + v Divide a tela em vertical\n- \\h ou Ctrl+w + s Divide a tela em horizontal\n- \\w ou Ctrl+w + q Fecha a aba atual\n- Ctrl+k Abre console Python\n- Ctrl+j Roda o script Python aberto\n- \\sh Abre bash (shell)\n- \\p Manda o arquivo em aberto para o dpaste.com\n- \\ga Git add .\n- \\gc Git commit\n- \\gsh Git push\n- \\gs Git status\n- \\gd Git diff\n- \\gr Git remove\n- \\S Remove todos os espaços do final\n- \\c` Lista controle de versao do buffer",
    "type" : "blog",
    "file-path" : "content/blog/2011-12-22-vim-a-ide-para-programadores-python.md"
  }, {
    "title" : "Nova versão da API do Dropbox",
    "date" : "2011-10-13T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Dia 14/09/2011 o Dropbox lançou a nova versão 1.0 da API, nesse lançamento trouxe muitas novidades e melhorias:\n\n- Suporte para aplicações web\n- Suporte para criação de pasta (Na versão 0.1 da API não tinha)\n- Novo site para desenvolvedores, com documentação simples e completa https://www.dropbox.com/developers_beta\n- Melhor compartilhamento de arquivo, streaming, busca por arquivo e suporte para revisão de arquivo\n- Implementação no controle de nomes de arquivos, para não sobrescrever arquivos já salvo\n- SDK atualizado para iOS, Android, Python, Ruby e Java que implementa todas modificações e documentação\n\n\nLink do repositorio (Python Pypi) da nova biblioteca http://pypi.python.org/pypi/dropbox/1.1\n\nO dropbox implementou um oauth onde podemos desenvolver software e fazer o usuário usar a conta de dropbox dele para armazenamento de arquivos:\n\n\n\nVou falar um pouco sobre 3 metodos que esta dentro da biblioteca dropbox client, rest e session.\n\nCom o metodo session é por onde tudo começa, onde você linka o seu software com uma conta Dropbox, exemplo:\n\n``python\nInclude the Dropbox SDK libraries\nfrom dropbox import session\n\nGet your app key and secret from the Dropbox developer website\nAPP_KEY = 'INSERT_APP_KEY_HERE'\nAPP_SECRET = 'INSERT_SECRET_HERE'\n\nACCESS_TYPE should be 'dropbox' or 'app_folder' as configured for your app\nACCESS_TYPE = 'INSERT_ACCESS_TYPE_HERE'\nsess = session.DropboxSession(APP_KEY, APP_SECRET, ACCESS_TYPE)\n`\n\nCaso esteja usando a conta do Dropbox do usuário podemos pegar informações da conta dele:\n\n`python\nclient = client.DropboxClient(sess)\nprint linked account:, client.account_info()\n`\n\nAgora usando o metodo client podemos fazer get e put de arquivos:\n\n`python\nfrom dropbox import client\nf = open('working-draft.txt')\nresponse = client.put_file('/magnum-opus.txt', f)\nprint uploaded:, response\n`\n\nApós criar o arquivos podemos ler ele:\n\n`python\nprint client.get_file('/magnum-opus.txt').read()\n`\n\nReescrever o arquivo com uma nova revisão para criar um novo arquivo:\n\n`python\nout = open('magnum-opus.txt', 'w')\nout.write(client.get_file('/magnum-opus.txt',rev='362e2029684fe').read())\n``\n\nPara trabalhar com REST temos um ótima documentação https://www.dropbox.com/developers_beta/reference/api",
    "type" : "blog",
    "file-path" : "content/blog/2011-10-13-nova-versao-da-api-do-dropbox.md"
  }, {
    "title" : "Entendendo na pratica como funciona a linguagem Go",
    "date" : "2011-05-25T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "A linguagem Go é um projeto open source para tornar os programadores mais produtivos.\n\nGo foi desenvolvido para utilização maxima do CPU, tornando um processo simples para criar aplicação Multithreaded, o processo de utilização de maquinas na rede para processar determinado programa também é bem simples, assim tornando um software mais flexível e modular.\n\nVamos montar um servidor HTTP em Go.\n\n``go\npackage main\n\nimport (\n    http;\n    io;\n    fmt;\n)\n\nfunc HelloServer(c http.Conn, req http.Request) {\n    io.WriteString(c, hello, world!\\n);\n}\n\nfunc main() {\n    fmt.Printf(http://localhost:8080/hello\\n);\n    http.Handle(/hello, http.HandlerFunc(HelloServer));\n    err := http.ListenAndServe(:8080, nil);\n    if err != nil {\n        panic(ListenAndServe: , err.String())\n    }\n}\n`\n\nO HelloServer() é o que vai fazer a parte de renderização, o man()` ele sobre o servidor HTTP na porta 8080, e caso o usuário tente processar um URL que não esteja no fmt ele vai cair no err onde vai processar o erro e apresentar o panic.\nSimples assim já temos um servidor HTTP.",
    "type" : "blog",
    "file-path" : "content/blog/2010-05-25-entendendo-na-pratica-como-funciona-a-linguagem-go.md"
  }, {
    "title" : "Upload da arquivo no Google App Engine (BlobProperty)",
    "date" : "2011-04-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Essa semana que passou tive uma necessidade para um sistema de trabalhar com UPLOAD de arquivos, ate ai é simples, só que o sistema estava em Google App Engine, depois de apanhar um pouco resolvi fazer um post aqui no Blog para deixar documentado como não é complicado trabalhar com BlobProperty no BigTable.\n\nPrimeiro vamos criar um Modal onde vai ter dois campo o arquivo e o mimetype dele:\n\n``python\nclass DatastoreFile(db.Model):\n    data = db.BlobProperty(required=True)\n    mimetype = db.StringProperty(required=True)\n`\n\nAgora vamos criar a views onde ele vai processar o formulario e o POST do formulario:\n\n`python\nclass MainHandler(webapp.RequestHandler):\n    def get(self):\n        self.response.out.write(template.render(upload.html, {}))\n\n    def post(self):\n        file = self.request.POST['file']\n\n        entity = DatastoreFile(data=file.value, mimetype=file.type)\n        entity.put()\n\n        file_url = http://%s/%d/%s % (self.request.host, entity.key().id(), file.name)\n        self.response.out.write(Your uploaded file is now available at %s % (file_url,))\n`\n\nPodemos notar que na definição get() temos apenas a renderização do upload.html, o conteudo dele é bem simples, temos um input do tipo file e outro submit:\n\n`html\n<html>\n<head>\n  <title>File Upload</title>\n</head>\n<body>\n  <form method=post action=/ enctype=multipart/form-data>\n    <input type=file name=file />\n    <input type=submit value=Upload />\n  </form>\n</body>\n</html>\n`\n\nFalando da definição post() que esta na classe MainHandler ela que faz o trabalho de fazer o UPLOAD do arquivo para dentro do BlobProperty, é um processo bem simples, a variável file recebe o POST do input file, depois disso chamamos o modal que tem o nome de DatastoreFile passando dois parâmetros que é os dois campos criados, o data e mimetype, depois disso é só fazer o put() que seja salvo no banco de dados. Dentro do post() eu gero o link para download do arquivo na variável file_url, onde passo o HOST (url do sistema), id() (do arquivo que foi feito upload) e file name (Nome do campo que recebeu o arquivo).\n\nAgora temos que fazer a classe para download do arquivo onde vamos mudar o Content-Type do response para o mime-type do arquivo que foi feito o upload, exemplo: fiz o upload de um arquivo no formato JPG o mime type dele é image/jpeg, então tenho que fazer o responser renderizar em formatado image/jpeg.\n\nNa URL que montamos para download passamos a seguinte informação id e file name onde temos que criar uma definição get() que receba essas informações:\n\n`python\nclass DownloadHandler(webapp.RequestHandler):\n    def get(self, id, filename):\n        entity = DatastoreFile.get_by_id(int(id))\n        self.response.headers['Content-Type'] = entity.mimetype\n        self.response.out.write(entity.data)\n`\n\nRecebendo as duas variáveis podemos fazer um consulta no BigTable de forma simples onde busco o id, pego o retorno do banco de dados e coloco que o response.headers['Content-Type'] é o mime-type que esta salvo no banco e depois é só escrever o arquivo na tela.\n\nAgora vamos criar as rotas da URL:\n\n`python\ndef main():\n    application = webapp.WSGIApplication([\n        ('/', MainHandler),\n        ('/(\\d+)/(.*)', DownloadHandler)\n        ],debug=True)\n    util.run_wsgi_app(application)\n\nif __name__ == '__main__':\n    main()\n``\n\nQuem ainda estiver com duvida pode dar uma olhar no repositorio:\n\nhttps://bitbucket.org/avelino/post_py_upload_de_arquivo_no_gae/src",
    "type" : "blog",
    "file-path" : "content/blog/2011-04-23-upload-de-arquivo-no-google-app-engine-blobproperty.md"
  }, {
    "title" : "Criando sistema com Multithreaded em Python",
    "date" : "2011-04-01T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Multithreaded é quando temos mais de um programa executando ao mesmo tempo, totalmente diferente de executar duas vez o mesmo programa, com threads o sistema vai ser executado apenas uma vez e via thread vai processar mais de uma função ao mesmo tempo, isso é necessario para concorrência em sistema.\n\nAlgumas vantagens de trabalha com threads:\n\n- Múltiplos processo ao mesmo tempo e pode, portanto, compartilhar informações e comunicar uns com os outros mais facilmente do que se fossem processos separados;\n- Menos consumo de memória, pois o mesmo vai consumir mais CPU.\n\nUma thread tem um começo, meio e fim, assim podemos colocar um ponteiro de instrução para acompanhar onde esta sendo processado cada thread dentro de seu contexto.\n\n- Ela pode ser antecipada (interrompido);\n- Pode ser temporariamente suspensos (também conhecido como sleep), enquanto outros segmentos estão em execução - isso é chamado de rendimento.\n\nIniciando uma nova Thread:\n\n``python\n#!/usr/bin/python\n-- coding: UTF-8 --\n\nimport thread\nimport time\n\nDefinição da função de thread\ndef print_time( name, delay):\n    count = 0\n    while count < 5:\n        time.sleep(delay)\n        count += 1\n        print %s: %s % ( name, time.ctime(time.time()) )\n\nCriar dois tópicos\ntry:\n    thread.start_new_thread( print_time, (Thread-1, 2, ) )\n    thread.start_new_thread( print_time, (Thread-2, 4, ) )\nexcept:\n    print Erro: não conseguiu iniciar a thread\n\nwhile 1:\n    pass\n`\n\nExecutando:\n\n`shell\npython example.py\n``\n\n> Thread-1: Thu Mar 31 11:03:20 2011\n> Thread-2: Thu Mar 31 11:03:22 2011\n> Thread-1: Thu Mar 31 11:03:22 2011\n> Thread-1: Thu Mar 31 11:03:24 2011\n> Thread-2: Thu Mar 31 11:03:26 2011\n> Thread-1: Thu Mar 31 11:03:26 2011\n> Thread-1: Thu Mar 31 11:03:28 2011\n> Thread-2: Thu Mar 31 11:03:30 2011\n> Thread-2: Thu Mar 31 11:03:34 2011\n> Thread-2: Thu Mar 31 11:03:38 2011\n\nSe repararmos temos alguns processo concorrendo ao mesmo tempos, dessa forma já estamos trabalhando com Thread.\n\nModulos da biblioteca thread\n\n- threading.activeCount(): Retorna o número de objetos de thread que estão ativos.\n- threading.currentThread(): Retorna o número de objetos de thread no controle do chamador de thread.\n- threading.enumerate(): Retorna uma lista de todos os objetos de thread que estão atualmente activas.\n- run(): Método é o ponto de partida para uma thread.\n- start(): Método inicia uma thread, chamando o método de execução.\n- join([time]): Espera para terminar.\n- isAlive(): Método verifica se uma thread ainda está em execução.\n- getName(): Método retorno o nome de uma thread.\n- setName(): Método declaro o nome de um thread.",
    "type" : "blog",
    "file-path" : "content/blog/2011-04-01-criando-sistema-com-multithreaded-em-python.md"
  }, {
    "title" : "Certificado EV SSL",
    "date" : "2011-03-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Certificados Digitais EV SSL, ou em português SSL de Validação Avançada, são certificados qualificados que se apresentam aos usuários da Internet de forma distinta dos demais certificados, garantindo assim aos usuários que o site acessado possui um certificado SSL emitido segundo um processo altamente seguro e verificado através de uma auditoria.\n\nHistória\n\nO Comércio via Internet está enfrentando uma crise de segurança. A confiança na segurança de sites está diminuindo, e o número de consumidores que estão deixando de fazer transações on-line está aumentando. Segundo o instituto Forrester Research, ao final de 2005, 24% dos usuários de Internet não compraria via web para os feriados de final de ano pois não se sentiam seguros e 61% reportou que haviam reduzido as compras online por algum motivo.\n\nAgora em 2007 empresas com operações online poderão mostrar definitivamente sua identidade para os seus clientes – e os clientes poderão confirmar esta identidade antes de confiar no site. Essa oportunidade se deve ao resultado da grande evolução no backbone de segurança WEB nos últimos 10 anos. É a introdução de um novo tipo de certificado SSL, o primeiro desde a origem desta tecnologia há mais de uma década atrás.\n\nEstes novos certificados são chamados Certificados Extended Validation SSL e eles representam mais de um ano de esforços feitos pelo CA/Browser Fórum, um consórcio de empresas líderes em manutenção de Browser e Autoridades Certificadoras de SSL. Os Certificados EV SSL irão facilitar o comércio online em todas as suas formas, aumentando a confiança dos usuários, legitimando sites e reduzindo significativamente a eficácia dos ataques de fraude e roubo de senha.\n\n\nEV SSL no Brasil\n\nNo Brasil o certificado está sendo comercializado pela Certisign, Unicert, Comodo e Secsign. Até o final do ano estima-se que do total de vendas de certificados para servidores, 20% sejam no modelo EV SSL. Segundo a projeção da Certisign, isso significa a venda de quase 4.500 certificados.\n\nEspera-se que no prazo de dois anos todas as empresas que se prestam a realizar transações on-line (como sites de e-commerce, bancos, etc...) adotem este produto, pois ele garante identificação visual, maior segurança e conforto para o consumidor.",
    "type" : "blog",
    "file-path" : "content/blog/2011-03-28-certificado-ev-ssl.md"
  }, {
    "title" : "Trabalhando com Python e MongoDB",
    "date" : "2011-03-28T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Hoje MongoDB está começando ficar bem comentado na internet (famosos Database NoSQL). Tenho bastante aplicações em produção trabalhando com MongoDB e outros database NoSQL ambas escrita em Python, vou escrever um pouco como usar o MongoDB na linguagem Python.\n\nComo em qualquer outra linguagem, não tem muito segredo. No Python temos a LIB chamada PyMongo, que simplifica muito o trabalho do programador.\n\nContando que o PyMongo já estejá instalado, seguimos em frente.\n\nComo fazer um conexão:\n\n``python\nfrom pymongo import Connection\nconnection = Connection()\n`\n\nOU\n\n`python\nconnection = Connection('localhost', 27017)\n`\n\nUsar/Criar um Database (no contexto do MongoDB damos o nome de collection):\n\n`python\ndb = connection.forum_database\n`\n\nOU\n\n`python\ndb = connection['forum-database']\n`\n\n\nO MongoDB usa um formato jSON para sua syntax, veja abaixo:\n\n`python\nforum = {author: Thiago Avelino,\n         text: Python e MongoDB,\n         tags: [mongodb, python, pymongo]}\n`\n\n\nInserindo em um Documento, usando o método insert():\n\n`python\nimaster = db.imaster\nimaster.insert(forum)\n`\n> ObjectId('4c7400f42d73303fd2000000')\n\n\nApós rodar o insert() ele criou um documento fisico no servidor, podemos ver este registro da seguinte forma:\n\n`python\ndb.collection_names()\n`\n> [u'imaster', u'system.indexes']\n\n\nSelecionando apenas um documento com find_one()\n\n`python\nimaster.find_one()\n`\n> {u'text': u'Python e MongoDB', u'_id': ObjectId('4c7400f42d73303fd2000000'), u'author': u'Thiago Avelino', u'tags': [u'mongodb', u'python', u'pymongo']}\n\n\nFiltrando, usando condições para selecionar:\n\n`python\nimaster.find_one({author: Thiago Avelino})\n`\n> {u'text': u'Python e MongoDB', u'_id': ObjectId('4c7400f42d73303fd2000000'), u'author': u'Thiago Avelino', u'tags': [u'mongodb', u'python', u'pymongo']}\n\n\nContando:\n\n`python\nimaster.count()\n`\n> 1\n\n\nTemos também alguns ORM Python que trabalha com o MongoDB, um exemplo\n\n> System Message: WARNING/2 (<string>, line 86)\n> Line block ends without a blank line.\n\né o MongoEngine que trabalha exatamente igual o ORM do Django. | Veja um exemplo usando MongoEngine:\n\n`python\nclass BlogPost(Document):\n    title = StringField(required=True, max_length=200)\n    posted = DateTimeField(default=datetime.datetime.now)\n    tags = ListField(StringField(max_length=50))\n\nclass TextPost(BlogPost):\n    content = StringField(required=True)\n\nclass LinkPost(BlogPost):\n    url = StringField(required=True)\n\nCreate a text-based post\n>>> post1 = TextPost(title='Using MongoEngine', content='See the tutorial')\n>>> post1.tags = ['mongodb', 'mongoengine']\n>>> post1.save()\n\nCreate a link-based post\n>>> post2 = LinkPost(title='MongoEngine Docs', url='hmarr.com/mongoengine')\n>>> post2.tags = ['mongoengine', 'documentation']\n>>> post2.save()\n\nIterate over all posts using the BlogPost superclass\n>>> for post in BlogPost.objects:\n...     print '===', post.title, '==='\n...     if isinstance(post, TextPost):\n...         print post.content\n...     elif isinstance(post, LinkPost):\n...         print 'Link:', post.url\n...     print\n...\n\n>>> len(BlogPost.objects)\n2\n>>> len(HtmlPost.objects)\n1\n>>> len(LinkPost.objects)\n1\n\nFind tagged posts\n>>> len(BlogPost.objects(tags='mongoengine'))\n2\n>>> len(BlogPost.objects(tags='mongodb'))\n1\n``",
    "type" : "blog",
    "file-path" : "content/blog/2011-03-28-trabalhando-com-python-e-mongodb.md"
  }, {
    "title" : "Coding Dojo o melhor lugar para pratica Programação",
    "date" : "2011-02-21T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Nós da Comunidade Python São Paulo estamos no 10' Coding Dojo.\n\nParabéns a todos os organizadores e participantes.\n\nAgradeço a todas as empresa que abriu a porta para nós da Comunidade Python São Paulo poder realizar o Coding Dojo.\n\nCoding Dojo é uma reunião onde um grupo de programadores se reúnem para trabalhar em um desafio de programação. Eles estão lá para se divertir e se envolver em prática a fim de melhorar suas habilidades.\n\nVeja a baixo videos gravado no 10' Dojo da Comunidade Python São Paulo onde foi realizado na empresa Gonow Tecnologia:\n\n{{< youtube -hZkXKqXCh8 >}}\n\n{{< youtube jh8YA8fX3xA >}}\n\n{{< youtube FuL173EXH7Y >}}\n\n{{< youtube _7LtlsyfjPs >}}",
    "type" : "blog",
    "file-path" : "content/blog/2011-02-21-coding-dojo-o-melhor-lugar-para-pratica-programacao.md"
  }, {
    "title" : "Meu ambiente de trabalho em 7 itens",
    "date" : "2011-02-20T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "O Licio me convidou para entrar no ritmo dos 7 itens então vamos lá...\n\n GIT + Mercurial\n\n> Geralmente procuro usar Mercurial no Bitbucket mas costumo usar bastante Git no Github. Uso o Github porque vejo ele muito mais do que um espaço para criar repositórios, e sim uma rede social de Desenvolvedor.\n\n VIM\n\n> Depois de muito testar o Emacs, TextMate e VIM, resolvi afirma que para mim o melhor é o VIM, consigo fazer tudo que preciso e não tenho tantos problemas com  como no TextMate. Falando um pouco sobre o Emacs, realmente é um ótimo editor, só que cansa brincar de street fighter quando vou  programar (Para os que conhece Emacs vai entender).\n> Depois de conhecer o QMX (Evangelista VIM) comecei ver o VIM como um ótimo editor.\n\n OS X\n\n> Depois de passar muito tempo com ambiente Linux, vi que não bastava a simplicidade de um gerenciamento de pacote como yum ou apt-get e sim um sistema onde conseguisse uma melhor integração com a camada de hardware. Por isso hoje uso Macbook, com o sistema operacional OS X.\n> A bateria dura muito mais tempo do que qual quer outro Notebook que eu tive até hoje.\n\n iterm2 + homebrew\n\n> Utilizo o iterm2 como terminal do meu Mac e tem me agradado muito a parte de troca de abas, como gerenciador de pacote utilizo o homebrew (que me foi apresentado pelo Fabio Akita, automaticamente já sabemos que é escrito em Ruby :/ )\n\n pip + virtualenv + virtualenvwrapper\n\n> Como sou desenvolvedor Python não temos trabalhar com ultiplos projetos sem um Virtualenv para isolar meus ambientes para cada projeto, o Virtualenvwrapper uso para simplificar a criação de cada ambiente e o pip uso para instalar bibliotecas Python.\n\n Dropbox\n\n> Realmente o Dropbox me salvou muitas vezes, com o uso dele não preciso ficar levando pen drive para cliente ou qual quer local que eu for.\n\n Google Apps (Gmail)\n\n> Não sei qualificar quantos % da minha vida profissional esta encima do Google Apps, mas sei que tem muita coisa lá.\n\nAgora para seguir com o meme, convido meus amigos:\n\n Christiano Anderson\n Bruno Rocha\n Bernardo Heynemann\n* Rodrigo Bernardo Pimentel",
    "type" : "blog",
    "file-path" : "content/blog/2011-02-20-meu-ambiente-de-trabalho-em-7-itens.md"
  }, {
    "title" : "Problema com Celery \\\"process exiting with exitcode 1\\\"",
    "date" : "2010-12-26T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Hoje estava rodando o Celery em um projeto e me deparei com um problema, o process exiting with exitcode 1 quando dava start no Celery:\n\n``shell\n[root@xen-01 gonow]python2.7 manage.py celeryd -v 2 -B -s celery -E -l INFO\n[2010-12-16 09:18:13,184: WARNING/MainProcess] celery@xen-01 v2.1.3 is starting.\n[2010-12-16 09:18:13,185: WARNING/MainProcess] /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/apps/\n        worker.py:107: UserWarning: Running celeryd with superuser privileges is not encouraged!\n  Running celeryd with superuser privileges is not encouraged!)\n[2010-12-16 09:18:13,185: WARNING/MainProcess] /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/apps/\n        worker.py:110: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in a production environment!\n  warnings.warn(Using settings.DEBUG leads to a memory leak, \n[2010-12-16 09:18:13,188: WARNING/MainProcess]\nConfiguration ->\n    . broker -> ghettoq.taproot.Database://guest@localhost/\n    . queues ->\n        . celery -> exchange:celery (direct) binding:celery\n    . concurrency -> 2\n    . loader -> djcelery.loaders.DjangoLoader\n    . logfile -> [stderr]@INFO\n    . events -> ON\n    . beat -> ON\n    . tasks ->\n        . gonow.vps.tasks.lvm\n[2010-12-16 09:18:13,213: INFO/PoolWorker-2] child process calling self.run()\n[2010-12-16 09:18:13,223: INFO/PoolWorker-3] child process calling self.run()\n[2010-12-16 09:18:13,237: INFO/Beat] child process calling self.run()\n[2010-12-16 09:18:13,239: INFO/Beat] Celerybeat: Starting...\n[2010-12-16 09:18:13,239: WARNING/MainProcess] celery@xen-01 has started.\n[2010-12-16 09:18:13,257: INFO/Beat] process shutting down\n[2010-12-16 09:18:13,258: WARNING/Beat] Process Beat:\n[2010-12-16 09:18:13,259: WARNING/Beat] Traceback (most recent call last):\n[2010-12-16 09:18:13,259: WARNING/Beat] File /usr/local/lib/python2.7/multiprocessing/process.py, line 232, in _bootstrap\n[2010-12-16 09:18:13,284: WARNING/Beat] self.run()\n[2010-12-16 09:18:13,285: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 392, in run\n[2010-12-16 09:18:13,291: WARNING/Beat] self.service.start(embedded_process=True)\n[2010-12-16 09:18:13,292: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 322, in start\n[2010-12-16 09:18:13,292: WARNING/Beat] humanize_seconds(self.scheduler.max_interval)))\n[2010-12-16 09:18:13,292: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 362, in scheduler\n[2010-12-16 09:18:13,292: WARNING/Beat] self._scheduler = self.get_scheduler()\n[2010-12-16 09:18:13,292: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 354, in get_scheduler\n[2010-12-16 09:18:13,293: WARNING/Beat] lazy=lazy)\n[2010-12-16 09:18:13,293: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/utils/\n        __init__.py, line 362, in instantiate\n[2010-12-16 09:18:13,297: WARNING/Beat] return get_cls_by_name(name)(args, kwargs)\n[2010-12-16 09:18:13,298: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 274, in __init__\n[2010-12-16 09:18:13,298: WARNING/Beat] Scheduler.__init__(self, args, **kwargs)\n[2010-12-16 09:18:13,298: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 150, in __init__\n[2010-12-16 09:18:13,299: WARNING/Beat] self.setup_schedule()\n[2010-12-16 09:18:13,299: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 279, in setup_schedule\n[2010-12-16 09:18:13,299: WARNING/Beat] self.merge_inplace(conf.CELERYBEAT_SCHEDULE)\n[2010-12-16 09:18:13,299: WARNING/Beat] File /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/beat.py,\n        line 250, in merge_inplace\n[2010-12-16 09:18:13,299: WARNING/Beat] if self.get(key):\n[2010-12-16 09:18:13,300: WARNING/Beat] File /usr/local/lib/python2.7/UserDict.py, line 61, in get\n[2010-12-16 09:18:13,310: WARNING/Beat] return self[key]\n[2010-12-16 09:18:13,310: WARNING/Beat] File /usr/local/lib/python2.7/UserDict.py, line 20, in __getitem__\n[2010-12-16 09:18:13,310: WARNING/Beat] return self.data[key]\n[2010-12-16 09:18:13,311: WARNING/Beat] File /usr/local/lib/python2.7/shelve.py, line 122, in __getitem__\n[2010-12-16 09:18:13,317: WARNING/Beat] value = Unpickler(f).load()\n[2010-12-16 09:18:13,318: WARNING/Beat] EOFError\n[2010-12-16 09:18:13,318: INFO/Beat] process exiting with exitcode 1\n`\n\nO motivo desse error é que antes de dar start no Celery ele já esta rodando em memoria. Quando rodamos o Celery ele cria alguns arquivos no projeto para gerenciamento de Task, um dele é o celery.dir  que guarda informações das function que vai ser processada de X em X tempo.\n\nBom a solução para esse casa é apagar o arquivo celery.dir assim ele zera o task do Celery, quando der start novamente ele recria o celery.dir.\n\nAgora ele só normal:\n\n`shell\n[root@xen-01 gonow]python2.7 manage.py celeryd -v 2 -B -s celery -E -l INFO\n[2010-12-16 09:18:28,539: WARNING/MainProcess] celery@xen-01 v2.1.3 is starting.\n[2010-12-16 09:18:28,540: WARNING/MainProcess] /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/apps/\n        worker.py:107:\n        UserWarning: Running celeryd with superuser privileges is not encouraged!\n  Running celeryd with superuser privileges is not encouraged!)\n[2010-12-16 09:18:28,540: WARNING/MainProcess] /usr/local/lib/python2.7/site-packages/celery-2.1.3-py2.7.egg/celery/apps/\n        worker.py:110:\n        UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in a production environment!\n  warnings.warn(Using settings.DEBUG leads to a memory leak, \n[2010-12-16 09:18:28,543: WARNING/MainProcess]\nConfiguration ->\n    . broker -> ghettoq.taproot.Database://guest@localhost/\n    . queues ->\n        . celery -> exchange:celery (direct) binding:celery\n    . concurrency -> 2\n    . loader -> djcelery.loaders.DjangoLoader\n    . logfile -> [stderr]@INFO\n    . events -> ON\n    . beat -> ON\n    . tasks ->\n        . gonow.vps.tasks.lvm\n[2010-12-16 09:18:28,568: INFO/PoolWorker-2] child process calling self.run()\n[2010-12-16 09:18:28,578: INFO/PoolWorker-3] child process calling self.run()\n[2010-12-16 09:18:28,591: INFO/Beat] child process calling self.run()\n[2010-12-16 09:18:28,593: INFO/Beat] Celerybeat: Starting...\n[2010-12-16 09:18:28,596: WARNING/MainProcess] celery@xen-01 has started.\n``",
    "type" : "blog",
    "file-path" : "content/blog/2010-12-26-problema-com-celery-process-exiting-with-exitcode-1.md"
  }, {
    "title" : "Calculo de Bhaskara via Python",
    "date" : "2010-10-15T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "O foco este post é levar você aprender computação com Python.\n\nPara calcular as raízes em função do segundo grau, utilizamos uma fórmula muito querida por todos que estudam no ensino médio, a famosa fórmula de Bhaskara:\n\n\n\nOnde cada letra desta fórmula representa os coeficientes da função do segundo grau que queremos resolver. Basta substituir e achar os valores. Podem notar que há um ± no meio da fórmula. Pois é, é daí que irá sair dois resultados: um com o sinal de + e outro com o sinal de -. Veja o exemplo:\n\n\n\nNeste exemplo temos os coeficientes, a=2, b= -6 e c= -20 (Muita atenção para os sinais)\nAgora substituindo na fórmula de Bhaskara:\n\n\n\nAgora chegamos no momento crucial do cáculo das raízes.\nDevemos separar esta conta em duas: uma com o sinal de + e a outra com o sinal de -. Assim:\n\n\n\nPortanto as duas raízes da função são 5 e -2.\n\nChega de blablabla e vamos ver como isso fica em Python:\n\n``python\nimport sys, math\n\na=input (a:)\nb=input (b:)\nc=input (c:)\nd=(b^2)-(4ac) Mário Meyer\nd=((b^2)-4a)c Esta errado esta linha, usar a linha superior.\nif d<0 :\n        print (Delta negativo, raiz impossivel de ser extraida.)\n        sys.exit()\n\nelse : print Delta: %s. % d\n        m1=math.sqrt(d)\n        x1=(-b+m1)/(2a)\n        x2=(-b-m1)/(2a)\n        print Raiz ~ X1= %s. % x1\n        print Raiz ~ X2= %s. % x2\n``",
    "type" : "blog",
    "file-path" : "content/blog/2010-10-15-calculo-de-bhaskara-via-python.md"
  }, {
    "title" : "Ajudando projeto open source: MongoEngine",
    "date" : "2010-09-06T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "Com grande orgunho que venho anunciar a todos que o projeto MongoEngine tem path pt_BR.\n\nhttp://mongoengine.org/pt_BR/\n\nPor enquanto estamos apenas com o site em Português e trabalhando encima da documentação.\n\nCaso você queira ajudar o projeto por favor mandar email para avelino AT mongoengine DOT org",
    "type" : "blog",
    "file-path" : "content/blog/2010-09-06-ajudando-o-projeto-mongoengine.md"
  }, {
    "title" : "TDA Fila com Python",
    "date" : "2010-07-23T00:00:00+00:00",
    "tags" : [ ],
    "url" : "https://avelino.run/",
    "content" : "O foco este post é levar você aprender computação com Python.\nO TDA Fila é definido pelas seguintes operações:\n\n__init__: Inicializar uma nova fila vazia\ninsert: Adicionar um novo item à fila\nremove: Remover e retornar um item da fila. O item retornado é o que foi adicionado primeiro.\nisEmpty: Checar se a fila está vazia\n\nSegue abaixo um código para explica melhor a implementação TAD Fila.\n\n``python\nclass Queue:\n\tdef __init__(self):\n\t\tself.length = 0\n\t\tself.head = None\n\n\tdef isEmpty(self):\n\t\treturn (self.length == 0)\n\n\tdef insert(self, cargo):\n\t\tnode = Node(cargo)\n\t\tnode.next = None\n\t\tif self.head == None:\n\t\t\tif list is empty the new node goes first\n\t\t\tself.head = node\n\t\telse:\n\t\t\tfind the last node in the list\n\t\t\tlast = self.head\n\t\t\twhile last.next: last = last.next\n\t\t\tappend the new node\n\t\t\tlast.next = node\n\t\t\tself.length = self.length + 1\n\n\tdef remove(self):\n\t\tcargo = self.head.cargo\n\t\tself.head = self.head.next\n\t\tself.length = self.length - 1\n\t\treturn cargo\n`\n\nExistem duas invariantes para um objeto Fila bem formado: o atributo length deve ser o número de nós na fila.\n\n`python\nfrom queue import Queue\nstart = new Queue()\nstart.insert(50)\nstart.insert(99)\nstart.insert(10)\nwhile not start.isEmpty(): print start.remove()\n``\n\n> 50\n> 99\n> 10",
    "type" : "blog",
    "file-path" : "content/blog/2010-07-23-tda-fila-com-python.md"
  } ]
}